{"ast":null,"code":"import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nif (typeof document !== \"undefined\") {\n  var MediumEditor = require(\"medium-editor\");\n}\n\nexport default class ReactMediumEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: this.props.text\n    };\n  }\n\n  componentDidMount() {\n    const dom = ReactDOM.findDOMNode(this);\n    this.medium = new MediumEditor(dom, this.props.options);\n    this.medium.subscribe(\"editableInput\", e => {\n      this._updated = true;\n      this.change(dom.innerHTML);\n    });\n  }\n\n  componentDidUpdate() {\n    this.medium.restoreSelection();\n  }\n\n  componentWillUnmount() {\n    this.medium.destroy();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.text !== this.state.text && !this._updated) {\n      this.setState({\n        text: nextProps.text\n      });\n    }\n\n    if (this._updated) this._updated = false;\n  }\n\n  render() {\n    const {\n      options,\n      text,\n      tag,\n      contentEditable,\n      dangerouslySetInnerHTML,\n      ...props\n    } = this.props;\n    props.dangerouslySetInnerHTML = {\n      __html: this.state.text\n    };\n\n    if (this.medium) {\n      this.medium.saveSelection();\n    }\n\n    return /*#__PURE__*/React.createElement(tag, props);\n  }\n\n  change(text) {\n    if (this.props.onChange) this.props.onChange(text, this.medium);\n  }\n\n}\nReactMediumEditor.defaultProps = {\n  tag: \"div\"\n};","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/src/pages/write/CustomEditor.jsx"],"names":["React","ReactDOM","document","MediumEditor","require","ReactMediumEditor","Component","constructor","props","state","text","componentDidMount","dom","findDOMNode","medium","options","subscribe","e","_updated","change","innerHTML","componentDidUpdate","restoreSelection","componentWillUnmount","destroy","componentWillReceiveProps","nextProps","setState","render","tag","contentEditable","dangerouslySetInnerHTML","__html","saveSelection","createElement","onChange","defaultProps"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,IAAI,OAAOC,QAAP,KAAoB,WAAxB,EAAqC;AACnC,MAAIC,YAAY,GAAGC,OAAO,CAAC,eAAD,CAA1B;AACD;;AAED,eAAe,MAAMC,iBAAN,SAAgCL,KAAK,CAACM,SAAtC,CAAgD;AAK7DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE;AADN,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,GAAG,GAAGX,QAAQ,CAACY,WAAT,CAAqB,IAArB,CAAZ;AAEA,SAAKC,MAAL,GAAc,IAAIX,YAAJ,CAAiBS,GAAjB,EAAsB,KAAKJ,KAAL,CAAWO,OAAjC,CAAd;AACA,SAAKD,MAAL,CAAYE,SAAZ,CAAsB,eAAtB,EAAwCC,CAAD,IAAO;AAC5C,WAAKC,QAAL,GAAgB,IAAhB;AACA,WAAKC,MAAL,CAAYP,GAAG,CAACQ,SAAhB;AACD,KAHD;AAID;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKP,MAAL,CAAYQ,gBAAZ;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKT,MAAL,CAAYU,OAAZ;AACD;;AAEDC,EAAAA,yBAAyB,CAACC,SAAD,EAAY;AACnC,QAAIA,SAAS,CAAChB,IAAV,KAAmB,KAAKD,KAAL,CAAWC,IAA9B,IAAsC,CAAC,KAAKQ,QAAhD,EAA0D;AACxD,WAAKS,QAAL,CAAc;AAAEjB,QAAAA,IAAI,EAAEgB,SAAS,CAAChB;AAAlB,OAAd;AACD;;AAED,QAAI,KAAKQ,QAAT,EAAmB,KAAKA,QAAL,GAAgB,KAAhB;AACpB;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AACJb,MAAAA,OADI;AAEJL,MAAAA,IAFI;AAGJmB,MAAAA,GAHI;AAIJC,MAAAA,eAJI;AAKJC,MAAAA,uBALI;AAMJ,SAAGvB;AANC,QAOF,KAAKA,KAPT;AAQAA,IAAAA,KAAK,CAACuB,uBAAN,GAAgC;AAAEC,MAAAA,MAAM,EAAE,KAAKvB,KAAL,CAAWC;AAArB,KAAhC;;AAEA,QAAI,KAAKI,MAAT,EAAiB;AACf,WAAKA,MAAL,CAAYmB,aAAZ;AACD;;AAED,wBAAOjC,KAAK,CAACkC,aAAN,CAAoBL,GAApB,EAAyBrB,KAAzB,CAAP;AACD;;AAEDW,EAAAA,MAAM,CAACT,IAAD,EAAO;AACX,QAAI,KAAKF,KAAL,CAAW2B,QAAf,EAAyB,KAAK3B,KAAL,CAAW2B,QAAX,CAAoBzB,IAApB,EAA0B,KAAKI,MAA/B;AAC1B;;AA3D4D;AAA1CT,iB,CACZ+B,Y,GAAe;AACpBP,EAAAA,GAAG,EAAE;AADe,C","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nif (typeof document !== \"undefined\") {\r\n  var MediumEditor = require(\"medium-editor\");\r\n}\r\n\r\nexport default class ReactMediumEditor extends React.Component {\r\n  static defaultProps = {\r\n    tag: \"div\",\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      text: this.props.text,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dom = ReactDOM.findDOMNode(this);\r\n\r\n    this.medium = new MediumEditor(dom, this.props.options);\r\n    this.medium.subscribe(\"editableInput\", (e) => {\r\n      this._updated = true;\r\n      this.change(dom.innerHTML);\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.medium.restoreSelection();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.medium.destroy();\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.text !== this.state.text && !this._updated) {\r\n      this.setState({ text: nextProps.text });\r\n    }\r\n\r\n    if (this._updated) this._updated = false;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      options,\r\n      text,\r\n      tag,\r\n      contentEditable,\r\n      dangerouslySetInnerHTML,\r\n      ...props\r\n    } = this.props;\r\n    props.dangerouslySetInnerHTML = { __html: this.state.text };\r\n\r\n    if (this.medium) {\r\n      this.medium.saveSelection();\r\n    }\r\n\r\n    return React.createElement(tag, props);\r\n  }\r\n\r\n  change(text) {\r\n    if (this.props.onChange) this.props.onChange(text, this.medium);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}