{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/splitcellcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { findAncestor } from './utils';\n/**\n * The split cell command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as `'splitTableCellVertically'`\n * and `'splitTableCellHorizontally'`  editor commands.\n *\n * You can split any cell vertically or horizontally by executing this command. For example, to split the selected table cell vertically:\n *\n *\t\teditor.execute( 'splitTableCellVertically' );\n *\n * @extends module:core/command~Command\n */\n\nexport default class SplitCellCommand extends Command {\n  /**\n   * Creates a new `SplitCellCommand` instance.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n   * @param {Object} options\n   * @param {String} options.direction Indicates whether the command should split cells `'horizontally'` or `'vertically'`.\n   */\n  constructor(editor, options = {}) {\n    super(editor);\n    /**\n     * The direction that indicates which cell will be split.\n     *\n     * @readonly\n     * @member {String} #direction\n     */\n\n    this.direction = options.direction || 'horizontally';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  refresh() {\n    const model = this.editor.model;\n    const doc = model.document;\n    const tableCell = findAncestor('tableCell', doc.selection.getFirstPosition());\n    this.isEnabled = !!tableCell;\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  execute() {\n    const model = this.editor.model;\n    const document = model.document;\n    const selection = document.selection;\n    const firstPosition = selection.getFirstPosition();\n    const tableCell = findAncestor('tableCell', firstPosition);\n    const isHorizontally = this.direction === 'horizontally';\n    const tableUtils = this.editor.plugins.get('TableUtils');\n\n    if (isHorizontally) {\n      tableUtils.splitCellHorizontally(tableCell, 2);\n    } else {\n      tableUtils.splitCellVertically(tableCell, 2);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/node_modules/@ckeditor/ckeditor5-table/src/commands/splitcellcommand.js"],"names":["Command","findAncestor","SplitCellCommand","constructor","editor","options","direction","refresh","model","doc","document","tableCell","selection","getFirstPosition","isEnabled","execute","firstPosition","isHorizontally","tableUtils","plugins","get","splitCellHorizontally","splitCellVertically"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,OAAP,MAAoB,sCAApB;AACA,SAASC,YAAT,QAA6B,SAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,gBAAN,SAA+BF,OAA/B,CAAuC;AACrD;AACD;AACA;AACA;AACA;AACA;AACA;AACCG,EAAAA,WAAW,CAAEC,MAAF,EAAUC,OAAO,GAAG,EAApB,EAAyB;AACnC,UAAOD,MAAP;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKE,SAAL,GAAiBD,OAAO,CAACC,SAAR,IAAqB,cAAtC;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,OAAO,GAAG;AACT,UAAMC,KAAK,GAAG,KAAKJ,MAAL,CAAYI,KAA1B;AACA,UAAMC,GAAG,GAAGD,KAAK,CAACE,QAAlB;AAEA,UAAMC,SAAS,GAAGV,YAAY,CAAE,WAAF,EAAeQ,GAAG,CAACG,SAAJ,CAAcC,gBAAd,EAAf,CAA9B;AAEA,SAAKC,SAAL,GAAiB,CAAC,CAACH,SAAnB;AACA;AAED;AACD;AACA;;;AACCI,EAAAA,OAAO,GAAG;AACT,UAAMP,KAAK,GAAG,KAAKJ,MAAL,CAAYI,KAA1B;AACA,UAAME,QAAQ,GAAGF,KAAK,CAACE,QAAvB;AACA,UAAME,SAAS,GAAGF,QAAQ,CAACE,SAA3B;AAEA,UAAMI,aAAa,GAAGJ,SAAS,CAACC,gBAAV,EAAtB;AACA,UAAMF,SAAS,GAAGV,YAAY,CAAE,WAAF,EAAee,aAAf,CAA9B;AAEA,UAAMC,cAAc,GAAG,KAAKX,SAAL,KAAmB,cAA1C;AAEA,UAAMY,UAAU,GAAG,KAAKd,MAAL,CAAYe,OAAZ,CAAoBC,GAApB,CAAyB,YAAzB,CAAnB;;AAEA,QAAKH,cAAL,EAAsB;AACrBC,MAAAA,UAAU,CAACG,qBAAX,CAAkCV,SAAlC,EAA6C,CAA7C;AACA,KAFD,MAEO;AACNO,MAAAA,UAAU,CAACI,mBAAX,CAAgCX,SAAhC,EAA2C,CAA3C;AACA;AACD;;AApDoD","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/commands/splitcellcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { findAncestor } from './utils';\n\n/**\n * The split cell command.\n *\n * The command is registered by {@link module:table/tableediting~TableEditing} as `'splitTableCellVertically'`\n * and `'splitTableCellHorizontally'`  editor commands.\n *\n * You can split any cell vertically or horizontally by executing this command. For example, to split the selected table cell vertically:\n *\n *\t\teditor.execute( 'splitTableCellVertically' );\n *\n * @extends module:core/command~Command\n */\nexport default class SplitCellCommand extends Command {\n\t/**\n\t * Creates a new `SplitCellCommand` instance.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor on which this command will be used.\n\t * @param {Object} options\n\t * @param {String} options.direction Indicates whether the command should split cells `'horizontally'` or `'vertically'`.\n\t */\n\tconstructor( editor, options = {} ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The direction that indicates which cell will be split.\n\t\t *\n\t\t * @readonly\n\t\t * @member {String} #direction\n\t\t */\n\t\tthis.direction = options.direction || 'horizontally';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst model = this.editor.model;\n\t\tconst doc = model.document;\n\n\t\tconst tableCell = findAncestor( 'tableCell', doc.selection.getFirstPosition() );\n\n\t\tthis.isEnabled = !!tableCell;\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\texecute() {\n\t\tconst model = this.editor.model;\n\t\tconst document = model.document;\n\t\tconst selection = document.selection;\n\n\t\tconst firstPosition = selection.getFirstPosition();\n\t\tconst tableCell = findAncestor( 'tableCell', firstPosition );\n\n\t\tconst isHorizontally = this.direction === 'horizontally';\n\n\t\tconst tableUtils = this.editor.plugins.get( 'TableUtils' );\n\n\t\tif ( isHorizontally ) {\n\t\t\ttableUtils.splitCellHorizontally( tableCell, 2 );\n\t\t} else {\n\t\t\ttableUtils.splitCellVertically( tableCell, 2 );\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}