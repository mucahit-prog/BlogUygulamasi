{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontsize/fontsizeediting\n */\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport FontSizeCommand from './fontsizecommand';\nimport { normalizeOptions } from './utils';\nimport { buildDefinition, FONT_SIZE } from '../utils';\n/**\n * The font size editing feature.\n *\n * It introduces the {@link module:font/fontsize/fontsizecommand~FontSizeCommand command} and the `fontSize`\n * attribute in the {@link module:engine/model/model~Model model} which renders in the {@link module:engine/view/view view}\n * as a `<span>` element with either:\n * * a style attribute (`<span style=\"font-size:12px\">...</span>`),\n * * or a class attribute (`<span class=\"text-small\">...</span>`)\n *\n * depending on the {@link module:font/fontsize~FontSizeConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class FontSizeEditing extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  constructor(editor) {\n    super(editor); // Define default configuration using named presets.\n\n    editor.config.define(FONT_SIZE, {\n      options: ['tiny', 'small', 'default', 'big', 'huge']\n    }); // Define view to model conversion.\n\n    const options = normalizeOptions(this.editor.config.get('fontSize.options')).filter(item => item.model);\n    const definition = buildDefinition(FONT_SIZE, options); // Set-up the two-way conversion.\n\n    editor.conversion.attributeToElement(definition); // Add FontSize command.\n\n    editor.commands.add(FONT_SIZE, new FontSizeCommand(editor));\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor; // Allow fontSize attribute on text nodes.\n\n    editor.model.schema.extend('$text', {\n      allowAttributes: FONT_SIZE\n    });\n    editor.model.schema.setAttributeProperties(FONT_SIZE, {\n      isFormatting: true,\n      copyOnEnter: true\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/node_modules/@ckeditor/ckeditor5-font/src/fontsize/fontsizeediting.js"],"names":["Plugin","FontSizeCommand","normalizeOptions","buildDefinition","FONT_SIZE","FontSizeEditing","constructor","editor","config","define","options","get","filter","item","model","definition","conversion","attributeToElement","commands","add","init","schema","extend","allowAttributes","setAttributeProperties","isFormatting","copyOnEnter"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,MAAP,MAAmB,qCAAnB;AAEA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,UAA3C;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,eAAN,SAA8BL,MAA9B,CAAqC;AACnD;AACD;AACA;AACCM,EAAAA,WAAW,CAAEC,MAAF,EAAW;AACrB,UAAOA,MAAP,EADqB,CAGrB;;AACAA,IAAAA,MAAM,CAACC,MAAP,CAAcC,MAAd,CAAsBL,SAAtB,EAAiC;AAChCM,MAAAA,OAAO,EAAE,CACR,MADQ,EAER,OAFQ,EAGR,SAHQ,EAIR,KAJQ,EAKR,MALQ;AADuB,KAAjC,EAJqB,CAcrB;;AACA,UAAMA,OAAO,GAAGR,gBAAgB,CAAE,KAAKK,MAAL,CAAYC,MAAZ,CAAmBG,GAAnB,CAAwB,kBAAxB,CAAF,CAAhB,CAAiEC,MAAjE,CAAyEC,IAAI,IAAIA,IAAI,CAACC,KAAtF,CAAhB;AACA,UAAMC,UAAU,GAAGZ,eAAe,CAAEC,SAAF,EAAaM,OAAb,CAAlC,CAhBqB,CAkBrB;;AACAH,IAAAA,MAAM,CAACS,UAAP,CAAkBC,kBAAlB,CAAsCF,UAAtC,EAnBqB,CAqBrB;;AACAR,IAAAA,MAAM,CAACW,QAAP,CAAgBC,GAAhB,CAAqBf,SAArB,EAAgC,IAAIH,eAAJ,CAAqBM,MAArB,CAAhC;AACA;AAED;AACD;AACA;;;AACCa,EAAAA,IAAI,GAAG;AACN,UAAMb,MAAM,GAAG,KAAKA,MAApB,CADM,CAGN;;AACAA,IAAAA,MAAM,CAACO,KAAP,CAAaO,MAAb,CAAoBC,MAApB,CAA4B,OAA5B,EAAqC;AAAEC,MAAAA,eAAe,EAAEnB;AAAnB,KAArC;AACAG,IAAAA,MAAM,CAACO,KAAP,CAAaO,MAAb,CAAoBG,sBAApB,CAA4CpB,SAA5C,EAAuD;AACtDqB,MAAAA,YAAY,EAAE,IADwC;AAEtDC,MAAAA,WAAW,EAAE;AAFyC,KAAvD;AAIA;;AAzCkD","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module font/fontsize/fontsizeediting\n */\n\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport FontSizeCommand from './fontsizecommand';\nimport { normalizeOptions } from './utils';\nimport { buildDefinition, FONT_SIZE } from '../utils';\n\n/**\n * The font size editing feature.\n *\n * It introduces the {@link module:font/fontsize/fontsizecommand~FontSizeCommand command} and the `fontSize`\n * attribute in the {@link module:engine/model/model~Model model} which renders in the {@link module:engine/view/view view}\n * as a `<span>` element with either:\n * * a style attribute (`<span style=\"font-size:12px\">...</span>`),\n * * or a class attribute (`<span class=\"text-small\">...</span>`)\n *\n * depending on the {@link module:font/fontsize~FontSizeConfig configuration}.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class FontSizeEditing extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( editor ) {\n\t\tsuper( editor );\n\n\t\t// Define default configuration using named presets.\n\t\teditor.config.define( FONT_SIZE, {\n\t\t\toptions: [\n\t\t\t\t'tiny',\n\t\t\t\t'small',\n\t\t\t\t'default',\n\t\t\t\t'big',\n\t\t\t\t'huge'\n\t\t\t]\n\t\t} );\n\n\t\t// Define view to model conversion.\n\t\tconst options = normalizeOptions( this.editor.config.get( 'fontSize.options' ) ).filter( item => item.model );\n\t\tconst definition = buildDefinition( FONT_SIZE, options );\n\n\t\t// Set-up the two-way conversion.\n\t\teditor.conversion.attributeToElement( definition );\n\n\t\t// Add FontSize command.\n\t\teditor.commands.add( FONT_SIZE, new FontSizeCommand( editor ) );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\n\t\t// Allow fontSize attribute on text nodes.\n\t\teditor.model.schema.extend( '$text', { allowAttributes: FONT_SIZE } );\n\t\teditor.model.schema.setAttributeProperties( FONT_SIZE, {\n\t\t\tisFormatting: true,\n\t\t\tcopyOnEnter: true\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}