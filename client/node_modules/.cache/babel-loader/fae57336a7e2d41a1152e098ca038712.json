{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indentui\n */\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\nimport indentIcon from '../theme/icons/indent.svg';\nimport outdentIcon from '../theme/icons/outdent.svg';\n/**\n * The indent UI feature.\n *\n * This plugin registers the `'indent'` and `'outdent'` buttons.\n *\n * **Note**: In order for the commands to work, at least one of the compatible features is required. Read more in\n * the {@link module:indent/indent~Indent indent feature} API documentation.\n *\n * @extends module:core/plugin~Plugin\n */\n\nexport default class IndentUI extends Plugin {\n  /**\n   * @inheritDoc\n   */\n  static get pluginName() {\n    return 'IndentUI';\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  init() {\n    const editor = this.editor;\n    const locale = editor.locale;\n    const t = editor.t;\n    const localizedIndentIcon = locale.uiLanguageDirection == 'ltr' ? indentIcon : outdentIcon;\n    const localizedOutdentIcon = locale.uiLanguageDirection == 'ltr' ? outdentIcon : indentIcon;\n\n    this._defineButton('indent', t('Increase indent'), localizedIndentIcon);\n\n    this._defineButton('outdent', t('Decrease indent'), localizedOutdentIcon);\n  }\n  /**\n   * Defines a UI button.\n   *\n   * @param {String} commandName\n   * @param {String} label\n   * @param {String} icon\n   * @private\n   */\n\n\n  _defineButton(commandName, label, icon) {\n    const editor = this.editor;\n    editor.ui.componentFactory.add(commandName, locale => {\n      const command = editor.commands.get(commandName);\n      const view = new ButtonView(locale);\n      view.set({\n        label,\n        icon,\n        tooltip: true\n      });\n      view.bind('isOn', 'isEnabled').to(command, 'value', 'isEnabled');\n      this.listenTo(view, 'execute', () => editor.execute(commandName));\n      return view;\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/node_modules/@ckeditor/ckeditor5-indent/src/indentui.js"],"names":["ButtonView","Plugin","indentIcon","outdentIcon","IndentUI","pluginName","init","editor","locale","t","localizedIndentIcon","uiLanguageDirection","localizedOutdentIcon","_defineButton","commandName","label","icon","ui","componentFactory","add","command","commands","get","view","set","tooltip","bind","to","listenTo","execute"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAOA,UAAP,MAAuB,8CAAvB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,QAAN,SAAuBH,MAAvB,CAA8B;AAC5C;AACD;AACA;AACsB,aAAVI,UAAU,GAAG;AACvB,WAAO,UAAP;AACA;AAED;AACD;AACA;;;AACCC,EAAAA,IAAI,GAAG;AACN,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,MAAM,GAAGD,MAAM,CAACC,MAAtB;AACA,UAAMC,CAAC,GAAGF,MAAM,CAACE,CAAjB;AAEA,UAAMC,mBAAmB,GAAGF,MAAM,CAACG,mBAAP,IAA8B,KAA9B,GAAsCT,UAAtC,GAAmDC,WAA/E;AACA,UAAMS,oBAAoB,GAAGJ,MAAM,CAACG,mBAAP,IAA8B,KAA9B,GAAsCR,WAAtC,GAAoDD,UAAjF;;AAEA,SAAKW,aAAL,CAAoB,QAApB,EAA8BJ,CAAC,CAAE,iBAAF,CAA/B,EAAsDC,mBAAtD;;AACA,SAAKG,aAAL,CAAoB,SAApB,EAA+BJ,CAAC,CAAE,iBAAF,CAAhC,EAAuDG,oBAAvD;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,aAAa,CAAEC,WAAF,EAAeC,KAAf,EAAsBC,IAAtB,EAA6B;AACzC,UAAMT,MAAM,GAAG,KAAKA,MAApB;AAEAA,IAAAA,MAAM,CAACU,EAAP,CAAUC,gBAAV,CAA2BC,GAA3B,CAAgCL,WAAhC,EAA6CN,MAAM,IAAI;AACtD,YAAMY,OAAO,GAAGb,MAAM,CAACc,QAAP,CAAgBC,GAAhB,CAAqBR,WAArB,CAAhB;AACA,YAAMS,IAAI,GAAG,IAAIvB,UAAJ,CAAgBQ,MAAhB,CAAb;AAEAe,MAAAA,IAAI,CAACC,GAAL,CAAU;AACTT,QAAAA,KADS;AAETC,QAAAA,IAFS;AAGTS,QAAAA,OAAO,EAAE;AAHA,OAAV;AAMAF,MAAAA,IAAI,CAACG,IAAL,CAAW,MAAX,EAAmB,WAAnB,EAAiCC,EAAjC,CAAqCP,OAArC,EAA8C,OAA9C,EAAuD,WAAvD;AAEA,WAAKQ,QAAL,CAAeL,IAAf,EAAqB,SAArB,EAAgC,MAAMhB,MAAM,CAACsB,OAAP,CAAgBf,WAAhB,CAAtC;AAEA,aAAOS,IAAP;AACA,KAfD;AAgBA;;AAlD2C","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module indent/indentui\n */\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\n\nimport indentIcon from '../theme/icons/indent.svg';\nimport outdentIcon from '../theme/icons/outdent.svg';\n\n/**\n * The indent UI feature.\n *\n * This plugin registers the `'indent'` and `'outdent'` buttons.\n *\n * **Note**: In order for the commands to work, at least one of the compatible features is required. Read more in\n * the {@link module:indent/indent~Indent indent feature} API documentation.\n *\n * @extends module:core/plugin~Plugin\n */\nexport default class IndentUI extends Plugin {\n\t/**\n\t * @inheritDoc\n\t */\n\tstatic get pluginName() {\n\t\treturn 'IndentUI';\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tinit() {\n\t\tconst editor = this.editor;\n\t\tconst locale = editor.locale;\n\t\tconst t = editor.t;\n\n\t\tconst localizedIndentIcon = locale.uiLanguageDirection == 'ltr' ? indentIcon : outdentIcon;\n\t\tconst localizedOutdentIcon = locale.uiLanguageDirection == 'ltr' ? outdentIcon : indentIcon;\n\n\t\tthis._defineButton( 'indent', t( 'Increase indent' ), localizedIndentIcon );\n\t\tthis._defineButton( 'outdent', t( 'Decrease indent' ), localizedOutdentIcon );\n\t}\n\n\t/**\n\t * Defines a UI button.\n\t *\n\t * @param {String} commandName\n\t * @param {String} label\n\t * @param {String} icon\n\t * @private\n\t */\n\t_defineButton( commandName, label, icon ) {\n\t\tconst editor = this.editor;\n\n\t\teditor.ui.componentFactory.add( commandName, locale => {\n\t\t\tconst command = editor.commands.get( commandName );\n\t\t\tconst view = new ButtonView( locale );\n\n\t\t\tview.set( {\n\t\t\t\tlabel,\n\t\t\t\ticon,\n\t\t\t\ttooltip: true\n\t\t\t} );\n\n\t\t\tview.bind( 'isOn', 'isEnabled' ).to( command, 'value', 'isEnabled' );\n\n\t\t\tthis.listenTo( view, 'execute', () => editor.execute( commandName ) );\n\n\t\t\treturn view;\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}