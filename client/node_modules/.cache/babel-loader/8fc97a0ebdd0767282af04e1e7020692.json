{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = UploadAdapterPlugin;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    keys.push.apply(keys, Object.getOwnPropertySymbols(object));\n  }\n\n  if (enumerableOnly) keys = keys.filter(function (sym) {\n    return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n  });\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        (0, _defineProperty2[\"default\"])(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar UploadAdapter = /*#__PURE__*/function () {\n  function UploadAdapter(loader, options) {\n    (0, _classCallCheck2[\"default\"])(this, UploadAdapter); // The file loader instance to use during the upload.\n\n    this.loader = loader;\n    this.options = _objectSpread({\n      url: '',\n      fileName: 'file',\n      headers: {}\n    }, options);\n  } // Starts the upload process.\n\n\n  (0, _createClass2[\"default\"])(UploadAdapter, [{\n    key: \"upload\",\n    value: function upload() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._initRequest();\n\n        _this._initListeners(resolve, reject);\n\n        _this._sendRequest(reject);\n      });\n    } // Aborts the upload process.\n\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      if (this.xhr) {\n        this.xhr.abort();\n      }\n    } // Initializes the XMLHttpRequest object using the URL passed to the constructor.\n\n  }, {\n    key: \"_initRequest\",\n    value: function _initRequest() {\n      var _this2 = this;\n\n      this.xhr = new XMLHttpRequest(); // Note that your request may look different. It is up to you and your editor\n      // integration to choose the right communication channel. This example uses\n      // a POST request with JSON as a data structure but your configuration\n      // could be different.\n\n      var _this$options = this.options,\n          url = _this$options.url,\n          headers = _this$options.headers;\n      this.xhr.open('POST', url, true);\n      Object.keys(headers).forEach(function (key) {\n        _this2.xhr.setRequestHeader(key, headers[key]);\n      });\n      this.xhr.responseType = 'json';\n    } // Initializes XMLHttpRequest listeners.\n\n  }, {\n    key: \"_initListeners\",\n    value: function _initListeners(resolve, reject) {\n      var xhr = this.xhr;\n      var loader = this.loader;\n      var genericErrorText = \"Couldn't upload file: \".concat(loader.file.name, \".\");\n      xhr.addEventListener('error', function () {\n        return reject(genericErrorText);\n      });\n      xhr.addEventListener('abort', function () {\n        return reject();\n      });\n      xhr.addEventListener('load', function () {\n        var response = xhr.response; // This example assumes the XHR server's \"response\" object will come with\n        // an \"error\" which has its own \"message\" that can be passed to reject()\n        // in the upload promise.\n        //\n        // Your integration may handle upload errors in a different way so make sure\n        // it is done properly. The reject() function must be called when the upload fails.\n\n        if (!response || response.error) {\n          return reject(response && response.error ? response.error.message : genericErrorText);\n        } // If the upload is successful, resolve the upload promise with an object containing\n        // at least the \"default\" URL, pointing to the image on the server.\n        // This URL will be used to display the image in the content. Learn more in the\n        // UploadAdapter#upload documentation.\n\n\n        return resolve({\n          \"default\": response.data\n        });\n      }); // Upload progress when it is supported. The file loader has the #uploadTotal and #uploaded\n      // properties which are used e.g. to display the upload progress bar in the editor\n      // user interface.\n\n      if (xhr.upload) {\n        xhr.upload.addEventListener('progress', function (evt) {\n          if (evt.lengthComputable) {\n            loader.uploadTotal = evt.total;\n            loader.uploaded = evt.loaded;\n          }\n        });\n      }\n    } // Prepares the data and sends the request.\n\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(reject) {\n      var _this3 = this;\n\n      this.loader.file.then(function (file) {\n        // Prepare the form data.\n        var data = new FormData();\n        data.append(_this3.options.fileName, file); // Important note: This is the right place to implement security mechanisms\n        // like authentication and CSRF protection. For instance, you can use\n        // XMLHttpRequest.setRequestHeader() to set the request headers containing\n        // the CSRF token generated earlier by your application.\n        // Send the request.\n\n        _this3.xhr.send(data);\n      })[\"catch\"](reject);\n    }\n  }]);\n  return UploadAdapter;\n}();\n\nfunction UploadAdapterPlugin(editor) {\n  var options = editor.config.get('uploadConfig');\n\n  editor.plugins.get('FileRepository').createUploadAdapter = function (loader) {\n    return (// Configure the URL to the upload script in your back-end here!\n      new UploadAdapter(loader, options)\n    );\n  };\n} // Usage:\n// ClassicEditor\n//   .create(document.querySelector('#editor'), {\n//     extraPlugins: [UploadAdapterPlugin],\n//     // ...\n//   })\n//   .catch((error) => ( {\n//     console.log(error);\n//   });","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/node_modules/react-ckeditor-classic/lib/UploadAdapterPlugin.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","UploadAdapterPlugin","_defineProperty2","_classCallCheck2","_createClass2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","push","apply","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","UploadAdapter","loader","options","url","fileName","headers","upload","_this","Promise","resolve","reject","_initRequest","_initListeners","_sendRequest","abort","xhr","_this2","XMLHttpRequest","_this$options","open","setRequestHeader","responseType","genericErrorText","concat","file","name","addEventListener","response","error","message","data","evt","lengthComputable","uploadTotal","total","uploaded","loaded","_this3","then","FormData","append","send","editor","config","get","plugins","createUploadAdapter"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = UploadAdapterPlugin;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2[\"default\"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar UploadAdapter =\n/*#__PURE__*/\nfunction () {\n  function UploadAdapter(loader, options) {\n    (0, _classCallCheck2[\"default\"])(this, UploadAdapter);\n    // The file loader instance to use during the upload.\n    this.loader = loader;\n    this.options = _objectSpread({\n      url: '',\n      fileName: 'file',\n      headers: {}\n    }, options);\n  } // Starts the upload process.\n\n\n  (0, _createClass2[\"default\"])(UploadAdapter, [{\n    key: \"upload\",\n    value: function upload() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this._initRequest();\n\n        _this._initListeners(resolve, reject);\n\n        _this._sendRequest(reject);\n      });\n    } // Aborts the upload process.\n\n  }, {\n    key: \"abort\",\n    value: function abort() {\n      if (this.xhr) {\n        this.xhr.abort();\n      }\n    } // Initializes the XMLHttpRequest object using the URL passed to the constructor.\n\n  }, {\n    key: \"_initRequest\",\n    value: function _initRequest() {\n      var _this2 = this;\n\n      this.xhr = new XMLHttpRequest(); // Note that your request may look different. It is up to you and your editor\n      // integration to choose the right communication channel. This example uses\n      // a POST request with JSON as a data structure but your configuration\n      // could be different.\n\n      var _this$options = this.options,\n          url = _this$options.url,\n          headers = _this$options.headers;\n      this.xhr.open('POST', url, true);\n      Object.keys(headers).forEach(function (key) {\n        _this2.xhr.setRequestHeader(key, headers[key]);\n      });\n      this.xhr.responseType = 'json';\n    } // Initializes XMLHttpRequest listeners.\n\n  }, {\n    key: \"_initListeners\",\n    value: function _initListeners(resolve, reject) {\n      var xhr = this.xhr;\n      var loader = this.loader;\n      var genericErrorText = \"Couldn't upload file: \".concat(loader.file.name, \".\");\n      xhr.addEventListener('error', function () {\n        return reject(genericErrorText);\n      });\n      xhr.addEventListener('abort', function () {\n        return reject();\n      });\n      xhr.addEventListener('load', function () {\n        var response = xhr.response; // This example assumes the XHR server's \"response\" object will come with\n        // an \"error\" which has its own \"message\" that can be passed to reject()\n        // in the upload promise.\n        //\n        // Your integration may handle upload errors in a different way so make sure\n        // it is done properly. The reject() function must be called when the upload fails.\n\n        if (!response || response.error) {\n          return reject(response && response.error ? response.error.message : genericErrorText);\n        } // If the upload is successful, resolve the upload promise with an object containing\n        // at least the \"default\" URL, pointing to the image on the server.\n        // This URL will be used to display the image in the content. Learn more in the\n        // UploadAdapter#upload documentation.\n\n\n        return resolve({\n          \"default\": response.data\n        });\n      }); // Upload progress when it is supported. The file loader has the #uploadTotal and #uploaded\n      // properties which are used e.g. to display the upload progress bar in the editor\n      // user interface.\n\n      if (xhr.upload) {\n        xhr.upload.addEventListener('progress', function (evt) {\n          if (evt.lengthComputable) {\n            loader.uploadTotal = evt.total;\n            loader.uploaded = evt.loaded;\n          }\n        });\n      }\n    } // Prepares the data and sends the request.\n\n  }, {\n    key: \"_sendRequest\",\n    value: function _sendRequest(reject) {\n      var _this3 = this;\n\n      this.loader.file.then(function (file) {\n        // Prepare the form data.\n        var data = new FormData();\n        data.append(_this3.options.fileName, file); // Important note: This is the right place to implement security mechanisms\n        // like authentication and CSRF protection. For instance, you can use\n        // XMLHttpRequest.setRequestHeader() to set the request headers containing\n        // the CSRF token generated earlier by your application.\n        // Send the request.\n\n        _this3.xhr.send(data);\n      })[\"catch\"](reject);\n    }\n  }]);\n  return UploadAdapter;\n}();\n\nfunction UploadAdapterPlugin(editor) {\n  var options = editor.config.get('uploadConfig');\n\n  editor.plugins.get('FileRepository').createUploadAdapter = function (loader) {\n    return (// Configure the URL to the upload script in your back-end here!\n      new UploadAdapter(loader, options)\n    );\n  };\n} // Usage:\n// ClassicEditor\n//   .create(document.querySelector('#editor'), {\n//     extraPlugins: [UploadAdapterPlugin],\n//     // ...\n//   })\n//   .catch((error) => ( {\n//     console.log(error);\n//   });"]},"metadata":{},"sourceType":"script"}