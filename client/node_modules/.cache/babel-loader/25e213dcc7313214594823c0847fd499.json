{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/unlinkcommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport findLinkRange from './findlinkrange';\n/**\n * The unlink command. It is used by the {@link module:link/link~Link link plugin}.\n *\n * @extends module:core/command~Command\n */\n\nexport default class UnlinkCommand extends Command {\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    this.isEnabled = this.editor.model.document.selection.hasAttribute('linkHref');\n  }\n  /**\n   * Executes the command.\n   *\n   * When the selection is collapsed, it removes the `linkHref` attribute from each node with the same `linkHref` attribute value.\n   * When the selection is non-collapsed, it removes the `linkHref` attribute from each node in selected ranges.\n   *\n   * # Decorators\n   *\n   * If {@link module:link/link~LinkConfig#decorators `config.link.decorators`} is specified,\n   * all configured decorators are removed together with the `linkHref` attribute.\n   *\n   * @fires execute\n   */\n\n\n  execute() {\n    const editor = this.editor;\n    const model = this.editor.model;\n    const selection = model.document.selection;\n    const linkCommand = editor.commands.get('link');\n    model.change(writer => {\n      // Get ranges to unlink.\n      const rangesToUnlink = selection.isCollapsed ? [findLinkRange(selection.getFirstPosition(), selection.getAttribute('linkHref'), model)] : selection.getRanges(); // Remove `linkHref` attribute from specified ranges.\n\n      for (const range of rangesToUnlink) {\n        writer.removeAttribute('linkHref', range); // If there are registered custom attributes, then remove them during unlink.\n\n        if (linkCommand) {\n          for (const manualDecorator of linkCommand.manualDecorators) {\n            writer.removeAttribute(manualDecorator.id, range);\n          }\n        }\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/node_modules/@ckeditor/ckeditor5-link/src/unlinkcommand.js"],"names":["Command","findLinkRange","UnlinkCommand","refresh","isEnabled","editor","model","document","selection","hasAttribute","execute","linkCommand","commands","get","change","writer","rangesToUnlink","isCollapsed","getFirstPosition","getAttribute","getRanges","range","removeAttribute","manualDecorator","manualDecorators","id"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,OAAP,MAAoB,sCAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,aAAN,SAA4BF,OAA5B,CAAoC;AAClD;AACD;AACA;AACCG,EAAAA,OAAO,GAAG;AACT,SAAKC,SAAL,GAAiB,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2BC,SAA3B,CAAqCC,YAArC,CAAmD,UAAnD,CAAjB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,OAAO,GAAG;AACT,UAAML,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,KAAK,GAAG,KAAKD,MAAL,CAAYC,KAA1B;AACA,UAAME,SAAS,GAAGF,KAAK,CAACC,QAAN,CAAeC,SAAjC;AACA,UAAMG,WAAW,GAAGN,MAAM,CAACO,QAAP,CAAgBC,GAAhB,CAAqB,MAArB,CAApB;AAEAP,IAAAA,KAAK,CAACQ,MAAN,CAAcC,MAAM,IAAI;AACvB;AACA,YAAMC,cAAc,GAAGR,SAAS,CAACS,WAAV,GACtB,CAAEhB,aAAa,CAAEO,SAAS,CAACU,gBAAV,EAAF,EAAgCV,SAAS,CAACW,YAAV,CAAwB,UAAxB,CAAhC,EAAsEb,KAAtE,CAAf,CADsB,GAC2EE,SAAS,CAACY,SAAV,EADlG,CAFuB,CAKvB;;AACA,WAAM,MAAMC,KAAZ,IAAqBL,cAArB,EAAsC;AACrCD,QAAAA,MAAM,CAACO,eAAP,CAAwB,UAAxB,EAAoCD,KAApC,EADqC,CAErC;;AACA,YAAKV,WAAL,EAAmB;AAClB,eAAM,MAAMY,eAAZ,IAA+BZ,WAAW,CAACa,gBAA3C,EAA8D;AAC7DT,YAAAA,MAAM,CAACO,eAAP,CAAwBC,eAAe,CAACE,EAAxC,EAA4CJ,KAA5C;AACA;AACD;AACD;AACD,KAfD;AAgBA;;AA3CiD","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/unlinkcommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport findLinkRange from './findlinkrange';\n\n/**\n * The unlink command. It is used by the {@link module:link/link~Link link plugin}.\n *\n * @extends module:core/command~Command\n */\nexport default class UnlinkCommand extends Command {\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tthis.isEnabled = this.editor.model.document.selection.hasAttribute( 'linkHref' );\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t * When the selection is collapsed, it removes the `linkHref` attribute from each node with the same `linkHref` attribute value.\n\t * When the selection is non-collapsed, it removes the `linkHref` attribute from each node in selected ranges.\n\t *\n\t * # Decorators\n\t *\n\t * If {@link module:link/link~LinkConfig#decorators `config.link.decorators`} is specified,\n\t * all configured decorators are removed together with the `linkHref` attribute.\n\t *\n\t * @fires execute\n\t */\n\texecute() {\n\t\tconst editor = this.editor;\n\t\tconst model = this.editor.model;\n\t\tconst selection = model.document.selection;\n\t\tconst linkCommand = editor.commands.get( 'link' );\n\n\t\tmodel.change( writer => {\n\t\t\t// Get ranges to unlink.\n\t\t\tconst rangesToUnlink = selection.isCollapsed ?\n\t\t\t\t[ findLinkRange( selection.getFirstPosition(), selection.getAttribute( 'linkHref' ), model ) ] : selection.getRanges();\n\n\t\t\t// Remove `linkHref` attribute from specified ranges.\n\t\t\tfor ( const range of rangesToUnlink ) {\n\t\t\t\twriter.removeAttribute( 'linkHref', range );\n\t\t\t\t// If there are registered custom attributes, then remove them during unlink.\n\t\t\t\tif ( linkCommand ) {\n\t\t\t\t\tfor ( const manualDecorator of linkCommand.manualDecorators ) {\n\t\t\t\t\t\twriter.removeAttribute( manualDecorator.id, range );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}