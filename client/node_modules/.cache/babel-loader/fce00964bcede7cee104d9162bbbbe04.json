{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/ui/inserttableview\n */\nimport View from '@ckeditor/ckeditor5-ui/src/view';\nimport './../../theme/inserttable.css';\n/**\n * The table size view.\n *\n * It renders a 10x10 grid to choose the inserted table size.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\n\nexport default class InsertTableView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n    const bind = this.bindTemplate;\n    /**\n     * A collection of table size box items.\n     *\n     * @readonly\n     * @member {module:ui/viewcollection~ViewCollection}\n     */\n\n    this.items = this.createCollection();\n    /**\n     * The currently selected number of rows of the new table.\n     *\n     * @observable\n     * @member {Number} #rows\n     */\n\n    this.set('rows', 0);\n    /**\n     * The currently selected number of columns of the new table.\n     *\n     * @observable\n     * @member {Number} #columns\n     */\n\n    this.set('columns', 0);\n    /**\n     * The label text displayed under the boxes.\n     *\n     * @observable\n     * @member {String} #label\n     */\n\n    this.bind('label').to(this, 'columns', this, 'rows', (columns, rows) => `${rows} x ${columns}`);\n    this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck']\n      },\n      children: [{\n        tag: 'div',\n        attributes: {\n          class: ['ck-insert-table-dropdown__grid']\n        },\n        children: this.items\n      }, {\n        tag: 'div',\n        attributes: {\n          class: ['ck-insert-table-dropdown__label']\n        },\n        children: [{\n          text: bind.to('label')\n        }]\n      }],\n      on: {\n        mousedown: bind.to(evt => {\n          evt.preventDefault();\n        }),\n        click: bind.to(() => {\n          this.fire('execute');\n        })\n      }\n    }); // Add grid boxes to table selection view.\n\n    for (let index = 0; index < 100; index++) {\n      const boxView = new TableSizeGridBoxView(); // Listen to box view 'over' event which indicates that mouse is over this box.\n\n      boxView.on('over', () => {\n        // Translate box index to the row & column index.\n        const row = Math.floor(index / 10);\n        const column = index % 10; // As row & column indexes are zero-based transform it to number of selected rows & columns.\n\n        this.set('rows', row + 1);\n        this.set('columns', column + 1);\n      });\n      this.items.add(boxView);\n    }\n\n    this.on('change:columns', () => {\n      this._highlightGridBoxes();\n    });\n    this.on('change:rows', () => {\n      this._highlightGridBoxes();\n    });\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  focus() {// The dropdown panel expects DropdownPanelFocusable interface on views passed to dropdown panel. See #30.\n    // The method should be implemented while working on keyboard support for this view. See #22.\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  focusLast() {// The dropdown panel expects DropdownPanelFocusable interface on views passed to dropdown panel. See #30.\n    // The method should be implemented while working on keyboard support for this view. See #22.\n  }\n  /**\n   * Highlights grid boxes depending on rows and columns selected.\n   *\n   * @private\n   */\n\n\n  _highlightGridBoxes() {\n    const rows = this.rows;\n    const columns = this.columns;\n    this.items.map((boxView, index) => {\n      // Translate box index to the row & column index.\n      const itemRow = Math.floor(index / 10);\n      const itemColumn = index % 10; // Grid box is highlighted when its row & column index belongs to selected number of rows & columns.\n\n      const isOn = itemRow < rows && itemColumn < columns;\n      boxView.set('isOn', isOn);\n    });\n  }\n\n}\n/**\n * A single grid box view element.\n *\n * This class is used to render the table size selection grid in {@link module:table/ui/inserttableview~InsertTableView}.\n *\n * @private\n */\n\nclass TableSizeGridBoxView extends View {\n  /**\n   * @inheritDoc\n   */\n  constructor(locale) {\n    super(locale);\n    const bind = this.bindTemplate;\n    /**\n     * Controls whether the grid box view is \"on\".\n     *\n     * @observable\n     * @member {Boolean} #isOn\n     */\n\n    this.set('isOn', false);\n    this.setTemplate({\n      tag: 'div',\n      attributes: {\n        class: ['ck-insert-table-dropdown-grid-box', bind.if('isOn', 'ck-on')]\n      },\n      on: {\n        mouseover: bind.to('over')\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/node_modules/@ckeditor/ckeditor5-table/src/ui/inserttableview.js"],"names":["View","InsertTableView","constructor","locale","bind","bindTemplate","items","createCollection","set","to","columns","rows","setTemplate","tag","attributes","class","children","text","on","mousedown","evt","preventDefault","click","fire","index","boxView","TableSizeGridBoxView","row","Math","floor","column","add","_highlightGridBoxes","focus","focusLast","map","itemRow","itemColumn","isOn","if","mouseover"],"mappings":"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","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module table/ui/inserttableview\n */\n\nimport View from '@ckeditor/ckeditor5-ui/src/view';\n\nimport './../../theme/inserttable.css';\n\n/**\n * The table size view.\n *\n * It renders a 10x10 grid to choose the inserted table size.\n *\n * @extends module:ui/view~View\n * @implements module:ui/dropdown/dropdownpanelfocusable~DropdownPanelFocusable\n */\nexport default class InsertTableView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * A collection of table size box items.\n\t\t *\n\t\t * @readonly\n\t\t * @member {module:ui/viewcollection~ViewCollection}\n\t\t */\n\t\tthis.items = this.createCollection();\n\n\t\t/**\n\t\t * The currently selected number of rows of the new table.\n\t\t *\n\t\t * @observable\n\t\t * @member {Number} #rows\n\t\t */\n\t\tthis.set( 'rows', 0 );\n\n\t\t/**\n\t\t * The currently selected number of columns of the new table.\n\t\t *\n\t\t * @observable\n\t\t * @member {Number} #columns\n\t\t */\n\t\tthis.set( 'columns', 0 );\n\n\t\t/**\n\t\t * The label text displayed under the boxes.\n\t\t *\n\t\t * @observable\n\t\t * @member {String} #label\n\t\t */\n\t\tthis.bind( 'label' )\n\t\t\t.to( this, 'columns', this, 'rows', ( columns, rows ) => `${ rows } x ${ columns }` );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [ 'ck' ]\n\t\t\t},\n\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck-insert-table-dropdown__grid' ]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: this.items\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'div',\n\t\t\t\t\tattributes: {\n\t\t\t\t\t\tclass: [ 'ck-insert-table-dropdown__label' ]\n\t\t\t\t\t},\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\ttext: bind.to( 'label' )\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\n\t\t\ton: {\n\t\t\t\tmousedown: bind.to( evt => {\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t} ),\n\n\t\t\t\tclick: bind.to( () => {\n\t\t\t\t\tthis.fire( 'execute' );\n\t\t\t\t} )\n\t\t\t}\n\t\t} );\n\n\t\t// Add grid boxes to table selection view.\n\t\tfor ( let index = 0; index < 100; index++ ) {\n\t\t\tconst boxView = new TableSizeGridBoxView();\n\n\t\t\t// Listen to box view 'over' event which indicates that mouse is over this box.\n\t\t\tboxView.on( 'over', () => {\n\t\t\t\t// Translate box index to the row & column index.\n\t\t\t\tconst row = Math.floor( index / 10 );\n\t\t\t\tconst column = index % 10;\n\n\t\t\t\t// As row & column indexes are zero-based transform it to number of selected rows & columns.\n\t\t\t\tthis.set( 'rows', row + 1 );\n\t\t\t\tthis.set( 'columns', column + 1 );\n\t\t\t} );\n\n\t\t\tthis.items.add( boxView );\n\t\t}\n\n\t\tthis.on( 'change:columns', () => {\n\t\t\tthis._highlightGridBoxes();\n\t\t} );\n\n\t\tthis.on( 'change:rows', () => {\n\t\t\tthis._highlightGridBoxes();\n\t\t} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfocus() {\n\t\t// The dropdown panel expects DropdownPanelFocusable interface on views passed to dropdown panel. See #30.\n\t\t// The method should be implemented while working on keyboard support for this view. See #22.\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\tfocusLast() {\n\t\t// The dropdown panel expects DropdownPanelFocusable interface on views passed to dropdown panel. See #30.\n\t\t// The method should be implemented while working on keyboard support for this view. See #22.\n\t}\n\n\t/**\n\t * Highlights grid boxes depending on rows and columns selected.\n\t *\n\t * @private\n\t */\n\t_highlightGridBoxes() {\n\t\tconst rows = this.rows;\n\t\tconst columns = this.columns;\n\n\t\tthis.items.map( ( boxView, index ) => {\n\t\t\t// Translate box index to the row & column index.\n\t\t\tconst itemRow = Math.floor( index / 10 );\n\t\t\tconst itemColumn = index % 10;\n\n\t\t\t// Grid box is highlighted when its row & column index belongs to selected number of rows & columns.\n\t\t\tconst isOn = itemRow < rows && itemColumn < columns;\n\n\t\t\tboxView.set( 'isOn', isOn );\n\t\t} );\n\t}\n}\n\n/**\n * A single grid box view element.\n *\n * This class is used to render the table size selection grid in {@link module:table/ui/inserttableview~InsertTableView}.\n *\n * @private\n */\nclass TableSizeGridBoxView extends View {\n\t/**\n\t * @inheritDoc\n\t */\n\tconstructor( locale ) {\n\t\tsuper( locale );\n\n\t\tconst bind = this.bindTemplate;\n\n\t\t/**\n\t\t * Controls whether the grid box view is \"on\".\n\t\t *\n\t\t * @observable\n\t\t * @member {Boolean} #isOn\n\t\t */\n\t\tthis.set( 'isOn', false );\n\n\t\tthis.setTemplate( {\n\t\t\ttag: 'div',\n\t\t\tattributes: {\n\t\t\t\tclass: [\n\t\t\t\t\t'ck-insert-table-dropdown-grid-box',\n\t\t\t\t\tbind.if( 'isOn', 'ck-on' )\n\t\t\t\t]\n\t\t\t},\n\t\t\ton: {\n\t\t\t\tmouseover: bind.to( 'over' )\n\t\t\t}\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}