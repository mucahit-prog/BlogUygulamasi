{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/utils\n */\n\n/**\n * Helper class that ties together all {@link module:link/link~LinkDecoratorAutomaticDefinition} and provides\n * a {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement downcast dispatcher} for them.\n */\nexport default class AutomaticDecorators {\n  constructor() {\n    /**\n     * Stores the definition of {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}.\n     * This data is used as a source for a downcast dispatcher to create a proper conversion to output data.\n     *\n     * @private\n     * @type {Set}\n     */\n    this._definitions = new Set();\n  }\n  /**\n   * Gives information about the number of decorators stored in the {@link module:link/utils~AutomaticDecorators} instance.\n   *\n   * @readonly\n   * @protected\n   * @type {Number}\n   */\n\n\n  get length() {\n    return this._definitions.size;\n  }\n  /**\n   * Adds automatic decorator objects or an array with them to be used during downcasting.\n   *\n   * @param {module:link/link~LinkDecoratorAutomaticDefinition|Array.<module:link/link~LinkDecoratorAutomaticDefinition>} item\n   * A configuration object of automatic rules for decorating links. It might also be an array of such objects.\n   */\n\n\n  add(item) {\n    if (Array.isArray(item)) {\n      item.forEach(item => this._definitions.add(item));\n    } else {\n      this._definitions.add(item);\n    }\n  }\n  /**\n   * Provides the conversion helper used in the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add} method.\n   *\n   * @returns {Function} A dispatcher function used as conversion helper\n   * in {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add}.\n   */\n\n\n  getDispatcher() {\n    return dispatcher => {\n      dispatcher.on('attribute:linkHref', (evt, data, conversionApi) => {\n        // There is only test as this behavior decorates links and\n        // it is run before dispatcher which actually consumes this node.\n        // This allows on writing own dispatcher with highest priority,\n        // which blocks both native converter and this additional decoration.\n        if (!conversionApi.consumable.test(data.item, 'attribute:linkHref')) {\n          return;\n        }\n\n        const viewWriter = conversionApi.writer;\n        const viewSelection = viewWriter.document.selection;\n\n        for (const item of this._definitions) {\n          const viewElement = viewWriter.createAttributeElement('a', item.attributes, {\n            priority: 5\n          });\n          viewWriter.setCustomProperty('link', true, viewElement);\n\n          if (item.callback(data.attributeNewValue)) {\n            if (data.item.is('selection')) {\n              viewWriter.wrap(viewSelection.getFirstRange(), viewElement);\n            } else {\n              viewWriter.wrap(conversionApi.mapper.toViewRange(data.range), viewElement);\n            }\n          } else {\n            viewWriter.unwrap(conversionApi.mapper.toViewRange(data.range), viewElement);\n          }\n        }\n      }, {\n        priority: 'high'\n      });\n    };\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/node_modules/@ckeditor/ckeditor5-link/src/utils/automaticdecorators.js"],"names":["AutomaticDecorators","constructor","_definitions","Set","length","size","add","item","Array","isArray","forEach","getDispatcher","dispatcher","on","evt","data","conversionApi","consumable","test","viewWriter","writer","viewSelection","document","selection","viewElement","createAttributeElement","attributes","priority","setCustomProperty","callback","attributeNewValue","is","wrap","getFirstRange","mapper","toViewRange","range","unwrap"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,MAAMA,mBAAN,CAA0B;AACxCC,EAAAA,WAAW,GAAG;AACb;AACF;AACA;AACA;AACA;AACA;AACA;AACE,SAAKC,YAAL,GAAoB,IAAIC,GAAJ,EAApB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;AACA;;;AACW,MAANC,MAAM,GAAG;AACZ,WAAO,KAAKF,YAAL,CAAkBG,IAAzB;AACA;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCC,EAAAA,GAAG,CAAEC,IAAF,EAAS;AACX,QAAKC,KAAK,CAACC,OAAN,CAAeF,IAAf,CAAL,EAA6B;AAC5BA,MAAAA,IAAI,CAACG,OAAL,CAAcH,IAAI,IAAI,KAAKL,YAAL,CAAkBI,GAAlB,CAAuBC,IAAvB,CAAtB;AACA,KAFD,MAEO;AACN,WAAKL,YAAL,CAAkBI,GAAlB,CAAuBC,IAAvB;AACA;AACD;AAED;AACD;AACA;AACA;AACA;AACA;;;AACCI,EAAAA,aAAa,GAAG;AACf,WAAOC,UAAU,IAAI;AACpBA,MAAAA,UAAU,CAACC,EAAX,CAAe,oBAAf,EAAqC,CAAEC,GAAF,EAAOC,IAAP,EAAaC,aAAb,KAAgC;AACpE;AACA;AACA;AACA;AACA,YAAK,CAACA,aAAa,CAACC,UAAd,CAAyBC,IAAzB,CAA+BH,IAAI,CAACR,IAApC,EAA0C,oBAA1C,CAAN,EAAyE;AACxE;AACA;;AACD,cAAMY,UAAU,GAAGH,aAAa,CAACI,MAAjC;AACA,cAAMC,aAAa,GAAGF,UAAU,CAACG,QAAX,CAAoBC,SAA1C;;AAEA,aAAM,MAAMhB,IAAZ,IAAoB,KAAKL,YAAzB,EAAwC;AACvC,gBAAMsB,WAAW,GAAGL,UAAU,CAACM,sBAAX,CAAmC,GAAnC,EAAwClB,IAAI,CAACmB,UAA7C,EAAyD;AAC5EC,YAAAA,QAAQ,EAAE;AADkE,WAAzD,CAApB;AAGAR,UAAAA,UAAU,CAACS,iBAAX,CAA8B,MAA9B,EAAsC,IAAtC,EAA4CJ,WAA5C;;AACA,cAAKjB,IAAI,CAACsB,QAAL,CAAed,IAAI,CAACe,iBAApB,CAAL,EAA+C;AAC9C,gBAAKf,IAAI,CAACR,IAAL,CAAUwB,EAAV,CAAc,WAAd,CAAL,EAAmC;AAClCZ,cAAAA,UAAU,CAACa,IAAX,CAAiBX,aAAa,CAACY,aAAd,EAAjB,EAAgDT,WAAhD;AACA,aAFD,MAEO;AACNL,cAAAA,UAAU,CAACa,IAAX,CAAiBhB,aAAa,CAACkB,MAAd,CAAqBC,WAArB,CAAkCpB,IAAI,CAACqB,KAAvC,CAAjB,EAAiEZ,WAAjE;AACA;AACD,WAND,MAMO;AACNL,YAAAA,UAAU,CAACkB,MAAX,CAAmBrB,aAAa,CAACkB,MAAd,CAAqBC,WAArB,CAAkCpB,IAAI,CAACqB,KAAvC,CAAnB,EAAmEZ,WAAnE;AACA;AACD;AACD,OA1BD,EA0BG;AAAEG,QAAAA,QAAQ,EAAE;AAAZ,OA1BH;AA2BA,KA5BD;AA6BA;;AAzEuC","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md.\n */\n\n/**\n * @module link/utils\n */\n\n/**\n * Helper class that ties together all {@link module:link/link~LinkDecoratorAutomaticDefinition} and provides\n * a {@link module:engine/conversion/downcasthelpers~DowncastHelpers#attributeToElement downcast dispatcher} for them.\n */\nexport default class AutomaticDecorators {\n\tconstructor() {\n\t\t/**\n\t\t * Stores the definition of {@link module:link/link~LinkDecoratorAutomaticDefinition automatic decorators}.\n\t\t * This data is used as a source for a downcast dispatcher to create a proper conversion to output data.\n\t\t *\n\t\t * @private\n\t\t * @type {Set}\n\t\t */\n\t\tthis._definitions = new Set();\n\t}\n\n\t/**\n\t * Gives information about the number of decorators stored in the {@link module:link/utils~AutomaticDecorators} instance.\n\t *\n\t * @readonly\n\t * @protected\n\t * @type {Number}\n\t */\n\tget length() {\n\t\treturn this._definitions.size;\n\t}\n\n\t/**\n\t * Adds automatic decorator objects or an array with them to be used during downcasting.\n\t *\n\t * @param {module:link/link~LinkDecoratorAutomaticDefinition|Array.<module:link/link~LinkDecoratorAutomaticDefinition>} item\n\t * A configuration object of automatic rules for decorating links. It might also be an array of such objects.\n\t */\n\tadd( item ) {\n\t\tif ( Array.isArray( item ) ) {\n\t\t\titem.forEach( item => this._definitions.add( item ) );\n\t\t} else {\n\t\t\tthis._definitions.add( item );\n\t\t}\n\t}\n\n\t/**\n\t * Provides the conversion helper used in the {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add} method.\n\t *\n\t * @returns {Function} A dispatcher function used as conversion helper\n\t * in {@link module:engine/conversion/downcasthelpers~DowncastHelpers#add}.\n\t */\n\tgetDispatcher() {\n\t\treturn dispatcher => {\n\t\t\tdispatcher.on( 'attribute:linkHref', ( evt, data, conversionApi ) => {\n\t\t\t\t// There is only test as this behavior decorates links and\n\t\t\t\t// it is run before dispatcher which actually consumes this node.\n\t\t\t\t// This allows on writing own dispatcher with highest priority,\n\t\t\t\t// which blocks both native converter and this additional decoration.\n\t\t\t\tif ( !conversionApi.consumable.test( data.item, 'attribute:linkHref' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst viewWriter = conversionApi.writer;\n\t\t\t\tconst viewSelection = viewWriter.document.selection;\n\n\t\t\t\tfor ( const item of this._definitions ) {\n\t\t\t\t\tconst viewElement = viewWriter.createAttributeElement( 'a', item.attributes, {\n\t\t\t\t\t\tpriority: 5\n\t\t\t\t\t} );\n\t\t\t\t\tviewWriter.setCustomProperty( 'link', true, viewElement );\n\t\t\t\t\tif ( item.callback( data.attributeNewValue ) ) {\n\t\t\t\t\t\tif ( data.item.is( 'selection' ) ) {\n\t\t\t\t\t\t\tviewWriter.wrap( viewSelection.getFirstRange(), viewElement );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tviewWriter.wrap( conversionApi.mapper.toViewRange( data.range ), viewElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tviewWriter.unwrap( conversionApi.mapper.toViewRange( data.range ), viewElement );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, { priority: 'high' } );\n\t\t};\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}