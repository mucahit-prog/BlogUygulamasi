{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle/imagestylecommand\n */\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { isImage } from '../image/utils';\n/**\n * The image style command. It is used to apply different image styles.\n *\n * @extends module:core/command~Command\n */\n\nexport default class ImageStyleCommand extends Command {\n  /**\n   * Creates an instance of the image style command. Each command instance is handling one style.\n   *\n   * @param {module:core/editor/editor~Editor} editor The editor instance.\n   * @param {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} styles The styles that this command supports.\n   */\n  constructor(editor, styles) {\n    super(editor);\n    /**\n     * The name of the default style, if it is present. If there is no default style, it defaults to `false`.\n     *\n     * @readonly\n     * @type {Boolean|String}\n     */\n\n    this.defaultStyle = false;\n    /**\n     * A style handled by this command.\n     *\n     * @readonly\n     * @member {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} #styles\n     */\n\n    this.styles = styles.reduce((styles, style) => {\n      styles[style.name] = style;\n\n      if (style.isDefault) {\n        this.defaultStyle = style.name;\n      }\n\n      return styles;\n    }, {});\n  }\n  /**\n   * @inheritDoc\n   */\n\n\n  refresh() {\n    const element = this.editor.model.document.selection.getSelectedElement();\n    this.isEnabled = isImage(element);\n\n    if (!element) {\n      this.value = false;\n    } else if (element.hasAttribute('imageStyle')) {\n      const attributeValue = element.getAttribute('imageStyle');\n      this.value = this.styles[attributeValue] ? attributeValue : false;\n    } else {\n      this.value = this.defaultStyle;\n    }\n  }\n  /**\n   * Executes the command.\n   *\n   *\t\teditor.execute( 'imageStyle', { value: 'side' } );\n   *\n   * @param {Object} options\n   * @param {String} options.value The name of the style (based on the\n   * {@link module:image/image~ImageConfig#styles `image.styles`} configuration option).\n   * @fires execute\n   */\n\n\n  execute(options) {\n    const styleName = options.value;\n    const model = this.editor.model;\n    const imageElement = model.document.selection.getSelectedElement();\n    model.change(writer => {\n      // Default style means that there is no `imageStyle` attribute in the model.\n      // https://github.com/ckeditor/ckeditor5-image/issues/147\n      if (this.styles[styleName].isDefault) {\n        writer.removeAttribute('imageStyle', imageElement);\n      } else {\n        writer.setAttribute('imageStyle', styleName, imageElement);\n      }\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/node_modules/@ckeditor/ckeditor5-image/src/imagestyle/imagestylecommand.js"],"names":["Command","isImage","ImageStyleCommand","constructor","editor","styles","defaultStyle","reduce","style","name","isDefault","refresh","element","model","document","selection","getSelectedElement","isEnabled","value","hasAttribute","attributeValue","getAttribute","execute","options","styleName","imageElement","change","writer","removeAttribute","setAttribute"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,OAAOA,OAAP,MAAoB,sCAApB;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA;AACA;AACA;AACA;AACA;;AACA,eAAe,MAAMC,iBAAN,SAAgCF,OAAhC,CAAwC;AACtD;AACD;AACA;AACA;AACA;AACA;AACCG,EAAAA,WAAW,CAAEC,MAAF,EAAUC,MAAV,EAAmB;AAC7B,UAAOD,MAAP;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKE,YAAL,GAAoB,KAApB;AAEA;AACF;AACA;AACA;AACA;AACA;;AACE,SAAKD,MAAL,GAAcA,MAAM,CAACE,MAAP,CAAe,CAAEF,MAAF,EAAUG,KAAV,KAAqB;AACjDH,MAAAA,MAAM,CAAEG,KAAK,CAACC,IAAR,CAAN,GAAuBD,KAAvB;;AAEA,UAAKA,KAAK,CAACE,SAAX,EAAuB;AACtB,aAAKJ,YAAL,GAAoBE,KAAK,CAACC,IAA1B;AACA;;AAED,aAAOJ,MAAP;AACA,KARa,EAQX,EARW,CAAd;AASA;AAED;AACD;AACA;;;AACCM,EAAAA,OAAO,GAAG;AACT,UAAMC,OAAO,GAAG,KAAKR,MAAL,CAAYS,KAAZ,CAAkBC,QAAlB,CAA2BC,SAA3B,CAAqCC,kBAArC,EAAhB;AAEA,SAAKC,SAAL,GAAiBhB,OAAO,CAAEW,OAAF,CAAxB;;AAEA,QAAK,CAACA,OAAN,EAAgB;AACf,WAAKM,KAAL,GAAa,KAAb;AACA,KAFD,MAEO,IAAKN,OAAO,CAACO,YAAR,CAAsB,YAAtB,CAAL,EAA4C;AAClD,YAAMC,cAAc,GAAGR,OAAO,CAACS,YAAR,CAAsB,YAAtB,CAAvB;AACA,WAAKH,KAAL,GAAa,KAAKb,MAAL,CAAae,cAAb,IAAgCA,cAAhC,GAAiD,KAA9D;AACA,KAHM,MAGA;AACN,WAAKF,KAAL,GAAa,KAAKZ,YAAlB;AACA;AACD;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACCgB,EAAAA,OAAO,CAAEC,OAAF,EAAY;AAClB,UAAMC,SAAS,GAAGD,OAAO,CAACL,KAA1B;AAEA,UAAML,KAAK,GAAG,KAAKT,MAAL,CAAYS,KAA1B;AACA,UAAMY,YAAY,GAAGZ,KAAK,CAACC,QAAN,CAAeC,SAAf,CAAyBC,kBAAzB,EAArB;AAEAH,IAAAA,KAAK,CAACa,MAAN,CAAcC,MAAM,IAAI;AACvB;AACA;AACA,UAAK,KAAKtB,MAAL,CAAamB,SAAb,EAAyBd,SAA9B,EAA0C;AACzCiB,QAAAA,MAAM,CAACC,eAAP,CAAwB,YAAxB,EAAsCH,YAAtC;AACA,OAFD,MAEO;AACNE,QAAAA,MAAM,CAACE,YAAP,CAAqB,YAArB,EAAmCL,SAAnC,EAA8CC,YAA9C;AACA;AACD,KARD;AASA;;AA9EqD","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module image/imagestyle/imagestylecommand\n */\n\nimport Command from '@ckeditor/ckeditor5-core/src/command';\nimport { isImage } from '../image/utils';\n\n/**\n * The image style command. It is used to apply different image styles.\n *\n * @extends module:core/command~Command\n */\nexport default class ImageStyleCommand extends Command {\n\t/**\n\t * Creates an instance of the image style command. Each command instance is handling one style.\n\t *\n\t * @param {module:core/editor/editor~Editor} editor The editor instance.\n\t * @param {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} styles The styles that this command supports.\n\t */\n\tconstructor( editor, styles ) {\n\t\tsuper( editor );\n\n\t\t/**\n\t\t * The name of the default style, if it is present. If there is no default style, it defaults to `false`.\n\t\t *\n\t\t * @readonly\n\t\t * @type {Boolean|String}\n\t\t */\n\t\tthis.defaultStyle = false;\n\n\t\t/**\n\t\t * A style handled by this command.\n\t\t *\n\t\t * @readonly\n\t\t * @member {Array.<module:image/imagestyle/imagestyleediting~ImageStyleFormat>} #styles\n\t\t */\n\t\tthis.styles = styles.reduce( ( styles, style ) => {\n\t\t\tstyles[ style.name ] = style;\n\n\t\t\tif ( style.isDefault ) {\n\t\t\t\tthis.defaultStyle = style.name;\n\t\t\t}\n\n\t\t\treturn styles;\n\t\t}, {} );\n\t}\n\n\t/**\n\t * @inheritDoc\n\t */\n\trefresh() {\n\t\tconst element = this.editor.model.document.selection.getSelectedElement();\n\n\t\tthis.isEnabled = isImage( element );\n\n\t\tif ( !element ) {\n\t\t\tthis.value = false;\n\t\t} else if ( element.hasAttribute( 'imageStyle' ) ) {\n\t\t\tconst attributeValue = element.getAttribute( 'imageStyle' );\n\t\t\tthis.value = this.styles[ attributeValue ] ? attributeValue : false;\n\t\t} else {\n\t\t\tthis.value = this.defaultStyle;\n\t\t}\n\t}\n\n\t/**\n\t * Executes the command.\n\t *\n\t *\t\teditor.execute( 'imageStyle', { value: 'side' } );\n\t *\n\t * @param {Object} options\n\t * @param {String} options.value The name of the style (based on the\n\t * {@link module:image/image~ImageConfig#styles `image.styles`} configuration option).\n\t * @fires execute\n\t */\n\texecute( options ) {\n\t\tconst styleName = options.value;\n\n\t\tconst model = this.editor.model;\n\t\tconst imageElement = model.document.selection.getSelectedElement();\n\n\t\tmodel.change( writer => {\n\t\t\t// Default style means that there is no `imageStyle` attribute in the model.\n\t\t\t// https://github.com/ckeditor/ckeditor5-image/issues/147\n\t\t\tif ( this.styles[ styleName ].isDefault ) {\n\t\t\t\twriter.removeAttribute( 'imageStyle', imageElement );\n\t\t\t} else {\n\t\t\t\twriter.setAttribute( 'imageStyle', styleName, imageElement );\n\t\t\t}\n\t\t} );\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}