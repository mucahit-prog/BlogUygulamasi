{"ast":null,"code":"import React, { PureComponent, Component } from 'react';\nimport { DefaultDraftInlineStyle, Modifier, SelectionState, EditorState, AtomicBlockUtils, RichUtils, KeyBindingUtil, DefaultDraftBlockRenderMap, getDefaultKeyBinding } from 'draft-js';\nimport Editor from 'draft-js-plugins-editor';\nimport { blockDepthStyleFn, createEditorStateFromRaw, registerCopySource, serialiseEditorStateToRaw, handleDraftEditorPastedText, ListNestingStyles } from 'draftjs-conductor';\nexport { createEditorStateFromRaw, serialiseEditorStateToRaw } from 'draftjs-conductor';\nimport decorateComponentWithProps from 'decorate-component-with-props';\nimport isSoftNewlineEvent from 'draft-js/lib/isSoftNewlineEvent';\nimport { filterEditorState } from 'draftjs-filters';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar BLOCK_TYPE = {\n  // This is used to represent a normal text block (paragraph).\n  UNSTYLED: \"unstyled\",\n  HEADER_ONE: \"header-one\",\n  HEADER_TWO: \"header-two\",\n  HEADER_THREE: \"header-three\",\n  HEADER_FOUR: \"header-four\",\n  HEADER_FIVE: \"header-five\",\n  HEADER_SIX: \"header-six\",\n  UNORDERED_LIST_ITEM: \"unordered-list-item\",\n  ORDERED_LIST_ITEM: \"ordered-list-item\",\n  BLOCKQUOTE: \"blockquote\",\n  CODE: \"code-block\",\n  // This represents a \"custom\" block, not for rich text, with arbitrary content.\n  ATOMIC: \"atomic\"\n};\nvar ENTITY_TYPE = {\n  LINK: \"LINK\",\n  IMAGE: \"IMAGE\",\n  HORIZONTAL_RULE: \"HORIZONTAL_RULE\"\n}; // See https://github.com/facebook/draft-js/blob/master/src/model/immutable/DefaultDraftInlineStyle.js\n\nvar INLINE_STYLE = {\n  BOLD: \"BOLD\",\n  ITALIC: \"ITALIC\",\n  CODE: \"CODE\",\n  UNDERLINE: \"UNDERLINE\",\n  STRIKETHROUGH: \"STRIKETHROUGH\",\n  MARK: \"MARK\",\n  QUOTATION: \"QUOTATION\",\n  SMALL: \"SMALL\",\n  SAMPLE: \"SAMPLE\",\n  INSERT: \"INSERT\",\n  DELETE: \"DELETE\",\n  KEYBOARD: \"KEYBOARD\",\n  SUPERSCRIPT: \"SUPERSCRIPT\",\n  SUBSCRIPT: \"SUBSCRIPT\"\n};\nvar BLOCK_TYPES = Object.values(BLOCK_TYPE);\nvar ENTITY_TYPES = Object.values(ENTITY_TYPE);\nvar INLINE_STYLES = Object.values(INLINE_STYLE);\nvar KEY_COMMANDS = [].concat(_toConsumableArray(BLOCK_TYPES), _toConsumableArray(ENTITY_TYPES), _toConsumableArray(INLINE_STYLES), [// Lowercase identifiers used by Draft.js\n// See https://github.com/facebook/draft-js/blob/585af35c3a8c31fefb64bc884d4001faa96544d3/src/model/constants/DraftEditorCommand.js#L58-L61.\n\"bold\", \"italic\", \"underline\", \"code\"]);\nvar FONT_FAMILY_MONOSPACE = \"Consolas, Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace, sans-serif\"; // See https://github.com/facebook/draft-js/blob/master/src/model/immutable/DefaultDraftInlineStyle.js\n\nvar CUSTOM_STYLE_MAP = {};\nCUSTOM_STYLE_MAP[INLINE_STYLE.BOLD] = DefaultDraftInlineStyle[INLINE_STYLE.BOLD];\nCUSTOM_STYLE_MAP[INLINE_STYLE.ITALIC] = DefaultDraftInlineStyle[INLINE_STYLE.ITALIC];\nCUSTOM_STYLE_MAP[INLINE_STYLE.STRIKETHROUGH] = DefaultDraftInlineStyle[INLINE_STYLE.STRIKETHROUGH];\nCUSTOM_STYLE_MAP[INLINE_STYLE.UNDERLINE] = DefaultDraftInlineStyle[INLINE_STYLE.UNDERLINE];\nCUSTOM_STYLE_MAP[INLINE_STYLE.CODE] = {\n  padding: \"0.2em 0.3125em\",\n  margin: \"0\",\n  fontSize: \"85%\",\n  backgroundColor: \"rgba(27, 31, 35, 0.05)\",\n  fontFamily: FONT_FAMILY_MONOSPACE,\n  borderRadius: \"3px\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.MARK] = {\n  backgroundColor: \"yellow\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.QUOTATION] = {\n  fontStyle: \"italic\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.SMALL] = {\n  fontSize: \"smaller\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.SAMPLE] = {\n  fontFamily: FONT_FAMILY_MONOSPACE\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.INSERT] = {\n  textDecoration: \"underline\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.DELETE] = {\n  textDecoration: \"line-through\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.KEYBOARD] = {\n  fontFamily: FONT_FAMILY_MONOSPACE,\n  padding: \"3px 5px\",\n  fontSize: \"11px\",\n  lineHeight: \"10px\",\n  color: \"#444d56\",\n  verticalAlign: \"middle\",\n  backgroundColor: \"#fafbfc\",\n  border: \"solid 1px #c6cbd1\",\n  borderBottomColor: \"#959da5\",\n  borderRadius: \"3px\",\n  boxShadow: \"inset 0 -1px 0 #959da5\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.SUPERSCRIPT] = {\n  fontSize: \"80%\",\n  verticalAlign: \"super\",\n  lineHeight: \"1\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.SUBSCRIPT] = {\n  fontSize: \"80%\",\n  verticalAlign: \"sub\",\n  lineHeight: \"1\"\n};\nvar BR_TYPE = \"BR\";\nvar UNDO_TYPE = \"undo\";\nvar REDO_TYPE = \"redo\"; // Originally from https://github.com/facebook/draft-js/blob/master/src/component/utils/getDefaultKeyBinding.js.\n\nvar KEY_CODES = {\n  K: 75,\n  B: 66,\n  U: 85,\n  J: 74,\n  I: 73,\n  X: 88,\n  \"0\": 48,\n  \"1\": 49,\n  \"2\": 50,\n  \"3\": 51,\n  \"4\": 52,\n  \"5\": 53,\n  \"6\": 54,\n  \"7\": 55,\n  \"8\": 56,\n  \".\": 190,\n  \",\": 188\n};\nvar INPUT_BLOCK_MAP = {\n  \"* \": BLOCK_TYPE.UNORDERED_LIST_ITEM,\n  \"- \": BLOCK_TYPE.UNORDERED_LIST_ITEM,\n  \"1. \": BLOCK_TYPE.ORDERED_LIST_ITEM,\n  \"# \": BLOCK_TYPE.HEADER_ONE,\n  \"## \": BLOCK_TYPE.HEADER_TWO,\n  \"### \": BLOCK_TYPE.HEADER_THREE,\n  \"#### \": BLOCK_TYPE.HEADER_FOUR,\n  \"##### \": BLOCK_TYPE.HEADER_FIVE,\n  \"###### \": BLOCK_TYPE.HEADER_SIX,\n  \"> \": BLOCK_TYPE.BLOCKQUOTE,\n  // It makes more sense not to require a space here.\n  // This matches how Dropbox Paper operates.\n  \"```\": BLOCK_TYPE.CODE\n};\nvar INPUT_STYLE_MAP = [// Order matters, as shorter patterns are contained in the longer ones.\n{\n  pattern: \"**\",\n  type: INLINE_STYLE.BOLD\n}, {\n  pattern: \"__\",\n  type: INLINE_STYLE.BOLD\n}, {\n  pattern: \"*\",\n  type: INLINE_STYLE.ITALIC\n}, {\n  pattern: \"_\",\n  type: INLINE_STYLE.ITALIC\n}, {\n  pattern: \"~~\",\n  type: INLINE_STYLE.STRIKETHROUGH\n}, {\n  pattern: \"~\",\n  type: INLINE_STYLE.STRIKETHROUGH\n}, {\n  pattern: \"`\",\n  type: INLINE_STYLE.CODE\n}].map(function (_ref) {\n  var pattern = _ref.pattern,\n      type = _ref.type;\n  var pat = pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  var char = pattern[0].replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // https://regexper.com/#%28%5Cs%7C%5E%29__%28%5B%5E%5Cs_%5D%7B1%2C2%7D%7C%5B%5E%5Cs_%5D.%2B%5B%5E%5Cs_%5D%29__%24\n  // This is stored as an escaped string instead of a RegExp object because they are stateful.\n  // This regex encapsulates a few rules:\n  // - The pattern must be preceded by whitespace, or be at the start of the input.\n  // - The pattern must end the input.\n  // - In-between the start and end patterns, there can't be only whitespace or characters from the pattern.\n  // - There has to be at least 1 char that's not whitespace or the pattern’s char.\n\n  var regex = \"(\\\\s|^)\".concat(pat, \"([^\\\\s\").concat(char, \"]{1,2}|[^\\\\s\").concat(char, \"].+[^\\\\s\").concat(char, \"])\").concat(pat, \"$\");\n  return {\n    pattern: pattern,\n    type: type,\n    regex: regex\n  };\n});\nvar INPUT_ENTITY_MAP = {};\nINPUT_ENTITY_MAP[ENTITY_TYPE.HORIZONTAL_RULE] = \"---\";\nvar LABELS = {};\nLABELS[BLOCK_TYPE.UNSTYLED] = \"P\";\nLABELS[BLOCK_TYPE.HEADER_ONE] = \"H1\";\nLABELS[BLOCK_TYPE.HEADER_TWO] = \"H2\";\nLABELS[BLOCK_TYPE.HEADER_THREE] = \"H3\";\nLABELS[BLOCK_TYPE.HEADER_FOUR] = \"H4\";\nLABELS[BLOCK_TYPE.HEADER_FIVE] = \"H5\";\nLABELS[BLOCK_TYPE.HEADER_SIX] = \"H6\";\nLABELS[BLOCK_TYPE.UNORDERED_LIST_ITEM] = \"UL\";\nLABELS[BLOCK_TYPE.ORDERED_LIST_ITEM] = \"OL\";\nLABELS[BLOCK_TYPE.CODE] = \"{ }\";\nLABELS[BLOCK_TYPE.BLOCKQUOTE] = \"❝\";\nLABELS[INLINE_STYLE.BOLD] = \"B\";\nLABELS[INLINE_STYLE.ITALIC] = \"𝘐\";\nLABELS[INLINE_STYLE.CODE] = \"{ }\";\nLABELS[INLINE_STYLE.UNDERLINE] = \"U\";\nLABELS[INLINE_STYLE.STRIKETHROUGH] = \"S\";\nLABELS[INLINE_STYLE.MARK] = \"☆\";\nLABELS[INLINE_STYLE.QUOTATION] = \"❛\";\nLABELS[INLINE_STYLE.SMALL] = \"𝖲𝗆a𝗅𝗅\";\nLABELS[INLINE_STYLE.SAMPLE] = \"𝙳𝚊𝚝𝚊\";\nLABELS[INLINE_STYLE.INSERT] = \"Ins\";\nLABELS[INLINE_STYLE.DELETE] = \"Del\";\nLABELS[INLINE_STYLE.SUPERSCRIPT] = \"Sup\";\nLABELS[INLINE_STYLE.SUBSCRIPT] = \"Sub\";\nLABELS[INLINE_STYLE.KEYBOARD] = \"⌘\";\nLABELS[ENTITY_TYPE.LINK] = \"🔗\";\nLABELS[ENTITY_TYPE.IMAGE] = \"🖼\";\nLABELS[ENTITY_TYPE.HORIZONTAL_RULE] = \"―\";\nLABELS[BR_TYPE] = \"↵\";\nLABELS[UNDO_TYPE] = \"↺\";\nLABELS[REDO_TYPE] = \"↻\";\nvar DESCRIPTIONS = {};\nDESCRIPTIONS[BLOCK_TYPE.UNSTYLED] = \"Paragraph\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_ONE] = \"Heading 1\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_TWO] = \"Heading 2\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_THREE] = \"Heading 3\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_FOUR] = \"Heading 4\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_FIVE] = \"Heading 5\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_SIX] = \"Heading 6\";\nDESCRIPTIONS[BLOCK_TYPE.UNORDERED_LIST_ITEM] = \"Bulleted list\";\nDESCRIPTIONS[BLOCK_TYPE.ORDERED_LIST_ITEM] = \"Numbered list\";\nDESCRIPTIONS[BLOCK_TYPE.BLOCKQUOTE] = \"Blockquote\";\nDESCRIPTIONS[BLOCK_TYPE.CODE] = \"Code block\";\nDESCRIPTIONS[INLINE_STYLE.BOLD] = \"Bold\";\nDESCRIPTIONS[INLINE_STYLE.ITALIC] = \"Italic\";\nDESCRIPTIONS[INLINE_STYLE.CODE] = \"Code\";\nDESCRIPTIONS[INLINE_STYLE.UNDERLINE] = \"Underline\";\nDESCRIPTIONS[INLINE_STYLE.STRIKETHROUGH] = \"Strikethrough\";\nDESCRIPTIONS[INLINE_STYLE.MARK] = \"Highlight\";\nDESCRIPTIONS[INLINE_STYLE.QUOTATION] = \"Inline quotation\";\nDESCRIPTIONS[INLINE_STYLE.SMALL] = \"Small\";\nDESCRIPTIONS[INLINE_STYLE.SAMPLE] = \"Program output\";\nDESCRIPTIONS[INLINE_STYLE.INSERT] = \"Inserted\";\nDESCRIPTIONS[INLINE_STYLE.DELETE] = \"Deleted\";\nDESCRIPTIONS[INLINE_STYLE.KEYBOARD] = \"Shortcut key\";\nDESCRIPTIONS[INLINE_STYLE.SUPERSCRIPT] = \"Superscript\";\nDESCRIPTIONS[INLINE_STYLE.SUBSCRIPT] = \"Subscript\";\nDESCRIPTIONS[ENTITY_TYPE.LINK] = \"Link\";\nDESCRIPTIONS[ENTITY_TYPE.IMAGE] = \"Image\";\nDESCRIPTIONS[ENTITY_TYPE.HORIZONTAL_RULE] = \"Horizontal line\";\nDESCRIPTIONS[BR_TYPE] = \"Line break\";\nDESCRIPTIONS[UNDO_TYPE] = \"Undo\";\nDESCRIPTIONS[REDO_TYPE] = \"Redo\";\nvar KEYBOARD_SHORTCUTS = {};\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.UNSTYLED] = \"⌫\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_ONE] = \"#\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_TWO] = \"##\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_THREE] = \"###\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_FOUR] = \"####\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_FIVE] = \"#####\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_SIX] = \"######\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.UNORDERED_LIST_ITEM] = \"-\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.ORDERED_LIST_ITEM] = \"1.\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.BLOCKQUOTE] = \">\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.CODE] = \"```\";\nKEYBOARD_SHORTCUTS[INLINE_STYLE.BOLD] = {\n  other: \"Ctrl + B\",\n  macOS: \"⌘ + B\"\n};\nKEYBOARD_SHORTCUTS[INLINE_STYLE.ITALIC] = {\n  other: \"Ctrl + I\",\n  macOS: \"⌘ + I\"\n};\nKEYBOARD_SHORTCUTS[INLINE_STYLE.UNDERLINE] = {\n  other: \"Ctrl + U\",\n  macOS: \"⌘ + U\"\n};\nKEYBOARD_SHORTCUTS[INLINE_STYLE.STRIKETHROUGH] = {\n  other: \"Ctrl + ⇧ + X\",\n  macOS: \"⌘ + ⇧ + X\"\n};\nKEYBOARD_SHORTCUTS[INLINE_STYLE.SUPERSCRIPT] = {\n  other: \"Ctrl + .\",\n  macOS: \"⌘ + .\"\n};\nKEYBOARD_SHORTCUTS[INLINE_STYLE.SUBSCRIPT] = {\n  other: \"Ctrl + ,\",\n  macOS: \"⌘ + ,\"\n};\nKEYBOARD_SHORTCUTS[ENTITY_TYPE.LINK] = {\n  other: \"Ctrl + K\",\n  macOS: \"⌘ + K\"\n};\nKEYBOARD_SHORTCUTS[BR_TYPE] = \"⇧ + ↵\";\nKEYBOARD_SHORTCUTS[ENTITY_TYPE.HORIZONTAL_RULE] = \"- - -\";\nKEYBOARD_SHORTCUTS[UNDO_TYPE] = {\n  other: \"Ctrl + Z\",\n  macOS: \"⌘ + Z\"\n};\nKEYBOARD_SHORTCUTS[REDO_TYPE] = {\n  other: \"Ctrl + ⇧ + Z\",\n  macOS: \"⌘ + ⇧ + Z\"\n};\nvar HANDLED = \"handled\";\nvar NOT_HANDLED = \"not-handled\";\n/**\n * Inspired by draftjs-utils, with our custom functions.\n *\n * DraftUtils functions are utility helpers useful in isolation, specific to the Draft.js API,\n * without ties to Draftail's specific behavior or other APIs.\n */\n\nvar DraftUtils = {\n  /**\n   * Returns the first selected block.\n   */\n  getSelectedBlock: function getSelectedBlock(editorState) {\n    var selection = editorState.getSelection();\n    var content = editorState.getCurrentContent();\n    return content.getBlockMap().get(selection.getStartKey());\n  },\n\n  /**\n   * Returns the entity applicable to whole of current selection.\n   * An entity can not span multiple blocks.\n   * https://github.com/jpuri/draftjs-utils/blob/e81c0ae19c3b0fdef7e0c1b70d924398956be126/js/inline.js#L75\n   */\n  getSelectionEntity: function getSelectionEntity(editorState) {\n    var entity;\n    var selection = editorState.getSelection();\n    var start = selection.getStartOffset();\n    var end = selection.getEndOffset();\n\n    if (start === end && start === 0) {\n      end = 1;\n    } else if (start === end) {\n      start -= 1;\n    }\n\n    var block = this.getSelectedBlock(editorState);\n\n    for (var i = start; i < end; i += 1) {\n      var currentEntity = block.getEntityAt(i);\n\n      if (!currentEntity) {\n        entity = undefined;\n        break;\n      }\n\n      if (i === start) {\n        entity = currentEntity;\n      } else if (entity !== currentEntity) {\n        entity = undefined;\n        break;\n      }\n    }\n\n    return entity;\n  },\n\n  /**\n   * Creates a selection on a given entity in the currently selected block.\n   * Returns the current selection if no entity key is provided, or if the entity could not be found.\n   */\n  getEntitySelection: function getEntitySelection(editorState, entityKey) {\n    var selection = editorState.getSelection();\n\n    if (!entityKey) {\n      return selection;\n    }\n\n    var block = this.getSelectedBlock(editorState);\n    var entityRange; // https://github.com/jpuri/draftjs-utils/blob/e81c0ae19c3b0fdef7e0c1b70d924398956be126/js/inline.js#L111\n\n    block.findEntityRanges(function (value) {\n      return value.get(\"entity\") === entityKey;\n    }, function (start, end) {\n      entityRange = {\n        start: start,\n        end: end\n      };\n    });\n\n    if (!entityRange) {\n      return selection;\n    }\n\n    return selection.merge({\n      anchorOffset: selection.isBackward ? entityRange.end : entityRange.start,\n      focusOffset: selection.isBackward ? entityRange.start : entityRange.end\n    });\n  },\n\n  /**\n   * Updates a given atomic block's entity, merging new data with the old one.\n   */\n  updateBlockEntity: function updateBlockEntity(editorState, block, data) {\n    var content = editorState.getCurrentContent();\n    var nextContent = content.mergeEntityData(block.getEntityAt(0), data); // To remove in Draft.js 0.11.\n    // This is necessary because entity data is still using a mutable, global store.\n\n    nextContent = Modifier.mergeBlockData(nextContent, new SelectionState({\n      anchorKey: block.getKey(),\n      anchorOffset: 0,\n      focusKey: block.getKey(),\n      focusOffset: block.getLength()\n    }), {});\n    return EditorState.push(editorState, nextContent, \"apply-entity\");\n  },\n\n  /**\n   * Inserts a horizontal rule in the place of the current selection.\n   * Returns updated EditorState.\n   * Inspired by DraftUtils.addLineBreakRemovingSelection.\n   */\n  addHorizontalRuleRemovingSelection: function addHorizontalRuleRemovingSelection(editorState) {\n    var contentState = editorState.getCurrentContent();\n    var contentStateWithEntity = contentState.createEntity( // Draft.js Flow typing issue.\n    // See https://github.com/facebook/draft-js/issues/868.\n    // $FlowFixMe\n    ENTITY_TYPE.HORIZONTAL_RULE, \"IMMUTABLE\", {});\n    var entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    return AtomicBlockUtils.insertAtomicBlock(editorState, entityKey, \" \");\n  },\n\n  /**\n   * Changes a block type to be `newType`, setting its new text.\n   * Also removes the required characters from the characterList,\n   * and resets block data.\n   */\n  resetBlockWithType: function resetBlockWithType(editorState, newType, newText) {\n    var newData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var contentState = editorState.getCurrentContent();\n    var selectionState = editorState.getSelection();\n    var key = selectionState.getStartKey();\n    var blockMap = contentState.getBlockMap();\n    var block = blockMap.get(key); // Maintain persistence in the list while removing chars from the start.\n    // https://github.com/facebook/draft-js/blob/788595984da7c1e00d1071ea82b063ff87140be4/src/model/transaction/removeRangeFromContentState.js#L333\n\n    var chars = block.getCharacterList();\n    var startOffset = 0;\n    var sliceOffset = block.getText().length - newText.length;\n\n    while (startOffset < sliceOffset) {\n      chars = chars.shift();\n      startOffset += 1;\n    }\n\n    var newBlock = block.merge({\n      type: newType,\n      text: newText,\n      characterList: chars,\n      data: newData\n    });\n    var newContentState = contentState.merge({\n      blockMap: blockMap.set(key, newBlock)\n    });\n    var newSelectionState = selectionState.merge({\n      anchorOffset: 0,\n      focusOffset: 0\n    });\n    return EditorState.acceptSelection(EditorState.set(editorState, {\n      currentContent: newContentState\n    }), newSelectionState);\n  },\n\n  /**\n   * Applies an inline style on a given range, based on a Markdown shortcut,\n   * removing the Markdown markers.\n   * Supports adding styles on existing styles, and entities.\n   */\n  applyMarkdownStyle: function applyMarkdownStyle(editorState, range, char) {\n    var selection = editorState.getSelection();\n    var content = editorState.getCurrentContent();\n    var marked = selection.merge({\n      anchorOffset: range.start,\n      focusOffset: range.end\n    });\n    var endMarker = selection.merge({\n      anchorOffset: range.end - range.pattern.length,\n      focusOffset: range.end\n    });\n    var startMarker = selection.merge({\n      anchorOffset: range.start,\n      focusOffset: range.start + range.pattern.length\n    }); // Remove the markers separately to preserve existing styles and entities on the marked text.\n\n    content = Modifier.applyInlineStyle(content, marked, range.type);\n    content = Modifier.removeRange(content, endMarker, \"forward\");\n    content = Modifier.removeRange(content, startMarker, \"forward\");\n    var offset = selection.getFocusOffset() - range.pattern.length * 2;\n    var endSelection = selection.merge({\n      anchorOffset: offset,\n      focusOffset: offset\n    });\n    content = content.merge({\n      selectionAfter: endSelection\n    });\n    content = Modifier.insertText(content, endSelection, char);\n    return EditorState.push(editorState, content, \"change-inline-style\");\n  },\n\n  /**\n   * Removes the block at the given key.\n   */\n  removeBlock: function removeBlock(editorState, key) {\n    var content = editorState.getCurrentContent();\n    var blockMap = content.getBlockMap().remove(key);\n    return EditorState.set(editorState, {\n      currentContent: content.merge({\n        blockMap: blockMap\n      })\n    });\n  },\n\n  /**\n   * Removes a block-level entity, turning the block into an empty paragraph,\n   * and placing the selection on it.\n   */\n  removeBlockEntity: function removeBlockEntity(editorState, entityKey, blockKey) {\n    var newState = editorState;\n    var content = editorState.getCurrentContent();\n    var blockMap = content.getBlockMap();\n    var block = blockMap.get(blockKey);\n    var newBlock = block.merge({\n      type: BLOCK_TYPE.UNSTYLED,\n      text: \"\",\n      // No text = no character list\n      characterList: block.getCharacterList().slice(0, 0),\n      data: {}\n    });\n    var newSelection = new SelectionState({\n      anchorKey: blockKey,\n      focusKey: blockKey,\n      anchorOffset: 0,\n      focusOffset: 0\n    });\n    var newContent = content.merge({\n      blockMap: blockMap.set(blockKey, newBlock)\n    });\n    newState = EditorState.push(newState, newContent, \"change-block-type\");\n    newState = EditorState.forceSelection(newState, newSelection);\n    return newState;\n  },\n\n  /**\n   * Handles pressing delete within an atomic block. This can happen when selection is placed on an image.\n   * Ideally this should be handled by the built-in RichUtils, but it's not.\n   * See https://github.com/wagtail/wagtail/issues/4370.\n   */\n  handleDeleteAtomic: function handleDeleteAtomic(editorState) {\n    var selection = editorState.getSelection();\n    var content = editorState.getCurrentContent();\n    var key = selection.getAnchorKey();\n    var offset = selection.getAnchorOffset();\n    var block = content.getBlockForKey(key); // Problematic selection. Pressing delete here would remove the entity, but not the block.\n\n    if (selection.isCollapsed() && block.getType() === BLOCK_TYPE.ATOMIC && offset === 0) {\n      return this.removeBlockEntity(editorState, block.getEntityAt(0), key);\n    }\n\n    return false;\n  },\n\n  /**\n   * Get an entity decorator strategy based on the given entity type.\n   * This strategy will find all entities of the given type.\n   */\n  getEntityTypeStrategy: function getEntityTypeStrategy(entityType) {\n    var strategy = function strategy(block, callback, contentState) {\n      block.findEntityRanges(function (character) {\n        var entityKey = character.getEntity();\n        return entityKey !== null && contentState.getEntity(entityKey).getType() === entityType;\n      }, callback);\n    };\n\n    return strategy;\n  },\n\n  /**\n   * Determines whether the editor should show its placeholder.\n   * See https://draftjs.org/docs/api-reference-editor.html#placeholder\n   * for details on why this is useful.\n   */\n  shouldHidePlaceholder: function shouldHidePlaceholder(editorState) {\n    var contentState = editorState.getCurrentContent();\n    return contentState.hasText() || contentState.getBlockMap().first().getType() !== BLOCK_TYPE.UNSTYLED;\n  },\n\n  /**\n   * Inserts new unstyled block.\n   * Initially inspired from https://github.com/jpuri/draftjs-utils/blob/e81c0ae19c3b0fdef7e0c1b70d924398956be126/js/block.js#L153,\n   * but changed so that the split + block type reset amounts to\n   * only one change in the undo stack.\n   */\n  insertNewUnstyledBlock: function insertNewUnstyledBlock(editorState) {\n    var selection = editorState.getSelection();\n    var newContent = Modifier.splitBlock(editorState.getCurrentContent(), selection);\n    var blockMap = newContent.getBlockMap();\n    var blockKey = selection.getStartKey();\n    var insertedBlockKey = newContent.getKeyAfter(blockKey);\n    var newBlock = blockMap.get(insertedBlockKey).set(\"type\", BLOCK_TYPE.UNSTYLED);\n    newContent = newContent.merge({\n      blockMap: blockMap.set(insertedBlockKey, newBlock)\n    });\n    return EditorState.push(editorState, newContent, \"split-block\");\n  },\n\n  /**\n   * Handles Shift + Enter keypress removing selection and inserting a line break.\n   * https://github.com/jpuri/draftjs-utils/blob/112bbe449cc9156522fcf2b40f2910a071b795c2/js/block.js#L133\n   */\n  addLineBreak: function addLineBreak(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n\n    if (selection.isCollapsed()) {\n      return RichUtils.insertSoftNewline(editorState);\n    }\n\n    var newContent = Modifier.removeRange(content, selection, \"forward\");\n    var fragment = newContent.getSelectionAfter();\n    var block = newContent.getBlockForKey(fragment.getStartKey());\n    newContent = Modifier.insertText(newContent, fragment, \"\\n\", block.getInlineStyleAt(fragment.getStartOffset()), null);\n    return EditorState.push(editorState, newContent, \"insert-fragment\");\n  },\n\n  /**\n   * Handles hard newlines.\n   * https://github.com/jpuri/draftjs-utils/blob/e81c0ae19c3b0fdef7e0c1b70d924398956be126/js/keyPress.js#L17\n   */\n  handleHardNewline: function handleHardNewline(editorState) {\n    var selection = editorState.getSelection();\n\n    if (!selection.isCollapsed()) {\n      return false;\n    }\n\n    var content = editorState.getCurrentContent();\n    var blockKey = selection.getStartKey();\n    var block = content.getBlockForKey(blockKey);\n    var blockType = block.getType(); // Use a loose check to allow custom list item types to reuse the continuation behavior.\n\n    var isListBlock = blockType.endsWith(\"-list-item\");\n\n    if (!isListBlock && block.getType() !== BLOCK_TYPE.UNSTYLED && block.getLength() === selection.getStartOffset()) {\n      return this.insertNewUnstyledBlock(editorState);\n    }\n\n    if (isListBlock && block.getLength() === 0) {\n      var depth = block.getDepth();\n\n      if (depth === 0) {\n        var nextContent = RichUtils.tryToRemoveBlockStyle(editorState); // At the moment, tryToRemoveBlockStyle always returns for\n        // collapsed selections at the start of a block. So in theory this corner case should never happen.\n\n        return nextContent ? EditorState.push(editorState, nextContent, \"change-block-type\") : false;\n      }\n\n      var blockMap = content.getBlockMap();\n      var newBlock = block.set(\"depth\", depth - 1);\n      return EditorState.push(editorState, content.merge({\n        blockMap: blockMap.set(blockKey, newBlock)\n      }), \"adjust-depth\");\n    }\n\n    return false;\n  },\n\n  /**\n   * Handles three scenarios:\n   * - Soft newlines.\n   * - Hard newlines in the \"defer breaking out of the block\" case.\n   * - Other hard newlines.\n   * See https://github.com/springload/draftail/issues/104,\n   * https://github.com/jpuri/draftjs-utils/issues/10.\n   */\n  handleNewLine: function handleNewLine(editorState, event) {\n    // https://github.com/jpuri/draftjs-utils/blob/e81c0ae19c3b0fdef7e0c1b70d924398956be126/js/keyPress.js#L64\n    if (isSoftNewlineEvent(event)) {\n      return this.addLineBreak(editorState);\n    }\n\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var key = selection.getStartKey();\n    var offset = selection.getStartOffset();\n    var block = content.getBlockForKey(key);\n    var isDeferredBreakoutBlock = [BLOCK_TYPE.CODE].includes(block.getType());\n\n    if (isDeferredBreakoutBlock) {\n      var isEmpty = selection.isCollapsed() && offset === 0 && block.getLength() === 0;\n\n      if (isEmpty) {\n        return EditorState.push(editorState, Modifier.setBlockType(content, selection, BLOCK_TYPE.UNSTYLED), \"change-block-type\");\n      }\n\n      return false;\n    }\n\n    return this.handleHardNewline(editorState);\n  }\n};\nvar hasCommandModifier = KeyBindingUtil.hasCommandModifier,\n    isOptionKeyCommand = KeyBindingUtil.isOptionKeyCommand;\nvar hasCmd = hasCommandModifier; // Hack relying on the internals of Draft.js.\n// See https://github.com/facebook/draft-js/pull/869\n// $FlowFixMe\n\nvar IS_MAC_OS = isOptionKeyCommand({\n  altKey: \"test\"\n}) === \"test\";\n/**\n * Methods defining the behavior of the editor, depending on its configuration.\n */\n\nvar behavior = {\n  /**\n   * Configure block render map from block types list.\n   */\n  getBlockRenderMap: function getBlockRenderMap(blockTypes) {\n    var renderMap = DefaultDraftBlockRenderMap; // Override default element for code block.\n    // Fix https://github.com/facebook/draft-js/issues/406.\n\n    if (blockTypes.some(function (block) {\n      return block.type === BLOCK_TYPE.CODE;\n    })) {\n      renderMap = renderMap.set(BLOCK_TYPE.CODE, {\n        element: \"code\",\n        wrapper: DefaultDraftBlockRenderMap.get(BLOCK_TYPE.CODE).wrapper\n      });\n    }\n\n    blockTypes.filter(function (block) {\n      return block.element;\n    }).forEach(function (block) {\n      renderMap = renderMap.set(block.type, {\n        element: block.element\n      });\n    });\n    return renderMap;\n  },\n\n  /**\n   * block style function automatically adding a class with the block's type.\n   */\n  blockStyleFn: function blockStyleFn(block) {\n    var type = block.getType();\n    return \"Draftail-block--\".concat(type, \" \").concat(blockDepthStyleFn(block));\n  },\n\n  /**\n   * Configure key binding function from enabled blocks, styles, entities.\n   */\n  getKeyBindingFn: function getKeyBindingFn(blockTypes, inlineStyles, entityTypes) {\n    var getEnabled = function getEnabled(activeTypes) {\n      return activeTypes.reduce(function (enabled, type) {\n        enabled[type.type] = type.type;\n        return enabled;\n      }, {});\n    };\n\n    var blocks = getEnabled(blockTypes);\n    var styles = getEnabled(inlineStyles);\n    var entities = getEnabled(entityTypes); // Emits key commands to use in `handleKeyCommand` in `Editor`.\n\n    var keyBindingFn = function keyBindingFn(e) {\n      // Safeguard that we only trigger shortcuts with exact matches.\n      // eg. cmd + shift + b should not trigger bold.\n      if (e.shiftKey) {\n        // Key bindings supported by Draft.js must be explicitely discarded.\n        // See https://github.com/facebook/draft-js/issues/941.\n        switch (e.keyCode) {\n          case KEY_CODES.B:\n            return undefined;\n\n          case KEY_CODES.I:\n            return undefined;\n\n          case KEY_CODES.J:\n            return undefined;\n\n          case KEY_CODES.U:\n            return undefined;\n\n          case KEY_CODES.X:\n            return hasCmd(e) && styles[INLINE_STYLE.STRIKETHROUGH];\n\n          case KEY_CODES[7]:\n            return hasCmd(e) && blocks[BLOCK_TYPE.ORDERED_LIST_ITEM];\n\n          case KEY_CODES[8]:\n            return hasCmd(e) && blocks[BLOCK_TYPE.UNORDERED_LIST_ITEM];\n\n          default:\n            return getDefaultKeyBinding(e);\n        }\n      }\n\n      var ctrlAlt = (e.ctrlKey || e.metaKey) && e.altKey;\n\n      switch (e.keyCode) {\n        case KEY_CODES.K:\n          return hasCmd(e) && entities.LINK;\n\n        case KEY_CODES.B:\n          return hasCmd(e) && styles[INLINE_STYLE.BOLD];\n\n        case KEY_CODES.I:\n          return hasCmd(e) && styles[INLINE_STYLE.ITALIC];\n\n        case KEY_CODES.J:\n          return hasCmd(e) && styles[INLINE_STYLE.CODE];\n\n        case KEY_CODES.U:\n          return hasCmd(e) && styles[INLINE_STYLE.UNDERLINE];\n\n        case KEY_CODES[\".\"]:\n          return hasCmd(e) && styles[INLINE_STYLE.SUPERSCRIPT];\n\n        case KEY_CODES[\",\"]:\n          return hasCmd(e) && styles[INLINE_STYLE.SUBSCRIPT];\n\n        case KEY_CODES[0]:\n          // Reverting to unstyled block is always available.\n          return ctrlAlt && BLOCK_TYPE.UNSTYLED;\n\n        case KEY_CODES[1]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_ONE];\n\n        case KEY_CODES[2]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_TWO];\n\n        case KEY_CODES[3]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_THREE];\n\n        case KEY_CODES[4]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_FOUR];\n\n        case KEY_CODES[5]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_FIVE];\n\n        case KEY_CODES[6]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_SIX];\n\n        default:\n          return getDefaultKeyBinding(e);\n      }\n    };\n\n    return keyBindingFn;\n  },\n  hasKeyboardShortcut: function hasKeyboardShortcut(type) {\n    return !!KEYBOARD_SHORTCUTS[type];\n  },\n  getKeyboardShortcut: function getKeyboardShortcut(type) {\n    var isMacOS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : IS_MAC_OS;\n    var shortcut = KEYBOARD_SHORTCUTS[type];\n    var system = isMacOS ? \"macOS\" : \"other\";\n    return shortcut && shortcut[system] || shortcut;\n  },\n\n  /**\n   * Defines whether a block should be altered to a new type when\n   * the user types a given mark.\n   * This powers the \"autolist\" feature.\n   *\n   * Returns the new block type, or false if no replacement should occur.\n   */\n  handleBeforeInputBlockType: function handleBeforeInputBlockType(mark, blockTypes) {\n    return blockTypes.find(function (b) {\n      return b.type === INPUT_BLOCK_MAP[mark];\n    }) ? INPUT_BLOCK_MAP[mark] : false;\n  },\n  handleBeforeInputHR: function handleBeforeInputHR(mark, block) {\n    return mark === INPUT_ENTITY_MAP[ENTITY_TYPE.HORIZONTAL_RULE] && block.getType() !== BLOCK_TYPE.CODE;\n  },\n\n  /**\n   * Checks whether a given input string contains style shortcuts.\n   * If so, returns the range onto which the shortcut is applied.\n   */\n  handleBeforeInputInlineStyle: function handleBeforeInputInlineStyle(input, inlineStyles) {\n    var activeShortcuts = INPUT_STYLE_MAP.filter(function (_ref) {\n      var type = _ref.type;\n      return inlineStyles.some(function (s) {\n        return s.type === type;\n      });\n    });\n    var range;\n    var match = activeShortcuts.find(function (_ref2) {\n      var regex = _ref2.regex; // Re-create a RegExp object every time because RegExp is stateful.\n\n      range = new RegExp(regex, \"g\").exec(input);\n      return range;\n    });\n    return range && match ? {\n      pattern: match.pattern,\n      start: range.index === 0 ? 0 : range.index + 1,\n      end: range.index + range[0].length,\n      type: match.type\n    } : false;\n  },\n  getCustomStyleMap: function getCustomStyleMap(inlineStyles) {\n    var customStyleMap = {};\n    inlineStyles.forEach(function (style) {\n      if (style.style) {\n        customStyleMap[style.type] = style.style;\n      } else if (CUSTOM_STYLE_MAP[style.type]) {\n        customStyleMap[style.type] = CUSTOM_STYLE_MAP[style.type];\n      } else {\n        customStyleMap[style.type] = {};\n      }\n    });\n    return customStyleMap;\n  },\n\n  /**\n   * Applies whitelist and blacklist operations to the editor content,\n   * so the resulting editor state is shaped according to Draftail\n   * expectations and configuration.\n   */\n  filterPaste: function filterPaste(_ref3, editorState) {\n    var maxListNesting = _ref3.maxListNesting,\n        enableHorizontalRule = _ref3.enableHorizontalRule,\n        enableLineBreak = _ref3.enableLineBreak,\n        blockTypes = _ref3.blockTypes,\n        inlineStyles = _ref3.inlineStyles,\n        entityTypes = _ref3.entityTypes;\n    var enabledEntityTypes = entityTypes.slice();\n    var whitespacedCharacters = [\"\\t\", \"📷\"];\n\n    if (enableHorizontalRule) {\n      enabledEntityTypes.push({\n        type: ENTITY_TYPE.HORIZONTAL_RULE\n      });\n    }\n\n    if (!enableLineBreak) {\n      whitespacedCharacters.push(\"\\n\");\n    }\n\n    return filterEditorState({\n      blocks: blockTypes.map(function (b) {\n        return b.type;\n      }),\n      styles: inlineStyles.map(function (s) {\n        return s.type;\n      }),\n      entities: enabledEntityTypes,\n      maxNesting: maxListNesting,\n      whitespacedCharacters: whitespacedCharacters\n    }, editorState);\n  }\n};\n/**\n * Icon as SVG element. Can optionally render a React element instead.\n */\n\nvar Icon = function Icon(_ref) {\n  var icon = _ref.icon,\n      title = _ref.title,\n      className = _ref.className;\n  var children;\n\n  if (typeof icon === \"string\") {\n    if (icon.includes(\"#\")) {\n      children = /*#__PURE__*/React.createElement(\"use\", {\n        xlinkHref: icon\n      });\n    } else {\n      children = /*#__PURE__*/React.createElement(\"path\", {\n        d: icon\n      });\n    }\n  } else if (Array.isArray(icon)) {\n    // eslint-disable-next-line @thibaudcolas/cookbook/react/no-array-index-key\n    children = icon.map(function (d, i) {\n      return /*#__PURE__*/React.createElement(\"path\", {\n        key: i,\n        d: d\n      });\n    });\n  } else {\n    return icon;\n  }\n\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 1024 1024\",\n    className: \"Draftail-Icon \".concat(className || \"\"),\n    \"aria-hidden\": title ? null : true,\n    role: title ? \"img\" : null,\n    \"aria-label\": title || null\n  }, children);\n};\n\nIcon.defaultProps = {\n  title: null,\n  className: null\n};\n/**\n * Displays a basic button, with optional active variant,\n * enriched with a tooltip. The tooltip stops showing on click.\n */\n\nvar ToolbarButton = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ToolbarButton, _PureComponent);\n\n  var _super = _createSuper(ToolbarButton);\n\n  function ToolbarButton(props) {\n    var _this;\n\n    _classCallCheck(this, ToolbarButton);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      showTooltipOnHover: true\n    };\n    _this.onMouseDown = _this.onMouseDown.bind(_assertThisInitialized(_this));\n    _this.onMouseLeave = _this.onMouseLeave.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /* :: onMouseDown: (e: Event) => void; */\n\n\n  _createClass(ToolbarButton, [{\n    key: \"onMouseDown\",\n    value: function onMouseDown(e) {\n      var _this$props = this.props,\n          name = _this$props.name,\n          onClick = _this$props.onClick;\n      e.preventDefault();\n      this.setState({\n        showTooltipOnHover: false\n      });\n\n      if (onClick) {\n        onClick(name || \"\");\n      }\n    }\n    /* :: onMouseLeave: () => void; */\n\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.setState({\n        showTooltipOnHover: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          active = _this$props2.active,\n          label = _this$props2.label,\n          title = _this$props2.title,\n          icon = _this$props2.icon;\n      var showTooltipOnHover = this.state.showTooltipOnHover;\n      return /*#__PURE__*/React.createElement(\"button\", {\n        name: name,\n        className: \"Draftail-ToolbarButton\".concat(active ? \" Draftail-ToolbarButton--active\" : \"\"),\n        type: \"button\",\n        \"aria-label\": title || null,\n        \"data-draftail-balloon\": title && showTooltipOnHover ? true : null,\n        tabIndex: -1,\n        onMouseDown: this.onMouseDown,\n        onMouseLeave: this.onMouseLeave\n      }, typeof icon !== \"undefined\" && icon !== null ? /*#__PURE__*/React.createElement(Icon, {\n        icon: icon\n      }) : null, label ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"Draftail-ToolbarButton__label\"\n      }, label) : null);\n    }\n  }]);\n\n  return ToolbarButton;\n}(PureComponent);\n\nToolbarButton.defaultProps = {\n  name: null,\n  active: false,\n  label: null,\n  title: null,\n  icon: null,\n  onClick: null\n};\n\nvar ToolbarGroup = function ToolbarGroup(_ref) {\n  var children = _ref.children;\n  var hasChildren = React.Children.toArray(children).some(function (c) {\n    return c !== null;\n  });\n  return hasChildren ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Draftail-ToolbarGroup\"\n  }, children) : null;\n};\n\nToolbarGroup.defaultProps = {\n  children: null\n};\n\nvar getButtonLabel = function getButtonLabel(type, config) {\n  var icon = typeof config === \"boolean\" ? undefined : config.icon;\n\n  if (typeof config.label === \"string\" || config.label === null) {\n    return config.label;\n  }\n\n  if (typeof icon !== \"undefined\") {\n    return null;\n  }\n\n  return LABELS[type];\n};\n\nvar showButton = function showButton(config) {\n  return Boolean(config.icon) || Boolean(getButtonLabel(config.type, config));\n};\n\nvar getButtonTitle = function getButtonTitle(type, config) {\n  var description = typeof config === \"boolean\" || typeof config.description === \"undefined\" ? DESCRIPTIONS[type] : config.description;\n  var hasShortcut = behavior.hasKeyboardShortcut(type);\n  var title = description;\n\n  if (hasShortcut) {\n    var desc = description ? \"\".concat(description, \"\\n\") : \"\";\n    title = \"\".concat(desc).concat(behavior.getKeyboardShortcut(type));\n  }\n\n  return title;\n};\n\nvar ToolbarDefaults = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ToolbarDefaults, _PureComponent);\n\n  var _super = _createSuper(ToolbarDefaults);\n\n  function ToolbarDefaults() {\n    _classCallCheck(this, ToolbarDefaults);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ToolbarDefaults, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          currentStyles = _this$props.currentStyles,\n          currentBlock = _this$props.currentBlock,\n          blockTypes = _this$props.blockTypes,\n          inlineStyles = _this$props.inlineStyles,\n          enableHorizontalRule = _this$props.enableHorizontalRule,\n          enableLineBreak = _this$props.enableLineBreak,\n          showUndoControl = _this$props.showUndoControl,\n          showRedoControl = _this$props.showRedoControl,\n          entityTypes = _this$props.entityTypes,\n          toggleBlockType = _this$props.toggleBlockType,\n          toggleInlineStyle = _this$props.toggleInlineStyle,\n          addHR = _this$props.addHR,\n          addBR = _this$props.addBR,\n          onUndoRedo = _this$props.onUndoRedo,\n          onRequestSource = _this$props.onRequestSource;\n      return [/*#__PURE__*/React.createElement(ToolbarGroup, {\n        key: \"styles\"\n      }, inlineStyles.filter(showButton).map(function (t) {\n        return /*#__PURE__*/React.createElement(ToolbarButton, {\n          key: t.type,\n          name: t.type,\n          active: currentStyles.has(t.type),\n          label: getButtonLabel(t.type, t),\n          title: getButtonTitle(t.type, t),\n          icon: t.icon,\n          onClick: toggleInlineStyle\n        });\n      })), /*#__PURE__*/React.createElement(ToolbarGroup, {\n        key: \"blocks\"\n      }, blockTypes.filter(showButton).map(function (t) {\n        return /*#__PURE__*/React.createElement(ToolbarButton, {\n          key: t.type,\n          name: t.type,\n          active: currentBlock === t.type,\n          label: getButtonLabel(t.type, t),\n          title: getButtonTitle(t.type, t),\n          icon: t.icon,\n          onClick: toggleBlockType\n        });\n      })), /*#__PURE__*/React.createElement(ToolbarGroup, {\n        key: \"hr-br\"\n      }, enableHorizontalRule ? /*#__PURE__*/React.createElement(ToolbarButton, {\n        name: ENTITY_TYPE.HORIZONTAL_RULE,\n        onClick: addHR,\n        label: getButtonLabel(ENTITY_TYPE.HORIZONTAL_RULE, enableHorizontalRule),\n        title: getButtonTitle(ENTITY_TYPE.HORIZONTAL_RULE, enableHorizontalRule),\n        icon: typeof enableHorizontalRule !== \"boolean\" ? enableHorizontalRule.icon : null\n      }) : null, enableLineBreak ? /*#__PURE__*/React.createElement(ToolbarButton, {\n        name: BR_TYPE,\n        onClick: addBR,\n        label: getButtonLabel(BR_TYPE, enableLineBreak),\n        title: getButtonTitle(BR_TYPE, enableLineBreak),\n        icon: typeof enableLineBreak !== \"boolean\" ? enableLineBreak.icon : null\n      }) : null), /*#__PURE__*/React.createElement(ToolbarGroup, {\n        key: \"entities\"\n      }, entityTypes.filter(showButton).map(function (t) {\n        return /*#__PURE__*/React.createElement(ToolbarButton, {\n          key: t.type,\n          name: t.type,\n          onClick: onRequestSource,\n          label: getButtonLabel(t.type, t),\n          title: getButtonTitle(t.type, t),\n          icon: t.icon\n        });\n      })), /*#__PURE__*/React.createElement(ToolbarGroup, {\n        key: \"undo-redo\"\n      }, showUndoControl ? /*#__PURE__*/React.createElement(ToolbarButton, {\n        name: UNDO_TYPE,\n        onClick: onUndoRedo,\n        label: getButtonLabel(UNDO_TYPE, showUndoControl),\n        title: getButtonTitle(UNDO_TYPE, showUndoControl),\n        icon: typeof showUndoControl !== \"boolean\" ? showUndoControl.icon : null\n      }) : null, showRedoControl ? /*#__PURE__*/React.createElement(ToolbarButton, {\n        name: REDO_TYPE,\n        onClick: onUndoRedo,\n        label: getButtonLabel(REDO_TYPE, showRedoControl),\n        title: getButtonTitle(REDO_TYPE, showRedoControl),\n        icon: typeof showRedoControl !== \"boolean\" ? showRedoControl.icon : null\n      }) : null)];\n    }\n  }]);\n\n  return ToolbarDefaults;\n}(PureComponent);\n\nvar Toolbar = function Toolbar(props) {\n  var controls = props.controls,\n      getEditorState = props.getEditorState,\n      onChange = props.onChange;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Draftail-Toolbar\",\n    role: \"toolbar\"\n  }, /*#__PURE__*/React.createElement(ToolbarDefaults, props), /*#__PURE__*/React.createElement(ToolbarGroup, null, controls.map(function (Control, i) {\n    return /*#__PURE__*/React.createElement(Control // eslint-disable-next-line @thibaudcolas/cookbook/react/no-array-index-key\n    , {\n      key: i,\n      getEditorState: getEditorState,\n      onChange: onChange\n    });\n  })));\n};\n/**\n * An <hr/> in the editor.\n */\n\n\nvar DividerBlock = function DividerBlock() {\n  return /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"Draftail-DividerBlock\"\n  });\n};\n\nvar defaultProps = {\n  /** Initial content of the editor. Use this to edit pre-existing content. */\n  rawContentState: null,\n\n  /** Called when changes occured. Use this to persist editor content. */\n  onSave: null,\n\n  /** Content of the editor, when using the editor as a controlled component. Incompatible with `rawContentState` and `onSave`. */\n  editorState: null,\n\n  /** Called whenever the editor state is updated. Use this to manage the content of a controlled editor. Incompatible with `rawContentState` and `onSave`. */\n  onChange: null,\n\n  /** Called when the editor receives focus. */\n  onFocus: null,\n\n  /** Called when the editor loses focus. */\n  onBlur: null,\n\n  /** Displayed when the editor is empty. Hidden if the user changes styling. */\n  placeholder: null,\n\n  /** Enable the use of horizontal rules in the editor. */\n  enableHorizontalRule: false,\n\n  /** Enable the use of line breaks in the editor. */\n  enableLineBreak: false,\n\n  /** Show undo control in the toolbar. */\n  showUndoControl: false,\n\n  /** Show redo control in the toolbar. */\n  showRedoControl: false,\n\n  /** Disable copy/paste of rich text in the editor. */\n  stripPastedStyles: true,\n\n  /** Set whether spellcheck is turned on for your editor.\n   * See https://draftjs.org/docs/api-reference-editor.html#spellcheck.\n   */\n  spellCheck: false,\n\n  /** Set whether the editor should be rendered in readOnly mode.\n   * See https://draftjs.org/docs/api-reference-editor.html#readonly\n   */\n  readOnly: false,\n\n  /** Optionally set the overriding text alignment for this editor.\n   * See https://draftjs.org/docs/api-reference-editor.html#textalignment.\n   */\n  textAlignment: null,\n\n  /** Optionally set the overriding text directionality for this editor.\n   * See https://draftjs.org/docs/api-reference-editor.html#textdirectionality.\n   */\n  textDirectionality: null,\n\n  /** Set if auto capitalization is turned on and how it behaves.\n   * See https://draftjs.org/docs/api-reference-editor.html#autocapitalize-string.\n   */\n  autoCapitalize: null,\n\n  /** Set if auto complete is turned on and how it behaves.\n   * See https://draftjs.org/docs/api-reference-editor.html#autocomplete-string.\n   */\n  autoComplete: null,\n\n  /** Set if auto correct is turned on and how it behaves.\n   * See https://draftjs.org/docs/api-reference-editor.html#autocorrect-string.\n   */\n  autoCorrect: null,\n\n  /** See https://draftjs.org/docs/api-reference-editor.html#aria-props. */\n  ariaDescribedBy: null,\n\n  /** List of the available block types. */\n  blockTypes: [],\n\n  /** List of the available inline styles. */\n  inlineStyles: [],\n\n  /** List of the available entity types. */\n  entityTypes: [],\n\n  /** List of active decorators. */\n  decorators: [],\n\n  /** List of extra toolbar controls. */\n  controls: [],\n\n  /** List of plugins of the draft-js-plugins architecture. */\n  plugins: [],\n\n  /** Optionally override the default Draftail toolbar, removing or replacing it. */\n  topToolbar: Toolbar,\n\n  /** Optionally add a custom toolbar underneath the editor, e.g. for metrics. */\n  bottomToolbar: null,\n\n  /** Max level of nesting for list items. 0 = no nesting. Maximum = 10. */\n  maxListNesting: 1,\n\n  /** Frequency at which to call the onSave callback (ms). */\n  stateSaveInterval: 250\n};\n/* :: import type { ElementRef, Node } from \"react\"; */\n\n/**\n * Main component of the Draftail editor.\n * Contains the Draft.js editor instance, and ties together UI and behavior.\n */\n\nvar DraftailEditor = /*#__PURE__*/function (_Component) {\n  _inherits(DraftailEditor, _Component);\n\n  var _super = _createSuper(DraftailEditor);\n  /* :: editorRef: ElementRef<Editor>; */\n\n  /* :: copySource: { unregister: () => void }; */\n\n  /* :: updateTimeout: ?number; */\n\n  /* :: lockEditor: () => void; */\n\n  /* :: unlockEditor: () => void; */\n\n  /* :: getEditorState: () => EditorState; */\n\n\n  function DraftailEditor(props) {\n    var _this;\n\n    _classCallCheck(this, DraftailEditor);\n\n    _this = _super.call(this, props);\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.saveState = _this.saveState.bind(_assertThisInitialized(_this));\n    _this.toggleSource = _this.toggleSource.bind(_assertThisInitialized(_this));\n    _this.toggleEditor = _this.toggleEditor.bind(_assertThisInitialized(_this));\n    _this.lockEditor = _this.toggleEditor.bind(_assertThisInitialized(_this), true);\n    _this.unlockEditor = _this.toggleEditor.bind(_assertThisInitialized(_this), false);\n    _this.handleReturn = _this.handleReturn.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onTab = _this.onTab.bind(_assertThisInitialized(_this));\n    _this.handleKeyCommand = _this.handleKeyCommand.bind(_assertThisInitialized(_this));\n    _this.handleBeforeInput = _this.handleBeforeInput.bind(_assertThisInitialized(_this));\n    _this.handlePastedText = _this.handlePastedText.bind(_assertThisInitialized(_this));\n    _this.toggleBlockType = _this.toggleBlockType.bind(_assertThisInitialized(_this));\n    _this.toggleInlineStyle = _this.toggleInlineStyle.bind(_assertThisInitialized(_this));\n    _this.onEditEntity = _this.onEditEntity.bind(_assertThisInitialized(_this));\n    _this.onRemoveEntity = _this.onRemoveEntity.bind(_assertThisInitialized(_this));\n    _this.addHR = _this.addHR.bind(_assertThisInitialized(_this));\n    _this.addBR = _this.addBR.bind(_assertThisInitialized(_this));\n    _this.onUndoRedo = _this.onUndoRedo.bind(_assertThisInitialized(_this));\n    _this.blockRenderer = _this.blockRenderer.bind(_assertThisInitialized(_this));\n    _this.onRequestSource = _this.onRequestSource.bind(_assertThisInitialized(_this));\n    _this.onCompleteSource = _this.onCompleteSource.bind(_assertThisInitialized(_this));\n    _this.onCloseSource = _this.onCloseSource.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    _this.renderSource = _this.renderSource.bind(_assertThisInitialized(_this));\n    var editorState = props.editorState,\n        rawContentState = props.rawContentState;\n    _this.state = {\n      readOnlyState: false,\n      hasFocus: false,\n      sourceOptions: null\n    };\n\n    if (editorState !== null) {\n      _this.getEditorState = _this.getEditorStateProp.bind(_assertThisInitialized(_this));\n    } else {\n      // If editorState is not used as a prop, create it in local state from rawContentState.\n      _this.state.editorState = createEditorStateFromRaw(rawContentState);\n      _this.getEditorState = _this.getEditorStateState.bind(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(DraftailEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.copySource = registerCopySource(this.editorRef.editor);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.copySource.unregister();\n      window.clearTimeout(this.updateTimeout);\n    }\n    /* :: onFocus: () => void; */\n\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.setState({\n        hasFocus: true\n      });\n      var onFocus = this.props.onFocus;\n\n      if (onFocus) {\n        onFocus();\n      }\n    }\n    /* :: onBlur: () => void; */\n\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.setState({\n        hasFocus: false\n      });\n      var onBlur = this.props.onBlur;\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n    /* :: onTab: (event: SyntheticKeyboardEvent<>) => true; */\n\n  }, {\n    key: \"onTab\",\n    value: function onTab(event) {\n      var maxListNesting = this.props.maxListNesting;\n      var editorState = this.getEditorState();\n      var newState = RichUtils.onTab(event, editorState, maxListNesting);\n      this.onChange(newState);\n      return true;\n    }\n    /* :: onChange: (nextState: EditorState) => void; */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(nextState) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          stateSaveInterval = _this$props.stateSaveInterval,\n          maxListNesting = _this$props.maxListNesting,\n          enableHorizontalRule = _this$props.enableHorizontalRule,\n          enableLineBreak = _this$props.enableLineBreak,\n          blockTypes = _this$props.blockTypes,\n          inlineStyles = _this$props.inlineStyles,\n          entityTypes = _this$props.entityTypes,\n          onChange = _this$props.onChange;\n      var editorState = this.getEditorState();\n      var shouldFilterPaste = nextState.getCurrentContent() !== editorState.getCurrentContent() && nextState.getLastChangeType() === \"insert-fragment\";\n      var filteredState = nextState;\n\n      if (shouldFilterPaste) {\n        filteredState = behavior.filterPaste({\n          maxListNesting: maxListNesting,\n          enableHorizontalRule: enableHorizontalRule,\n          enableLineBreak: enableLineBreak,\n          blockTypes: blockTypes,\n          inlineStyles: inlineStyles,\n          entityTypes: entityTypes\n        }, filteredState);\n      }\n\n      if (onChange) {\n        onChange(filteredState);\n      } else {\n        this.setState({\n          editorState: filteredState\n        }, function () {\n          window.clearTimeout(_this2.updateTimeout);\n          _this2.updateTimeout = window.setTimeout(_this2.saveState, stateSaveInterval);\n        });\n      }\n    }\n    /* :: onEditEntity: (entityKey: string) => void; */\n\n  }, {\n    key: \"onEditEntity\",\n    value: function onEditEntity(entityKey) {\n      var entityTypes = this.props.entityTypes;\n      var editorState = this.getEditorState();\n      var content = editorState.getCurrentContent();\n      var entity = content.getEntity(entityKey);\n      var entityType = entityTypes.find(function (t) {\n        return t.type === entity.type;\n      }); // $FlowFixMe\n\n      if (!entityType.block) {\n        var entitySelection = DraftUtils.getEntitySelection(editorState, entityKey);\n        var nextState = EditorState.acceptSelection(editorState, entitySelection);\n        this.onChange(nextState);\n      }\n\n      this.toggleSource(entity.getType(), entityKey, entity);\n    }\n    /* :: onRemoveEntity: (entityKey: string, blockKey: string) => void; */\n\n  }, {\n    key: \"onRemoveEntity\",\n    value: function onRemoveEntity(entityKey, blockKey) {\n      var entityTypes = this.props.entityTypes;\n      var editorState = this.getEditorState();\n      var content = editorState.getCurrentContent();\n      var entity = content.getEntity(entityKey);\n      var entityType = entityTypes.find(function (t) {\n        return t.type === entity.type;\n      });\n      var newState = editorState; // $FlowFixMe\n\n      if (entityType.block) {\n        newState = DraftUtils.removeBlockEntity(newState, entityKey, blockKey);\n      } else {\n        var entitySelection = DraftUtils.getEntitySelection(editorState, entityKey);\n        newState = RichUtils.toggleLink(newState, entitySelection, null);\n      }\n\n      this.onChange(newState);\n    }\n    /* :: onUndoRedo: (type: string) => void; */\n\n  }, {\n    key: \"onUndoRedo\",\n    value: function onUndoRedo(type) {\n      var editorState = this.getEditorState();\n      var newEditorState = editorState;\n\n      if (type === UNDO_TYPE) {\n        newEditorState = EditorState.undo(editorState);\n      } else if (type === REDO_TYPE) {\n        newEditorState = EditorState.redo(editorState);\n      }\n\n      this.onChange(newEditorState);\n    }\n    /* :: onRequestSource: (entityType: string) => void; */\n\n  }, {\n    key: \"onRequestSource\",\n    value: function onRequestSource(entityType) {\n      var editorState = this.getEditorState();\n      var contentState = editorState.getCurrentContent();\n      var entityKey = DraftUtils.getSelectionEntity(editorState);\n      this.toggleSource(entityType, entityKey, entityKey ? contentState.getEntity(entityKey) : null);\n    }\n    /* :: onCompleteSource: (nextState: EditorState) => void; */\n\n  }, {\n    key: \"onCompleteSource\",\n    value: function onCompleteSource(nextState) {\n      var _this3 = this;\n\n      this.setState({\n        sourceOptions: null\n      }, function () {\n        if (nextState) {\n          _this3.onChange(nextState);\n        }\n\n        window.setTimeout(function () {\n          _this3.setState({\n            readOnlyState: false\n          }, function () {\n            window.setTimeout(function () {\n              _this3.focus();\n            }, 0);\n          });\n        }, 0);\n      });\n    }\n    /* :: onCloseSource: () => void; */\n\n  }, {\n    key: \"onCloseSource\",\n    value: function onCloseSource() {\n      this.setState({\n        sourceOptions: null,\n        readOnlyState: false\n      });\n    }\n    /* :: getEditorStateProp: () => EditorState; */\n\n  }, {\n    key: \"getEditorStateProp\",\n    value: function getEditorStateProp() {\n      var editorState = this.props.editorState;\n      return editorState;\n    }\n    /* :: getEditorStateState: () => EditorState; */\n\n  }, {\n    key: \"getEditorStateState\",\n    value: function getEditorStateState() {\n      var editorState = this.state.editorState;\n      return editorState;\n    }\n    /* :: saveState: () => void; */\n\n  }, {\n    key: \"saveState\",\n    value: function saveState() {\n      var onSave = this.props.onSave;\n      var editorState = this.getEditorState();\n\n      if (onSave) {\n        onSave(serialiseEditorStateToRaw(editorState));\n      }\n    }\n    /* :: toggleEditor: (readOnlyState: boolean) => void; */\n\n  }, {\n    key: \"toggleEditor\",\n    value: function toggleEditor(readOnlyState) {\n      this.setState({\n        readOnlyState: readOnlyState\n      });\n    }\n    /* :: toggleSource: (type:string, entityKey: ?string, entity: ?EntityInstance) => void; */\n\n  }, {\n    key: \"toggleSource\",\n    value: function toggleSource(type, entityKey, entity) {\n      var entityTypes = this.props.entityTypes;\n      var entityType = entityTypes.find(function (item) {\n        return item.type === type;\n      });\n      this.setState({\n        readOnlyState: true,\n        sourceOptions: {\n          entity: entity,\n          entityKey: entityKey,\n          entityType: entityType\n        }\n      });\n    }\n    /* :: handleReturn: (e: SyntheticKeyboardEvent<>) => 'not-handled' | 'handled'; */\n\n  }, {\n    key: \"handleReturn\",\n    value: function handleReturn(e) {\n      var _this$props2 = this.props,\n          enableLineBreak = _this$props2.enableLineBreak,\n          inlineStyles = _this$props2.inlineStyles;\n      var editorState = this.getEditorState();\n      var ret = NOT_HANDLED; // alt + enter opens links and other entities with a `url` property.\n\n      if (e.altKey) {\n        // Mark the return as handled even if there is no entity.\n        // alt + enter should never create a newline anyway.\n        ret = HANDLED;\n        var entityKey = DraftUtils.getSelectionEntity(editorState);\n\n        if (entityKey) {\n          var _content = editorState.getCurrentContent();\n\n          var entityData = _content.getEntity(entityKey).getData();\n\n          if (entityData.url) {\n            window.open(entityData.url);\n          }\n        }\n      } else {\n        if (!enableLineBreak) {\n          // Quick hack to disable soft line breaks.\n          e.which = 0;\n        }\n\n        var newState = editorState;\n        var newStyle = false;\n        var selection = newState.getSelection(); // Check whether we should apply a Markdown styles shortcut.\n\n        if (selection.isCollapsed()) {\n          var block = DraftUtils.getSelectedBlock(editorState);\n          newStyle = behavior.handleBeforeInputInlineStyle(block.getText(), inlineStyles);\n\n          if (newStyle) {\n            newState = DraftUtils.applyMarkdownStyle(newState, newStyle, \"\");\n          }\n        }\n\n        var newLineState = DraftUtils.handleNewLine(newState, e); // Manually handle the return if there is a style to apply.\n\n        if (!newLineState && newStyle) {\n          var _content2 = newState.getCurrentContent();\n\n          var newContent = Modifier.splitBlock(_content2, selection);\n          newState = EditorState.push(newState, newContent, \"split-block\"); // Do not propagate the style from the last block.\n\n          newState = RichUtils.toggleInlineStyle(newState, newStyle.type);\n        } else {\n          newState = newLineState;\n        }\n\n        if (newState && newState !== editorState) {\n          ret = HANDLED;\n          this.onChange(newState);\n        }\n      }\n\n      return ret;\n    }\n    /* :: handleKeyCommand: (command: DraftEditorCommand) => 'handled' | 'not-handled'; */\n\n  }, {\n    key: \"handleKeyCommand\",\n    value: function handleKeyCommand(command) {\n      var _this$props3 = this.props,\n          entityTypes = _this$props3.entityTypes,\n          blockTypes = _this$props3.blockTypes,\n          inlineStyles = _this$props3.inlineStyles;\n      var editorState = this.getEditorState();\n\n      if (entityTypes.some(function (t) {\n        return t.type === command;\n      })) {\n        this.onRequestSource(command);\n        return HANDLED;\n      }\n\n      if (blockTypes.some(function (t) {\n        return t.type === command;\n      })) {\n        this.toggleBlockType(command);\n        return HANDLED;\n      }\n\n      if (inlineStyles.some(function (t) {\n        return t.type === command;\n      })) {\n        this.toggleInlineStyle(command);\n        return HANDLED;\n      } // Special case – some delete commands on atomic blocks are not covered by RichUtils.\n\n\n      if (command === \"delete\") {\n        var _newState = DraftUtils.handleDeleteAtomic(editorState);\n\n        if (_newState) {\n          this.onChange(_newState);\n          return HANDLED;\n        }\n      } // If the command is known but not whitelisted for this editor, treat it as handled but don't do anything.\n\n\n      if (KEY_COMMANDS.includes(command)) {\n        return HANDLED;\n      }\n\n      var newState = RichUtils.handleKeyCommand(editorState, command);\n\n      if (newState) {\n        this.onChange(newState);\n        return HANDLED;\n      }\n\n      return NOT_HANDLED;\n    }\n    /* :: handleBeforeInput: (char: string) => 'handled' | 'not-handled'; */\n\n  }, {\n    key: \"handleBeforeInput\",\n    value: function handleBeforeInput(char) {\n      var _this$props4 = this.props,\n          blockTypes = _this$props4.blockTypes,\n          inlineStyles = _this$props4.inlineStyles,\n          enableHorizontalRule = _this$props4.enableHorizontalRule;\n      var editorState = this.getEditorState();\n      var selection = editorState.getSelection();\n\n      if (selection.isCollapsed()) {\n        var block = DraftUtils.getSelectedBlock(editorState);\n        var startOffset = selection.getStartOffset();\n        var text = block.getText();\n        var beforeInput = text.slice(0, startOffset);\n        var mark = \"\".concat(beforeInput).concat(char);\n        var newEditorState = editorState;\n        var newBlockType = behavior.handleBeforeInputBlockType(mark, blockTypes);\n\n        if (newBlockType) {\n          newEditorState = DraftUtils.resetBlockWithType(newEditorState, newBlockType, text.replace(beforeInput, \"\"));\n        }\n\n        if (enableHorizontalRule && behavior.handleBeforeInputHR(mark, block)) {\n          newEditorState = DraftUtils.removeBlock(DraftUtils.addHorizontalRuleRemovingSelection(newEditorState), block.getKey());\n        }\n\n        var newStyle = behavior.handleBeforeInputInlineStyle(beforeInput, inlineStyles);\n\n        if (newStyle) {\n          newEditorState = DraftUtils.applyMarkdownStyle(newEditorState, newStyle, char);\n        }\n\n        if (newEditorState !== editorState) {\n          this.onChange(newEditorState);\n          return HANDLED;\n        }\n      }\n\n      return NOT_HANDLED;\n    }\n    /* :: handlePastedText: (text: string, html: ?string, editorState: EditorState) => 'handled' | 'not-handled'; */\n\n  }, {\n    key: \"handlePastedText\",\n    value: function handlePastedText(text, html, editorState) {\n      var stripPastedStyles = this.props.stripPastedStyles; // Leave paste handling to Draft.js when stripping styles is desirable.\n\n      if (stripPastedStyles) {\n        return NOT_HANDLED;\n      }\n\n      var pastedState = handleDraftEditorPastedText(html, editorState);\n\n      if (pastedState) {\n        this.onChange(pastedState);\n        return HANDLED;\n      }\n\n      return NOT_HANDLED;\n    }\n    /* :: toggleBlockType: (blockType: string) => void; */\n\n  }, {\n    key: \"toggleBlockType\",\n    value: function toggleBlockType(blockType) {\n      var editorState = this.getEditorState();\n      this.onChange(RichUtils.toggleBlockType(editorState, blockType));\n    }\n    /* :: toggleInlineStyle: (inlineStyle: string) => void; */\n\n  }, {\n    key: \"toggleInlineStyle\",\n    value: function toggleInlineStyle(inlineStyle) {\n      var editorState = this.getEditorState();\n      this.onChange(RichUtils.toggleInlineStyle(editorState, inlineStyle));\n    }\n    /* :: addHR: () => void; */\n\n  }, {\n    key: \"addHR\",\n    value: function addHR() {\n      var editorState = this.getEditorState();\n      this.onChange(DraftUtils.addHorizontalRuleRemovingSelection(editorState));\n    }\n    /* :: addBR: () => void; */\n\n  }, {\n    key: \"addBR\",\n    value: function addBR() {\n      var editorState = this.getEditorState();\n      this.onChange(DraftUtils.addLineBreak(editorState));\n    }\n    /* :: blockRenderer: (block: ContentBlock) => {}; */\n\n  }, {\n    key: \"blockRenderer\",\n    value: function blockRenderer(block) {\n      var entityTypes = this.props.entityTypes;\n      var editorState = this.getEditorState();\n      var contentState = editorState.getCurrentContent();\n\n      if (block.getType() !== BLOCK_TYPE.ATOMIC) {\n        return null;\n      }\n\n      var entityKey = block.getEntityAt(0);\n\n      if (!entityKey) {\n        return {\n          editable: false\n        };\n      }\n\n      var entity = contentState.getEntity(entityKey);\n      var isHorizontalRule = entity.type === ENTITY_TYPE.HORIZONTAL_RULE;\n\n      if (isHorizontalRule) {\n        return {\n          component: DividerBlock,\n          editable: false\n        };\n      }\n\n      var entityType = entityTypes.find(function (t) {\n        return t.type === entity.type;\n      });\n      return {\n        // $FlowFixMe\n        component: entityType.block,\n        editable: false,\n        props: {\n          /** The editorState is available for arbitrary content manipulation. */\n          editorState: editorState,\n\n          /** Current entity to manage. */\n          entity: entity,\n\n          /** Current entityKey to manage. */\n          entityKey: entityKey,\n\n          /** Whole entityType configuration, as provided to the editor. */\n          entityType: entityType,\n\n          /** Make the whole editor read-only, except for the block. */\n          lockEditor: this.lockEditor,\n\n          /** Make the editor editable again. */\n          unlockEditor: this.unlockEditor,\n\n          /** Shorthand to edit entity data. */\n          onEditEntity: this.onEditEntity.bind(null, entityKey),\n\n          /** Shorthand to remove an entity, and the related block. */\n          onRemoveEntity: this.onRemoveEntity.bind(null, entityKey, block.getKey()),\n\n          /** Update the editorState with arbitrary changes. */\n          onChange: this.onChange\n        }\n      };\n    }\n    /**\n     * Imperative focus API similar to that of Draft.js.\n     * See https://draftjs.org/docs/advanced-topics-managing-focus.html#content.\n     */\n\n    /* :: focus: () => void; */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.editorRef.focus();\n    }\n    /* :: renderSource: () => ?Node; */\n\n  }, {\n    key: \"renderSource\",\n    value: function renderSource() {\n      var sourceOptions = this.state.sourceOptions;\n      var editorState = this.getEditorState();\n\n      if (sourceOptions && sourceOptions.entityType) {\n        var Source = sourceOptions.entityType.source;\n        return /*#__PURE__*/React.createElement(Source\n        /** The editorState is available for arbitrary content manipulation. */\n        , {\n          editorState: editorState\n          /** Takes the updated editorState, or null if there are no changes, and focuses the editor. */\n          ,\n          onComplete: this.onCompleteSource\n          /** Closes the source, without focusing the editor again. */\n          ,\n          onClose: this.onCloseSource\n          /** Current entity to edit, if any. */\n          ,\n          entity: sourceOptions.entity\n          /** Current entityKey to edit, if any. */\n          ,\n          entityKey: sourceOptions.entityKey\n          /** Whole entityType configuration, as provided to the editor. */\n          ,\n          entityType: sourceOptions.entityType\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props5 = this.props,\n          placeholder = _this$props5.placeholder,\n          enableHorizontalRule = _this$props5.enableHorizontalRule,\n          enableLineBreak = _this$props5.enableLineBreak,\n          showUndoControl = _this$props5.showUndoControl,\n          showRedoControl = _this$props5.showRedoControl,\n          stripPastedStyles = _this$props5.stripPastedStyles,\n          spellCheck = _this$props5.spellCheck,\n          textAlignment = _this$props5.textAlignment,\n          textDirectionality = _this$props5.textDirectionality,\n          autoCapitalize = _this$props5.autoCapitalize,\n          autoComplete = _this$props5.autoComplete,\n          autoCorrect = _this$props5.autoCorrect,\n          ariaDescribedBy = _this$props5.ariaDescribedBy,\n          blockTypes = _this$props5.blockTypes,\n          inlineStyles = _this$props5.inlineStyles,\n          entityTypes = _this$props5.entityTypes,\n          decorators = _this$props5.decorators,\n          controls = _this$props5.controls,\n          readOnly = _this$props5.readOnly,\n          maxListNesting = _this$props5.maxListNesting,\n          plugins = _this$props5.plugins,\n          topToolbar = _this$props5.topToolbar,\n          bottomToolbar = _this$props5.bottomToolbar;\n      var _this$state = this.state,\n          hasFocus = _this$state.hasFocus,\n          readOnlyState = _this$state.readOnlyState;\n      var editorState = this.getEditorState();\n      var isReadOnly = readOnlyState || readOnly;\n      var hidePlaceholder = DraftUtils.shouldHidePlaceholder(editorState);\n      var entityDecorators = entityTypes.filter(function (type) {\n        return !!type.decorator;\n      }).map(function (type) {\n        return {\n          strategy: DraftUtils.getEntityTypeStrategy(type.type),\n          // $FlowFixMe\n          component: decorateComponentWithProps(type.decorator, {\n            onEdit: _this4.onEditEntity,\n            onRemove: _this4.onRemoveEntity\n          })\n        };\n      });\n      var TopToolbar = topToolbar;\n      var BottomToolbar = bottomToolbar;\n      var toolbarProps = {\n        currentStyles: editorState.getCurrentInlineStyle(),\n        currentBlock: DraftUtils.getSelectedBlock(editorState).getType(),\n        enableHorizontalRule: enableHorizontalRule,\n        enableLineBreak: enableLineBreak,\n        showUndoControl: showUndoControl,\n        showRedoControl: showRedoControl,\n        blockTypes: blockTypes,\n        inlineStyles: inlineStyles,\n        entityTypes: entityTypes,\n        controls: controls,\n        readOnly: isReadOnly,\n        toggleBlockType: this.toggleBlockType,\n        toggleInlineStyle: this.toggleInlineStyle,\n        addHR: this.addHR,\n        addBR: this.addBR,\n        onUndoRedo: this.onUndoRedo,\n        onRequestSource: this.onRequestSource,\n        getEditorState: this.getEditorState,\n        onChange: this.onChange\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Draftail-Editor\".concat(isReadOnly ? \" Draftail-Editor--readonly\" : \"\").concat(hidePlaceholder ? \" Draftail-Editor--hide-placeholder\" : \"\").concat(hasFocus ? \" Draftail-Editor--focus\" : \"\")\n      }, TopToolbar ? /*#__PURE__*/React.createElement(TopToolbar, toolbarProps) : null, /*#__PURE__*/React.createElement(Editor, {\n        customStyleMap: behavior.getCustomStyleMap(inlineStyles),\n        ref: function ref(_ref) {\n          _this4.editorRef = _ref;\n        },\n        editorState: editorState,\n        onChange: this.onChange,\n        placeholder: placeholder,\n        readOnly: isReadOnly,\n        stripPastedStyles: stripPastedStyles,\n        spellCheck: spellCheck,\n        textAlignment: textAlignment,\n        textDirectionality: textDirectionality,\n        autoCapitalize: autoCapitalize,\n        autoComplete: autoComplete,\n        autoCorrect: autoCorrect,\n        ariaDescribedBy: ariaDescribedBy,\n        handleReturn: this.handleReturn,\n        defaultKeyBindings: false,\n        handleKeyCommand: this.handleKeyCommand,\n        handleBeforeInput: this.handleBeforeInput,\n        handlePastedText: this.handlePastedText,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onTab: this.onTab,\n        blockRendererFn: this.blockRenderer,\n        blockRenderMap: behavior.getBlockRenderMap(blockTypes),\n        blockStyleFn: behavior.blockStyleFn // Include the keyBindingFn in a plugin here so that\n        // other plugin keyBindingFn's are still called, while\n        // still being able to override the Draft.js oversensitive\n        // keyboard shortcuts.\n        ,\n        plugins: plugins.concat([{\n          keyBindingFn: behavior.getKeyBindingFn(blockTypes, inlineStyles, entityTypes)\n        }]) // $FlowFixMe\n        ,\n        decorators: decorators.concat(entityDecorators)\n      }), BottomToolbar ? /*#__PURE__*/React.createElement(BottomToolbar, toolbarProps) : null, this.renderSource(), /*#__PURE__*/React.createElement(ListNestingStyles, {\n        max: maxListNesting\n      }));\n    }\n  }]);\n\n  return DraftailEditor;\n}(Component);\n\nDraftailEditor.defaultProps = defaultProps;\nexport { BLOCK_TYPE, DraftUtils, DraftailEditor, ENTITY_TYPE, INLINE_STYLE, Icon, ToolbarButton };","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulaması/client/node_modules/draftail/dist/draftail.esm.js"],"names":["React","PureComponent","Component","DefaultDraftInlineStyle","Modifier","SelectionState","EditorState","AtomicBlockUtils","RichUtils","KeyBindingUtil","DefaultDraftBlockRenderMap","getDefaultKeyBinding","Editor","blockDepthStyleFn","createEditorStateFromRaw","registerCopySource","serialiseEditorStateToRaw","handleDraftEditorPastedText","ListNestingStyles","decorateComponentWithProps","isSoftNewlineEvent","filterEditorState","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_inherits","subClass","superClass","create","constructor","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","_createSuperInternal","Super","result","NewTarget","arguments","apply","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","Array","isArray","_arrayLikeToArray","iter","Symbol","iterator","from","minLen","n","slice","name","test","len","arr2","BLOCK_TYPE","UNSTYLED","HEADER_ONE","HEADER_TWO","HEADER_THREE","HEADER_FOUR","HEADER_FIVE","HEADER_SIX","UNORDERED_LIST_ITEM","ORDERED_LIST_ITEM","BLOCKQUOTE","CODE","ATOMIC","ENTITY_TYPE","LINK","IMAGE","HORIZONTAL_RULE","INLINE_STYLE","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","MARK","QUOTATION","SMALL","SAMPLE","INSERT","DELETE","KEYBOARD","SUPERSCRIPT","SUBSCRIPT","BLOCK_TYPES","values","ENTITY_TYPES","INLINE_STYLES","KEY_COMMANDS","concat","FONT_FAMILY_MONOSPACE","CUSTOM_STYLE_MAP","padding","margin","fontSize","backgroundColor","fontFamily","borderRadius","fontStyle","textDecoration","lineHeight","color","verticalAlign","border","borderBottomColor","boxShadow","BR_TYPE","UNDO_TYPE","REDO_TYPE","KEY_CODES","K","B","U","J","I","X","INPUT_BLOCK_MAP","INPUT_STYLE_MAP","pattern","type","map","_ref","pat","replace","char","regex","INPUT_ENTITY_MAP","LABELS","DESCRIPTIONS","KEYBOARD_SHORTCUTS","other","macOS","HANDLED","NOT_HANDLED","DraftUtils","getSelectedBlock","editorState","selection","getSelection","content","getCurrentContent","getBlockMap","get","getStartKey","getSelectionEntity","entity","start","getStartOffset","end","getEndOffset","block","currentEntity","getEntityAt","undefined","getEntitySelection","entityKey","entityRange","findEntityRanges","merge","anchorOffset","isBackward","focusOffset","updateBlockEntity","data","nextContent","mergeEntityData","mergeBlockData","anchorKey","getKey","focusKey","getLength","push","addHorizontalRuleRemovingSelection","contentState","contentStateWithEntity","createEntity","getLastCreatedEntityKey","insertAtomicBlock","resetBlockWithType","newType","newText","newData","selectionState","blockMap","chars","getCharacterList","startOffset","sliceOffset","getText","shift","newBlock","text","characterList","newContentState","set","newSelectionState","acceptSelection","currentContent","applyMarkdownStyle","range","marked","endMarker","startMarker","applyInlineStyle","removeRange","offset","getFocusOffset","endSelection","selectionAfter","insertText","removeBlock","remove","removeBlockEntity","blockKey","newState","newSelection","newContent","forceSelection","handleDeleteAtomic","getAnchorKey","getAnchorOffset","getBlockForKey","isCollapsed","getType","getEntityTypeStrategy","entityType","strategy","callback","character","getEntity","shouldHidePlaceholder","hasText","first","insertNewUnstyledBlock","splitBlock","insertedBlockKey","getKeyAfter","addLineBreak","insertSoftNewline","fragment","getSelectionAfter","getInlineStyleAt","handleHardNewline","blockType","isListBlock","endsWith","depth","getDepth","tryToRemoveBlockStyle","handleNewLine","event","isDeferredBreakoutBlock","includes","isEmpty","setBlockType","hasCommandModifier","isOptionKeyCommand","hasCmd","IS_MAC_OS","altKey","behavior","getBlockRenderMap","blockTypes","renderMap","some","element","wrapper","filter","forEach","blockStyleFn","getKeyBindingFn","inlineStyles","entityTypes","getEnabled","activeTypes","reduce","enabled","blocks","styles","entities","keyBindingFn","shiftKey","keyCode","ctrlAlt","ctrlKey","metaKey","hasKeyboardShortcut","getKeyboardShortcut","isMacOS","shortcut","system","handleBeforeInputBlockType","mark","find","b","handleBeforeInputHR","handleBeforeInputInlineStyle","input","activeShortcuts","s","match","_ref2","RegExp","exec","index","getCustomStyleMap","customStyleMap","style","filterPaste","_ref3","maxListNesting","enableHorizontalRule","enableLineBreak","enabledEntityTypes","whitespacedCharacters","maxNesting","Icon","icon","title","className","children","createElement","xlinkHref","d","width","height","viewBox","role","defaultProps","ToolbarButton","_PureComponent","_super","_this","state","showTooltipOnHover","onMouseDown","bind","onMouseLeave","_this$props","onClick","preventDefault","setState","render","_this$props2","active","label","tabIndex","ToolbarGroup","hasChildren","Children","toArray","c","getButtonLabel","config","showButton","Boolean","getButtonTitle","description","hasShortcut","desc","ToolbarDefaults","currentStyles","currentBlock","showUndoControl","showRedoControl","toggleBlockType","toggleInlineStyle","addHR","addBR","onUndoRedo","onRequestSource","t","has","Toolbar","controls","getEditorState","onChange","Control","DividerBlock","rawContentState","onSave","onFocus","onBlur","placeholder","stripPastedStyles","spellCheck","readOnly","textAlignment","textDirectionality","autoCapitalize","autoComplete","autoCorrect","ariaDescribedBy","decorators","plugins","topToolbar","bottomToolbar","stateSaveInterval","DraftailEditor","_Component","saveState","toggleSource","toggleEditor","lockEditor","unlockEditor","handleReturn","onTab","handleKeyCommand","handleBeforeInput","handlePastedText","onEditEntity","onRemoveEntity","blockRenderer","onCompleteSource","onCloseSource","focus","renderSource","readOnlyState","hasFocus","sourceOptions","getEditorStateProp","getEditorStateState","componentDidMount","copySource","editorRef","editor","componentWillUnmount","unregister","window","clearTimeout","updateTimeout","nextState","_this2","shouldFilterPaste","getLastChangeType","filteredState","setTimeout","entitySelection","toggleLink","newEditorState","undo","redo","_this3","item","ret","_content","entityData","getData","url","open","which","newStyle","newLineState","_content2","command","_this$props3","_newState","_this$props4","beforeInput","newBlockType","html","pastedState","inlineStyle","editable","isHorizontalRule","component","Source","source","onComplete","onClose","_this4","_this$props5","_this$state","isReadOnly","hidePlaceholder","entityDecorators","decorator","onEdit","onRemove","TopToolbar","BottomToolbar","toolbarProps","getCurrentInlineStyle","ref","defaultKeyBindings","blockRendererFn","blockRenderMap","max"],"mappings":"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","sourcesContent":["import React, { PureComponent, Component } from 'react';\nimport { DefaultDraftInlineStyle, Modifier, SelectionState, EditorState, AtomicBlockUtils, RichUtils, KeyBindingUtil, DefaultDraftBlockRenderMap, getDefaultKeyBinding } from 'draft-js';\nimport Editor from 'draft-js-plugins-editor';\nimport { blockDepthStyleFn, createEditorStateFromRaw, registerCopySource, serialiseEditorStateToRaw, handleDraftEditorPastedText, ListNestingStyles } from 'draftjs-conductor';\nexport { createEditorStateFromRaw, serialiseEditorStateToRaw } from 'draftjs-conductor';\nimport decorateComponentWithProps from 'decorate-component-with-props';\nimport isSoftNewlineEvent from 'draft-js/lib/isSoftNewlineEvent';\nimport { filterEditorState } from 'draftjs-filters';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar BLOCK_TYPE = {\n  // This is used to represent a normal text block (paragraph).\n  UNSTYLED: \"unstyled\",\n  HEADER_ONE: \"header-one\",\n  HEADER_TWO: \"header-two\",\n  HEADER_THREE: \"header-three\",\n  HEADER_FOUR: \"header-four\",\n  HEADER_FIVE: \"header-five\",\n  HEADER_SIX: \"header-six\",\n  UNORDERED_LIST_ITEM: \"unordered-list-item\",\n  ORDERED_LIST_ITEM: \"ordered-list-item\",\n  BLOCKQUOTE: \"blockquote\",\n  CODE: \"code-block\",\n  // This represents a \"custom\" block, not for rich text, with arbitrary content.\n  ATOMIC: \"atomic\"\n};\nvar ENTITY_TYPE = {\n  LINK: \"LINK\",\n  IMAGE: \"IMAGE\",\n  HORIZONTAL_RULE: \"HORIZONTAL_RULE\"\n}; // See https://github.com/facebook/draft-js/blob/master/src/model/immutable/DefaultDraftInlineStyle.js\n\nvar INLINE_STYLE = {\n  BOLD: \"BOLD\",\n  ITALIC: \"ITALIC\",\n  CODE: \"CODE\",\n  UNDERLINE: \"UNDERLINE\",\n  STRIKETHROUGH: \"STRIKETHROUGH\",\n  MARK: \"MARK\",\n  QUOTATION: \"QUOTATION\",\n  SMALL: \"SMALL\",\n  SAMPLE: \"SAMPLE\",\n  INSERT: \"INSERT\",\n  DELETE: \"DELETE\",\n  KEYBOARD: \"KEYBOARD\",\n  SUPERSCRIPT: \"SUPERSCRIPT\",\n  SUBSCRIPT: \"SUBSCRIPT\"\n};\nvar BLOCK_TYPES = Object.values(BLOCK_TYPE);\nvar ENTITY_TYPES = Object.values(ENTITY_TYPE);\nvar INLINE_STYLES = Object.values(INLINE_STYLE);\nvar KEY_COMMANDS = [].concat(_toConsumableArray(BLOCK_TYPES), _toConsumableArray(ENTITY_TYPES), _toConsumableArray(INLINE_STYLES), [// Lowercase identifiers used by Draft.js\n// See https://github.com/facebook/draft-js/blob/585af35c3a8c31fefb64bc884d4001faa96544d3/src/model/constants/DraftEditorCommand.js#L58-L61.\n\"bold\", \"italic\", \"underline\", \"code\"]);\nvar FONT_FAMILY_MONOSPACE = \"Consolas, Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace, sans-serif\"; // See https://github.com/facebook/draft-js/blob/master/src/model/immutable/DefaultDraftInlineStyle.js\n\nvar CUSTOM_STYLE_MAP = {};\nCUSTOM_STYLE_MAP[INLINE_STYLE.BOLD] = DefaultDraftInlineStyle[INLINE_STYLE.BOLD];\nCUSTOM_STYLE_MAP[INLINE_STYLE.ITALIC] = DefaultDraftInlineStyle[INLINE_STYLE.ITALIC];\nCUSTOM_STYLE_MAP[INLINE_STYLE.STRIKETHROUGH] = DefaultDraftInlineStyle[INLINE_STYLE.STRIKETHROUGH];\nCUSTOM_STYLE_MAP[INLINE_STYLE.UNDERLINE] = DefaultDraftInlineStyle[INLINE_STYLE.UNDERLINE];\nCUSTOM_STYLE_MAP[INLINE_STYLE.CODE] = {\n  padding: \"0.2em 0.3125em\",\n  margin: \"0\",\n  fontSize: \"85%\",\n  backgroundColor: \"rgba(27, 31, 35, 0.05)\",\n  fontFamily: FONT_FAMILY_MONOSPACE,\n  borderRadius: \"3px\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.MARK] = {\n  backgroundColor: \"yellow\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.QUOTATION] = {\n  fontStyle: \"italic\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.SMALL] = {\n  fontSize: \"smaller\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.SAMPLE] = {\n  fontFamily: FONT_FAMILY_MONOSPACE\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.INSERT] = {\n  textDecoration: \"underline\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.DELETE] = {\n  textDecoration: \"line-through\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.KEYBOARD] = {\n  fontFamily: FONT_FAMILY_MONOSPACE,\n  padding: \"3px 5px\",\n  fontSize: \"11px\",\n  lineHeight: \"10px\",\n  color: \"#444d56\",\n  verticalAlign: \"middle\",\n  backgroundColor: \"#fafbfc\",\n  border: \"solid 1px #c6cbd1\",\n  borderBottomColor: \"#959da5\",\n  borderRadius: \"3px\",\n  boxShadow: \"inset 0 -1px 0 #959da5\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.SUPERSCRIPT] = {\n  fontSize: \"80%\",\n  verticalAlign: \"super\",\n  lineHeight: \"1\"\n};\nCUSTOM_STYLE_MAP[INLINE_STYLE.SUBSCRIPT] = {\n  fontSize: \"80%\",\n  verticalAlign: \"sub\",\n  lineHeight: \"1\"\n};\nvar BR_TYPE = \"BR\";\nvar UNDO_TYPE = \"undo\";\nvar REDO_TYPE = \"redo\"; // Originally from https://github.com/facebook/draft-js/blob/master/src/component/utils/getDefaultKeyBinding.js.\n\nvar KEY_CODES = {\n  K: 75,\n  B: 66,\n  U: 85,\n  J: 74,\n  I: 73,\n  X: 88,\n  \"0\": 48,\n  \"1\": 49,\n  \"2\": 50,\n  \"3\": 51,\n  \"4\": 52,\n  \"5\": 53,\n  \"6\": 54,\n  \"7\": 55,\n  \"8\": 56,\n  \".\": 190,\n  \",\": 188\n};\nvar INPUT_BLOCK_MAP = {\n  \"* \": BLOCK_TYPE.UNORDERED_LIST_ITEM,\n  \"- \": BLOCK_TYPE.UNORDERED_LIST_ITEM,\n  \"1. \": BLOCK_TYPE.ORDERED_LIST_ITEM,\n  \"# \": BLOCK_TYPE.HEADER_ONE,\n  \"## \": BLOCK_TYPE.HEADER_TWO,\n  \"### \": BLOCK_TYPE.HEADER_THREE,\n  \"#### \": BLOCK_TYPE.HEADER_FOUR,\n  \"##### \": BLOCK_TYPE.HEADER_FIVE,\n  \"###### \": BLOCK_TYPE.HEADER_SIX,\n  \"> \": BLOCK_TYPE.BLOCKQUOTE,\n  // It makes more sense not to require a space here.\n  // This matches how Dropbox Paper operates.\n  \"```\": BLOCK_TYPE.CODE\n};\nvar INPUT_STYLE_MAP = [// Order matters, as shorter patterns are contained in the longer ones.\n{\n  pattern: \"**\",\n  type: INLINE_STYLE.BOLD\n}, {\n  pattern: \"__\",\n  type: INLINE_STYLE.BOLD\n}, {\n  pattern: \"*\",\n  type: INLINE_STYLE.ITALIC\n}, {\n  pattern: \"_\",\n  type: INLINE_STYLE.ITALIC\n}, {\n  pattern: \"~~\",\n  type: INLINE_STYLE.STRIKETHROUGH\n}, {\n  pattern: \"~\",\n  type: INLINE_STYLE.STRIKETHROUGH\n}, {\n  pattern: \"`\",\n  type: INLINE_STYLE.CODE\n}].map(function (_ref) {\n  var pattern = _ref.pattern,\n      type = _ref.type;\n  var pat = pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n  var char = pattern[0].replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"); // https://regexper.com/#%28%5Cs%7C%5E%29__%28%5B%5E%5Cs_%5D%7B1%2C2%7D%7C%5B%5E%5Cs_%5D.%2B%5B%5E%5Cs_%5D%29__%24\n  // This is stored as an escaped string instead of a RegExp object because they are stateful.\n  // This regex encapsulates a few rules:\n  // - The pattern must be preceded by whitespace, or be at the start of the input.\n  // - The pattern must end the input.\n  // - In-between the start and end patterns, there can't be only whitespace or characters from the pattern.\n  // - There has to be at least 1 char that's not whitespace or the pattern’s char.\n\n  var regex = \"(\\\\s|^)\".concat(pat, \"([^\\\\s\").concat(char, \"]{1,2}|[^\\\\s\").concat(char, \"].+[^\\\\s\").concat(char, \"])\").concat(pat, \"$\");\n  return {\n    pattern: pattern,\n    type: type,\n    regex: regex\n  };\n});\nvar INPUT_ENTITY_MAP = {};\nINPUT_ENTITY_MAP[ENTITY_TYPE.HORIZONTAL_RULE] = \"---\";\nvar LABELS = {};\nLABELS[BLOCK_TYPE.UNSTYLED] = \"P\";\nLABELS[BLOCK_TYPE.HEADER_ONE] = \"H1\";\nLABELS[BLOCK_TYPE.HEADER_TWO] = \"H2\";\nLABELS[BLOCK_TYPE.HEADER_THREE] = \"H3\";\nLABELS[BLOCK_TYPE.HEADER_FOUR] = \"H4\";\nLABELS[BLOCK_TYPE.HEADER_FIVE] = \"H5\";\nLABELS[BLOCK_TYPE.HEADER_SIX] = \"H6\";\nLABELS[BLOCK_TYPE.UNORDERED_LIST_ITEM] = \"UL\";\nLABELS[BLOCK_TYPE.ORDERED_LIST_ITEM] = \"OL\";\nLABELS[BLOCK_TYPE.CODE] = \"{ }\";\nLABELS[BLOCK_TYPE.BLOCKQUOTE] = \"❝\";\nLABELS[INLINE_STYLE.BOLD] = \"B\";\nLABELS[INLINE_STYLE.ITALIC] = \"𝘐\";\nLABELS[INLINE_STYLE.CODE] = \"{ }\";\nLABELS[INLINE_STYLE.UNDERLINE] = \"U\";\nLABELS[INLINE_STYLE.STRIKETHROUGH] = \"S\";\nLABELS[INLINE_STYLE.MARK] = \"☆\";\nLABELS[INLINE_STYLE.QUOTATION] = \"❛\";\nLABELS[INLINE_STYLE.SMALL] = \"𝖲𝗆a𝗅𝗅\";\nLABELS[INLINE_STYLE.SAMPLE] = \"𝙳𝚊𝚝𝚊\";\nLABELS[INLINE_STYLE.INSERT] = \"Ins\";\nLABELS[INLINE_STYLE.DELETE] = \"Del\";\nLABELS[INLINE_STYLE.SUPERSCRIPT] = \"Sup\";\nLABELS[INLINE_STYLE.SUBSCRIPT] = \"Sub\";\nLABELS[INLINE_STYLE.KEYBOARD] = \"⌘\";\nLABELS[ENTITY_TYPE.LINK] = \"🔗\";\nLABELS[ENTITY_TYPE.IMAGE] = \"🖼\";\nLABELS[ENTITY_TYPE.HORIZONTAL_RULE] = \"―\";\nLABELS[BR_TYPE] = \"↵\";\nLABELS[UNDO_TYPE] = \"↺\";\nLABELS[REDO_TYPE] = \"↻\";\nvar DESCRIPTIONS = {};\nDESCRIPTIONS[BLOCK_TYPE.UNSTYLED] = \"Paragraph\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_ONE] = \"Heading 1\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_TWO] = \"Heading 2\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_THREE] = \"Heading 3\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_FOUR] = \"Heading 4\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_FIVE] = \"Heading 5\";\nDESCRIPTIONS[BLOCK_TYPE.HEADER_SIX] = \"Heading 6\";\nDESCRIPTIONS[BLOCK_TYPE.UNORDERED_LIST_ITEM] = \"Bulleted list\";\nDESCRIPTIONS[BLOCK_TYPE.ORDERED_LIST_ITEM] = \"Numbered list\";\nDESCRIPTIONS[BLOCK_TYPE.BLOCKQUOTE] = \"Blockquote\";\nDESCRIPTIONS[BLOCK_TYPE.CODE] = \"Code block\";\nDESCRIPTIONS[INLINE_STYLE.BOLD] = \"Bold\";\nDESCRIPTIONS[INLINE_STYLE.ITALIC] = \"Italic\";\nDESCRIPTIONS[INLINE_STYLE.CODE] = \"Code\";\nDESCRIPTIONS[INLINE_STYLE.UNDERLINE] = \"Underline\";\nDESCRIPTIONS[INLINE_STYLE.STRIKETHROUGH] = \"Strikethrough\";\nDESCRIPTIONS[INLINE_STYLE.MARK] = \"Highlight\";\nDESCRIPTIONS[INLINE_STYLE.QUOTATION] = \"Inline quotation\";\nDESCRIPTIONS[INLINE_STYLE.SMALL] = \"Small\";\nDESCRIPTIONS[INLINE_STYLE.SAMPLE] = \"Program output\";\nDESCRIPTIONS[INLINE_STYLE.INSERT] = \"Inserted\";\nDESCRIPTIONS[INLINE_STYLE.DELETE] = \"Deleted\";\nDESCRIPTIONS[INLINE_STYLE.KEYBOARD] = \"Shortcut key\";\nDESCRIPTIONS[INLINE_STYLE.SUPERSCRIPT] = \"Superscript\";\nDESCRIPTIONS[INLINE_STYLE.SUBSCRIPT] = \"Subscript\";\nDESCRIPTIONS[ENTITY_TYPE.LINK] = \"Link\";\nDESCRIPTIONS[ENTITY_TYPE.IMAGE] = \"Image\";\nDESCRIPTIONS[ENTITY_TYPE.HORIZONTAL_RULE] = \"Horizontal line\";\nDESCRIPTIONS[BR_TYPE] = \"Line break\";\nDESCRIPTIONS[UNDO_TYPE] = \"Undo\";\nDESCRIPTIONS[REDO_TYPE] = \"Redo\";\nvar KEYBOARD_SHORTCUTS = {};\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.UNSTYLED] = \"⌫\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_ONE] = \"#\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_TWO] = \"##\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_THREE] = \"###\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_FOUR] = \"####\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_FIVE] = \"#####\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.HEADER_SIX] = \"######\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.UNORDERED_LIST_ITEM] = \"-\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.ORDERED_LIST_ITEM] = \"1.\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.BLOCKQUOTE] = \">\";\nKEYBOARD_SHORTCUTS[BLOCK_TYPE.CODE] = \"```\";\nKEYBOARD_SHORTCUTS[INLINE_STYLE.BOLD] = {\n  other: \"Ctrl + B\",\n  macOS: \"⌘ + B\"\n};\nKEYBOARD_SHORTCUTS[INLINE_STYLE.ITALIC] = {\n  other: \"Ctrl + I\",\n  macOS: \"⌘ + I\"\n};\nKEYBOARD_SHORTCUTS[INLINE_STYLE.UNDERLINE] = {\n  other: \"Ctrl + U\",\n  macOS: \"⌘ + U\"\n};\nKEYBOARD_SHORTCUTS[INLINE_STYLE.STRIKETHROUGH] = {\n  other: \"Ctrl + ⇧ + X\",\n  macOS: \"⌘ + ⇧ + X\"\n};\nKEYBOARD_SHORTCUTS[INLINE_STYLE.SUPERSCRIPT] = {\n  other: \"Ctrl + .\",\n  macOS: \"⌘ + .\"\n};\nKEYBOARD_SHORTCUTS[INLINE_STYLE.SUBSCRIPT] = {\n  other: \"Ctrl + ,\",\n  macOS: \"⌘ + ,\"\n};\nKEYBOARD_SHORTCUTS[ENTITY_TYPE.LINK] = {\n  other: \"Ctrl + K\",\n  macOS: \"⌘ + K\"\n};\nKEYBOARD_SHORTCUTS[BR_TYPE] = \"⇧ + ↵\";\nKEYBOARD_SHORTCUTS[ENTITY_TYPE.HORIZONTAL_RULE] = \"- - -\";\nKEYBOARD_SHORTCUTS[UNDO_TYPE] = {\n  other: \"Ctrl + Z\",\n  macOS: \"⌘ + Z\"\n};\nKEYBOARD_SHORTCUTS[REDO_TYPE] = {\n  other: \"Ctrl + ⇧ + Z\",\n  macOS: \"⌘ + ⇧ + Z\"\n};\nvar HANDLED = \"handled\";\nvar NOT_HANDLED = \"not-handled\";\n\n/**\n * Inspired by draftjs-utils, with our custom functions.\n *\n * DraftUtils functions are utility helpers useful in isolation, specific to the Draft.js API,\n * without ties to Draftail's specific behavior or other APIs.\n */\n\nvar DraftUtils = {\n  /**\n   * Returns the first selected block.\n   */\n  getSelectedBlock: function getSelectedBlock(editorState) {\n    var selection = editorState.getSelection();\n    var content = editorState.getCurrentContent();\n    return content.getBlockMap().get(selection.getStartKey());\n  },\n\n  /**\n   * Returns the entity applicable to whole of current selection.\n   * An entity can not span multiple blocks.\n   * https://github.com/jpuri/draftjs-utils/blob/e81c0ae19c3b0fdef7e0c1b70d924398956be126/js/inline.js#L75\n   */\n  getSelectionEntity: function getSelectionEntity(editorState) {\n    var entity;\n    var selection = editorState.getSelection();\n    var start = selection.getStartOffset();\n    var end = selection.getEndOffset();\n\n    if (start === end && start === 0) {\n      end = 1;\n    } else if (start === end) {\n      start -= 1;\n    }\n\n    var block = this.getSelectedBlock(editorState);\n\n    for (var i = start; i < end; i += 1) {\n      var currentEntity = block.getEntityAt(i);\n\n      if (!currentEntity) {\n        entity = undefined;\n        break;\n      }\n\n      if (i === start) {\n        entity = currentEntity;\n      } else if (entity !== currentEntity) {\n        entity = undefined;\n        break;\n      }\n    }\n\n    return entity;\n  },\n\n  /**\n   * Creates a selection on a given entity in the currently selected block.\n   * Returns the current selection if no entity key is provided, or if the entity could not be found.\n   */\n  getEntitySelection: function getEntitySelection(editorState, entityKey) {\n    var selection = editorState.getSelection();\n\n    if (!entityKey) {\n      return selection;\n    }\n\n    var block = this.getSelectedBlock(editorState);\n    var entityRange; // https://github.com/jpuri/draftjs-utils/blob/e81c0ae19c3b0fdef7e0c1b70d924398956be126/js/inline.js#L111\n\n    block.findEntityRanges(function (value) {\n      return value.get(\"entity\") === entityKey;\n    }, function (start, end) {\n      entityRange = {\n        start: start,\n        end: end\n      };\n    });\n\n    if (!entityRange) {\n      return selection;\n    }\n\n    return selection.merge({\n      anchorOffset: selection.isBackward ? entityRange.end : entityRange.start,\n      focusOffset: selection.isBackward ? entityRange.start : entityRange.end\n    });\n  },\n\n  /**\n   * Updates a given atomic block's entity, merging new data with the old one.\n   */\n  updateBlockEntity: function updateBlockEntity(editorState, block, data) {\n    var content = editorState.getCurrentContent();\n    var nextContent = content.mergeEntityData(block.getEntityAt(0), data); // To remove in Draft.js 0.11.\n    // This is necessary because entity data is still using a mutable, global store.\n\n    nextContent = Modifier.mergeBlockData(nextContent, new SelectionState({\n      anchorKey: block.getKey(),\n      anchorOffset: 0,\n      focusKey: block.getKey(),\n      focusOffset: block.getLength()\n    }), {});\n    return EditorState.push(editorState, nextContent, \"apply-entity\");\n  },\n\n  /**\n   * Inserts a horizontal rule in the place of the current selection.\n   * Returns updated EditorState.\n   * Inspired by DraftUtils.addLineBreakRemovingSelection.\n   */\n  addHorizontalRuleRemovingSelection: function addHorizontalRuleRemovingSelection(editorState) {\n    var contentState = editorState.getCurrentContent();\n    var contentStateWithEntity = contentState.createEntity( // Draft.js Flow typing issue.\n    // See https://github.com/facebook/draft-js/issues/868.\n    // $FlowFixMe\n    ENTITY_TYPE.HORIZONTAL_RULE, \"IMMUTABLE\", {});\n    var entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n    return AtomicBlockUtils.insertAtomicBlock(editorState, entityKey, \" \");\n  },\n\n  /**\n   * Changes a block type to be `newType`, setting its new text.\n   * Also removes the required characters from the characterList,\n   * and resets block data.\n   */\n  resetBlockWithType: function resetBlockWithType(editorState, newType, newText) {\n    var newData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var contentState = editorState.getCurrentContent();\n    var selectionState = editorState.getSelection();\n    var key = selectionState.getStartKey();\n    var blockMap = contentState.getBlockMap();\n    var block = blockMap.get(key); // Maintain persistence in the list while removing chars from the start.\n    // https://github.com/facebook/draft-js/blob/788595984da7c1e00d1071ea82b063ff87140be4/src/model/transaction/removeRangeFromContentState.js#L333\n\n    var chars = block.getCharacterList();\n    var startOffset = 0;\n    var sliceOffset = block.getText().length - newText.length;\n\n    while (startOffset < sliceOffset) {\n      chars = chars.shift();\n      startOffset += 1;\n    }\n\n    var newBlock = block.merge({\n      type: newType,\n      text: newText,\n      characterList: chars,\n      data: newData\n    });\n    var newContentState = contentState.merge({\n      blockMap: blockMap.set(key, newBlock)\n    });\n    var newSelectionState = selectionState.merge({\n      anchorOffset: 0,\n      focusOffset: 0\n    });\n    return EditorState.acceptSelection(EditorState.set(editorState, {\n      currentContent: newContentState\n    }), newSelectionState);\n  },\n\n  /**\n   * Applies an inline style on a given range, based on a Markdown shortcut,\n   * removing the Markdown markers.\n   * Supports adding styles on existing styles, and entities.\n   */\n  applyMarkdownStyle: function applyMarkdownStyle(editorState, range, char) {\n    var selection = editorState.getSelection();\n    var content = editorState.getCurrentContent();\n    var marked = selection.merge({\n      anchorOffset: range.start,\n      focusOffset: range.end\n    });\n    var endMarker = selection.merge({\n      anchorOffset: range.end - range.pattern.length,\n      focusOffset: range.end\n    });\n    var startMarker = selection.merge({\n      anchorOffset: range.start,\n      focusOffset: range.start + range.pattern.length\n    }); // Remove the markers separately to preserve existing styles and entities on the marked text.\n\n    content = Modifier.applyInlineStyle(content, marked, range.type);\n    content = Modifier.removeRange(content, endMarker, \"forward\");\n    content = Modifier.removeRange(content, startMarker, \"forward\");\n    var offset = selection.getFocusOffset() - range.pattern.length * 2;\n    var endSelection = selection.merge({\n      anchorOffset: offset,\n      focusOffset: offset\n    });\n    content = content.merge({\n      selectionAfter: endSelection\n    });\n    content = Modifier.insertText(content, endSelection, char);\n    return EditorState.push(editorState, content, \"change-inline-style\");\n  },\n\n  /**\n   * Removes the block at the given key.\n   */\n  removeBlock: function removeBlock(editorState, key) {\n    var content = editorState.getCurrentContent();\n    var blockMap = content.getBlockMap().remove(key);\n    return EditorState.set(editorState, {\n      currentContent: content.merge({\n        blockMap: blockMap\n      })\n    });\n  },\n\n  /**\n   * Removes a block-level entity, turning the block into an empty paragraph,\n   * and placing the selection on it.\n   */\n  removeBlockEntity: function removeBlockEntity(editorState, entityKey, blockKey) {\n    var newState = editorState;\n    var content = editorState.getCurrentContent();\n    var blockMap = content.getBlockMap();\n    var block = blockMap.get(blockKey);\n    var newBlock = block.merge({\n      type: BLOCK_TYPE.UNSTYLED,\n      text: \"\",\n      // No text = no character list\n      characterList: block.getCharacterList().slice(0, 0),\n      data: {}\n    });\n    var newSelection = new SelectionState({\n      anchorKey: blockKey,\n      focusKey: blockKey,\n      anchorOffset: 0,\n      focusOffset: 0\n    });\n    var newContent = content.merge({\n      blockMap: blockMap.set(blockKey, newBlock)\n    });\n    newState = EditorState.push(newState, newContent, \"change-block-type\");\n    newState = EditorState.forceSelection(newState, newSelection);\n    return newState;\n  },\n\n  /**\n   * Handles pressing delete within an atomic block. This can happen when selection is placed on an image.\n   * Ideally this should be handled by the built-in RichUtils, but it's not.\n   * See https://github.com/wagtail/wagtail/issues/4370.\n   */\n  handleDeleteAtomic: function handleDeleteAtomic(editorState) {\n    var selection = editorState.getSelection();\n    var content = editorState.getCurrentContent();\n    var key = selection.getAnchorKey();\n    var offset = selection.getAnchorOffset();\n    var block = content.getBlockForKey(key); // Problematic selection. Pressing delete here would remove the entity, but not the block.\n\n    if (selection.isCollapsed() && block.getType() === BLOCK_TYPE.ATOMIC && offset === 0) {\n      return this.removeBlockEntity(editorState, block.getEntityAt(0), key);\n    }\n\n    return false;\n  },\n\n  /**\n   * Get an entity decorator strategy based on the given entity type.\n   * This strategy will find all entities of the given type.\n   */\n  getEntityTypeStrategy: function getEntityTypeStrategy(entityType) {\n    var strategy = function strategy(block, callback, contentState) {\n      block.findEntityRanges(function (character) {\n        var entityKey = character.getEntity();\n        return entityKey !== null && contentState.getEntity(entityKey).getType() === entityType;\n      }, callback);\n    };\n\n    return strategy;\n  },\n\n  /**\n   * Determines whether the editor should show its placeholder.\n   * See https://draftjs.org/docs/api-reference-editor.html#placeholder\n   * for details on why this is useful.\n   */\n  shouldHidePlaceholder: function shouldHidePlaceholder(editorState) {\n    var contentState = editorState.getCurrentContent();\n    return contentState.hasText() || contentState.getBlockMap().first().getType() !== BLOCK_TYPE.UNSTYLED;\n  },\n\n  /**\n   * Inserts new unstyled block.\n   * Initially inspired from https://github.com/jpuri/draftjs-utils/blob/e81c0ae19c3b0fdef7e0c1b70d924398956be126/js/block.js#L153,\n   * but changed so that the split + block type reset amounts to\n   * only one change in the undo stack.\n   */\n  insertNewUnstyledBlock: function insertNewUnstyledBlock(editorState) {\n    var selection = editorState.getSelection();\n    var newContent = Modifier.splitBlock(editorState.getCurrentContent(), selection);\n    var blockMap = newContent.getBlockMap();\n    var blockKey = selection.getStartKey();\n    var insertedBlockKey = newContent.getKeyAfter(blockKey);\n    var newBlock = blockMap.get(insertedBlockKey).set(\"type\", BLOCK_TYPE.UNSTYLED);\n    newContent = newContent.merge({\n      blockMap: blockMap.set(insertedBlockKey, newBlock)\n    });\n    return EditorState.push(editorState, newContent, \"split-block\");\n  },\n\n  /**\n   * Handles Shift + Enter keypress removing selection and inserting a line break.\n   * https://github.com/jpuri/draftjs-utils/blob/112bbe449cc9156522fcf2b40f2910a071b795c2/js/block.js#L133\n   */\n  addLineBreak: function addLineBreak(editorState) {\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n\n    if (selection.isCollapsed()) {\n      return RichUtils.insertSoftNewline(editorState);\n    }\n\n    var newContent = Modifier.removeRange(content, selection, \"forward\");\n    var fragment = newContent.getSelectionAfter();\n    var block = newContent.getBlockForKey(fragment.getStartKey());\n    newContent = Modifier.insertText(newContent, fragment, \"\\n\", block.getInlineStyleAt(fragment.getStartOffset()), null);\n    return EditorState.push(editorState, newContent, \"insert-fragment\");\n  },\n\n  /**\n   * Handles hard newlines.\n   * https://github.com/jpuri/draftjs-utils/blob/e81c0ae19c3b0fdef7e0c1b70d924398956be126/js/keyPress.js#L17\n   */\n  handleHardNewline: function handleHardNewline(editorState) {\n    var selection = editorState.getSelection();\n\n    if (!selection.isCollapsed()) {\n      return false;\n    }\n\n    var content = editorState.getCurrentContent();\n    var blockKey = selection.getStartKey();\n    var block = content.getBlockForKey(blockKey);\n    var blockType = block.getType(); // Use a loose check to allow custom list item types to reuse the continuation behavior.\n\n    var isListBlock = blockType.endsWith(\"-list-item\");\n\n    if (!isListBlock && block.getType() !== BLOCK_TYPE.UNSTYLED && block.getLength() === selection.getStartOffset()) {\n      return this.insertNewUnstyledBlock(editorState);\n    }\n\n    if (isListBlock && block.getLength() === 0) {\n      var depth = block.getDepth();\n\n      if (depth === 0) {\n        var nextContent = RichUtils.tryToRemoveBlockStyle(editorState); // At the moment, tryToRemoveBlockStyle always returns for\n        // collapsed selections at the start of a block. So in theory this corner case should never happen.\n\n        return nextContent ? EditorState.push(editorState, nextContent, \"change-block-type\") : false;\n      }\n\n      var blockMap = content.getBlockMap();\n      var newBlock = block.set(\"depth\", depth - 1);\n      return EditorState.push(editorState, content.merge({\n        blockMap: blockMap.set(blockKey, newBlock)\n      }), \"adjust-depth\");\n    }\n\n    return false;\n  },\n\n  /**\n   * Handles three scenarios:\n   * - Soft newlines.\n   * - Hard newlines in the \"defer breaking out of the block\" case.\n   * - Other hard newlines.\n   * See https://github.com/springload/draftail/issues/104,\n   * https://github.com/jpuri/draftjs-utils/issues/10.\n   */\n  handleNewLine: function handleNewLine(editorState, event) {\n    // https://github.com/jpuri/draftjs-utils/blob/e81c0ae19c3b0fdef7e0c1b70d924398956be126/js/keyPress.js#L64\n    if (isSoftNewlineEvent(event)) {\n      return this.addLineBreak(editorState);\n    }\n\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var key = selection.getStartKey();\n    var offset = selection.getStartOffset();\n    var block = content.getBlockForKey(key);\n    var isDeferredBreakoutBlock = [BLOCK_TYPE.CODE].includes(block.getType());\n\n    if (isDeferredBreakoutBlock) {\n      var isEmpty = selection.isCollapsed() && offset === 0 && block.getLength() === 0;\n\n      if (isEmpty) {\n        return EditorState.push(editorState, Modifier.setBlockType(content, selection, BLOCK_TYPE.UNSTYLED), \"change-block-type\");\n      }\n\n      return false;\n    }\n\n    return this.handleHardNewline(editorState);\n  }\n};\n\nvar hasCommandModifier = KeyBindingUtil.hasCommandModifier,\n    isOptionKeyCommand = KeyBindingUtil.isOptionKeyCommand;\nvar hasCmd = hasCommandModifier; // Hack relying on the internals of Draft.js.\n// See https://github.com/facebook/draft-js/pull/869\n// $FlowFixMe\n\nvar IS_MAC_OS = isOptionKeyCommand({\n  altKey: \"test\"\n}) === \"test\";\n/**\n * Methods defining the behavior of the editor, depending on its configuration.\n */\n\nvar behavior = {\n  /**\n   * Configure block render map from block types list.\n   */\n  getBlockRenderMap: function getBlockRenderMap(blockTypes) {\n    var renderMap = DefaultDraftBlockRenderMap; // Override default element for code block.\n    // Fix https://github.com/facebook/draft-js/issues/406.\n\n    if (blockTypes.some(function (block) {\n      return block.type === BLOCK_TYPE.CODE;\n    })) {\n      renderMap = renderMap.set(BLOCK_TYPE.CODE, {\n        element: \"code\",\n        wrapper: DefaultDraftBlockRenderMap.get(BLOCK_TYPE.CODE).wrapper\n      });\n    }\n\n    blockTypes.filter(function (block) {\n      return block.element;\n    }).forEach(function (block) {\n      renderMap = renderMap.set(block.type, {\n        element: block.element\n      });\n    });\n    return renderMap;\n  },\n\n  /**\n   * block style function automatically adding a class with the block's type.\n   */\n  blockStyleFn: function blockStyleFn(block) {\n    var type = block.getType();\n    return \"Draftail-block--\".concat(type, \" \").concat(blockDepthStyleFn(block));\n  },\n\n  /**\n   * Configure key binding function from enabled blocks, styles, entities.\n   */\n  getKeyBindingFn: function getKeyBindingFn(blockTypes, inlineStyles, entityTypes) {\n    var getEnabled = function getEnabled(activeTypes) {\n      return activeTypes.reduce(function (enabled, type) {\n        enabled[type.type] = type.type;\n        return enabled;\n      }, {});\n    };\n\n    var blocks = getEnabled(blockTypes);\n    var styles = getEnabled(inlineStyles);\n    var entities = getEnabled(entityTypes); // Emits key commands to use in `handleKeyCommand` in `Editor`.\n\n    var keyBindingFn = function keyBindingFn(e) {\n      // Safeguard that we only trigger shortcuts with exact matches.\n      // eg. cmd + shift + b should not trigger bold.\n      if (e.shiftKey) {\n        // Key bindings supported by Draft.js must be explicitely discarded.\n        // See https://github.com/facebook/draft-js/issues/941.\n        switch (e.keyCode) {\n          case KEY_CODES.B:\n            return undefined;\n\n          case KEY_CODES.I:\n            return undefined;\n\n          case KEY_CODES.J:\n            return undefined;\n\n          case KEY_CODES.U:\n            return undefined;\n\n          case KEY_CODES.X:\n            return hasCmd(e) && styles[INLINE_STYLE.STRIKETHROUGH];\n\n          case KEY_CODES[7]:\n            return hasCmd(e) && blocks[BLOCK_TYPE.ORDERED_LIST_ITEM];\n\n          case KEY_CODES[8]:\n            return hasCmd(e) && blocks[BLOCK_TYPE.UNORDERED_LIST_ITEM];\n\n          default:\n            return getDefaultKeyBinding(e);\n        }\n      }\n\n      var ctrlAlt = (e.ctrlKey || e.metaKey) && e.altKey;\n\n      switch (e.keyCode) {\n        case KEY_CODES.K:\n          return hasCmd(e) && entities.LINK;\n\n        case KEY_CODES.B:\n          return hasCmd(e) && styles[INLINE_STYLE.BOLD];\n\n        case KEY_CODES.I:\n          return hasCmd(e) && styles[INLINE_STYLE.ITALIC];\n\n        case KEY_CODES.J:\n          return hasCmd(e) && styles[INLINE_STYLE.CODE];\n\n        case KEY_CODES.U:\n          return hasCmd(e) && styles[INLINE_STYLE.UNDERLINE];\n\n        case KEY_CODES[\".\"]:\n          return hasCmd(e) && styles[INLINE_STYLE.SUPERSCRIPT];\n\n        case KEY_CODES[\",\"]:\n          return hasCmd(e) && styles[INLINE_STYLE.SUBSCRIPT];\n\n        case KEY_CODES[0]:\n          // Reverting to unstyled block is always available.\n          return ctrlAlt && BLOCK_TYPE.UNSTYLED;\n\n        case KEY_CODES[1]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_ONE];\n\n        case KEY_CODES[2]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_TWO];\n\n        case KEY_CODES[3]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_THREE];\n\n        case KEY_CODES[4]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_FOUR];\n\n        case KEY_CODES[5]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_FIVE];\n\n        case KEY_CODES[6]:\n          return ctrlAlt && blocks[BLOCK_TYPE.HEADER_SIX];\n\n        default:\n          return getDefaultKeyBinding(e);\n      }\n    };\n\n    return keyBindingFn;\n  },\n  hasKeyboardShortcut: function hasKeyboardShortcut(type) {\n    return !!KEYBOARD_SHORTCUTS[type];\n  },\n  getKeyboardShortcut: function getKeyboardShortcut(type) {\n    var isMacOS = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : IS_MAC_OS;\n    var shortcut = KEYBOARD_SHORTCUTS[type];\n    var system = isMacOS ? \"macOS\" : \"other\";\n    return shortcut && shortcut[system] || shortcut;\n  },\n\n  /**\n   * Defines whether a block should be altered to a new type when\n   * the user types a given mark.\n   * This powers the \"autolist\" feature.\n   *\n   * Returns the new block type, or false if no replacement should occur.\n   */\n  handleBeforeInputBlockType: function handleBeforeInputBlockType(mark, blockTypes) {\n    return blockTypes.find(function (b) {\n      return b.type === INPUT_BLOCK_MAP[mark];\n    }) ? INPUT_BLOCK_MAP[mark] : false;\n  },\n  handleBeforeInputHR: function handleBeforeInputHR(mark, block) {\n    return mark === INPUT_ENTITY_MAP[ENTITY_TYPE.HORIZONTAL_RULE] && block.getType() !== BLOCK_TYPE.CODE;\n  },\n\n  /**\n   * Checks whether a given input string contains style shortcuts.\n   * If so, returns the range onto which the shortcut is applied.\n   */\n  handleBeforeInputInlineStyle: function handleBeforeInputInlineStyle(input, inlineStyles) {\n    var activeShortcuts = INPUT_STYLE_MAP.filter(function (_ref) {\n      var type = _ref.type;\n      return inlineStyles.some(function (s) {\n        return s.type === type;\n      });\n    });\n    var range;\n    var match = activeShortcuts.find(function (_ref2) {\n      var regex = _ref2.regex;\n      // Re-create a RegExp object every time because RegExp is stateful.\n      range = new RegExp(regex, \"g\").exec(input);\n      return range;\n    });\n    return range && match ? {\n      pattern: match.pattern,\n      start: range.index === 0 ? 0 : range.index + 1,\n      end: range.index + range[0].length,\n      type: match.type\n    } : false;\n  },\n  getCustomStyleMap: function getCustomStyleMap(inlineStyles) {\n    var customStyleMap = {};\n    inlineStyles.forEach(function (style) {\n      if (style.style) {\n        customStyleMap[style.type] = style.style;\n      } else if (CUSTOM_STYLE_MAP[style.type]) {\n        customStyleMap[style.type] = CUSTOM_STYLE_MAP[style.type];\n      } else {\n        customStyleMap[style.type] = {};\n      }\n    });\n    return customStyleMap;\n  },\n\n  /**\n   * Applies whitelist and blacklist operations to the editor content,\n   * so the resulting editor state is shaped according to Draftail\n   * expectations and configuration.\n   */\n  filterPaste: function filterPaste(_ref3, editorState) {\n    var maxListNesting = _ref3.maxListNesting,\n        enableHorizontalRule = _ref3.enableHorizontalRule,\n        enableLineBreak = _ref3.enableLineBreak,\n        blockTypes = _ref3.blockTypes,\n        inlineStyles = _ref3.inlineStyles,\n        entityTypes = _ref3.entityTypes;\n    var enabledEntityTypes = entityTypes.slice();\n    var whitespacedCharacters = [\"\\t\", \"📷\"];\n\n    if (enableHorizontalRule) {\n      enabledEntityTypes.push({\n        type: ENTITY_TYPE.HORIZONTAL_RULE\n      });\n    }\n\n    if (!enableLineBreak) {\n      whitespacedCharacters.push(\"\\n\");\n    }\n\n    return filterEditorState({\n      blocks: blockTypes.map(function (b) {\n        return b.type;\n      }),\n      styles: inlineStyles.map(function (s) {\n        return s.type;\n      }),\n      entities: enabledEntityTypes,\n      maxNesting: maxListNesting,\n      whitespacedCharacters: whitespacedCharacters\n    }, editorState);\n  }\n};\n\n/**\n * Icon as SVG element. Can optionally render a React element instead.\n */\nvar Icon = function Icon(_ref) {\n  var icon = _ref.icon,\n      title = _ref.title,\n      className = _ref.className;\n  var children;\n\n  if (typeof icon === \"string\") {\n    if (icon.includes(\"#\")) {\n      children = /*#__PURE__*/React.createElement(\"use\", {\n        xlinkHref: icon\n      });\n    } else {\n      children = /*#__PURE__*/React.createElement(\"path\", {\n        d: icon\n      });\n    }\n  } else if (Array.isArray(icon)) {\n    // eslint-disable-next-line @thibaudcolas/cookbook/react/no-array-index-key\n    children = icon.map(function (d, i) {\n      return /*#__PURE__*/React.createElement(\"path\", {\n        key: i,\n        d: d\n      });\n    });\n  } else {\n    return icon;\n  }\n\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"16\",\n    height: \"16\",\n    viewBox: \"0 0 1024 1024\",\n    className: \"Draftail-Icon \".concat(className || \"\"),\n    \"aria-hidden\": title ? null : true,\n    role: title ? \"img\" : null,\n    \"aria-label\": title || null\n  }, children);\n};\n\nIcon.defaultProps = {\n  title: null,\n  className: null\n};\n\n/**\n * Displays a basic button, with optional active variant,\n * enriched with a tooltip. The tooltip stops showing on click.\n */\nvar ToolbarButton = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ToolbarButton, _PureComponent);\n\n  var _super = _createSuper(ToolbarButton);\n\n  function ToolbarButton(props) {\n    var _this;\n\n    _classCallCheck(this, ToolbarButton);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      showTooltipOnHover: true\n    };\n    _this.onMouseDown = _this.onMouseDown.bind(_assertThisInitialized(_this));\n    _this.onMouseLeave = _this.onMouseLeave.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  /* :: onMouseDown: (e: Event) => void; */\n\n\n  _createClass(ToolbarButton, [{\n    key: \"onMouseDown\",\n    value: function onMouseDown(e) {\n      var _this$props = this.props,\n          name = _this$props.name,\n          onClick = _this$props.onClick;\n      e.preventDefault();\n      this.setState({\n        showTooltipOnHover: false\n      });\n\n      if (onClick) {\n        onClick(name || \"\");\n      }\n    }\n    /* :: onMouseLeave: () => void; */\n\n  }, {\n    key: \"onMouseLeave\",\n    value: function onMouseLeave() {\n      this.setState({\n        showTooltipOnHover: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          active = _this$props2.active,\n          label = _this$props2.label,\n          title = _this$props2.title,\n          icon = _this$props2.icon;\n      var showTooltipOnHover = this.state.showTooltipOnHover;\n      return /*#__PURE__*/React.createElement(\"button\", {\n        name: name,\n        className: \"Draftail-ToolbarButton\".concat(active ? \" Draftail-ToolbarButton--active\" : \"\"),\n        type: \"button\",\n        \"aria-label\": title || null,\n        \"data-draftail-balloon\": title && showTooltipOnHover ? true : null,\n        tabIndex: -1,\n        onMouseDown: this.onMouseDown,\n        onMouseLeave: this.onMouseLeave\n      }, typeof icon !== \"undefined\" && icon !== null ? /*#__PURE__*/React.createElement(Icon, {\n        icon: icon\n      }) : null, label ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"Draftail-ToolbarButton__label\"\n      }, label) : null);\n    }\n  }]);\n\n  return ToolbarButton;\n}(PureComponent);\n\nToolbarButton.defaultProps = {\n  name: null,\n  active: false,\n  label: null,\n  title: null,\n  icon: null,\n  onClick: null\n};\n\nvar ToolbarGroup = function ToolbarGroup(_ref) {\n  var children = _ref.children;\n  var hasChildren = React.Children.toArray(children).some(function (c) {\n    return c !== null;\n  });\n  return hasChildren ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Draftail-ToolbarGroup\"\n  }, children) : null;\n};\n\nToolbarGroup.defaultProps = {\n  children: null\n};\n\nvar getButtonLabel = function getButtonLabel(type, config) {\n  var icon = typeof config === \"boolean\" ? undefined : config.icon;\n\n  if (typeof config.label === \"string\" || config.label === null) {\n    return config.label;\n  }\n\n  if (typeof icon !== \"undefined\") {\n    return null;\n  }\n\n  return LABELS[type];\n};\n\nvar showButton = function showButton(config) {\n  return Boolean(config.icon) || Boolean(getButtonLabel(config.type, config));\n};\n\nvar getButtonTitle = function getButtonTitle(type, config) {\n  var description = typeof config === \"boolean\" || typeof config.description === \"undefined\" ? DESCRIPTIONS[type] : config.description;\n  var hasShortcut = behavior.hasKeyboardShortcut(type);\n  var title = description;\n\n  if (hasShortcut) {\n    var desc = description ? \"\".concat(description, \"\\n\") : \"\";\n    title = \"\".concat(desc).concat(behavior.getKeyboardShortcut(type));\n  }\n\n  return title;\n};\n\nvar ToolbarDefaults = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ToolbarDefaults, _PureComponent);\n\n  var _super = _createSuper(ToolbarDefaults);\n\n  function ToolbarDefaults() {\n    _classCallCheck(this, ToolbarDefaults);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ToolbarDefaults, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          currentStyles = _this$props.currentStyles,\n          currentBlock = _this$props.currentBlock,\n          blockTypes = _this$props.blockTypes,\n          inlineStyles = _this$props.inlineStyles,\n          enableHorizontalRule = _this$props.enableHorizontalRule,\n          enableLineBreak = _this$props.enableLineBreak,\n          showUndoControl = _this$props.showUndoControl,\n          showRedoControl = _this$props.showRedoControl,\n          entityTypes = _this$props.entityTypes,\n          toggleBlockType = _this$props.toggleBlockType,\n          toggleInlineStyle = _this$props.toggleInlineStyle,\n          addHR = _this$props.addHR,\n          addBR = _this$props.addBR,\n          onUndoRedo = _this$props.onUndoRedo,\n          onRequestSource = _this$props.onRequestSource;\n      return [/*#__PURE__*/React.createElement(ToolbarGroup, {\n        key: \"styles\"\n      }, inlineStyles.filter(showButton).map(function (t) {\n        return /*#__PURE__*/React.createElement(ToolbarButton, {\n          key: t.type,\n          name: t.type,\n          active: currentStyles.has(t.type),\n          label: getButtonLabel(t.type, t),\n          title: getButtonTitle(t.type, t),\n          icon: t.icon,\n          onClick: toggleInlineStyle\n        });\n      })), /*#__PURE__*/React.createElement(ToolbarGroup, {\n        key: \"blocks\"\n      }, blockTypes.filter(showButton).map(function (t) {\n        return /*#__PURE__*/React.createElement(ToolbarButton, {\n          key: t.type,\n          name: t.type,\n          active: currentBlock === t.type,\n          label: getButtonLabel(t.type, t),\n          title: getButtonTitle(t.type, t),\n          icon: t.icon,\n          onClick: toggleBlockType\n        });\n      })), /*#__PURE__*/React.createElement(ToolbarGroup, {\n        key: \"hr-br\"\n      }, enableHorizontalRule ? /*#__PURE__*/React.createElement(ToolbarButton, {\n        name: ENTITY_TYPE.HORIZONTAL_RULE,\n        onClick: addHR,\n        label: getButtonLabel(ENTITY_TYPE.HORIZONTAL_RULE, enableHorizontalRule),\n        title: getButtonTitle(ENTITY_TYPE.HORIZONTAL_RULE, enableHorizontalRule),\n        icon: typeof enableHorizontalRule !== \"boolean\" ? enableHorizontalRule.icon : null\n      }) : null, enableLineBreak ? /*#__PURE__*/React.createElement(ToolbarButton, {\n        name: BR_TYPE,\n        onClick: addBR,\n        label: getButtonLabel(BR_TYPE, enableLineBreak),\n        title: getButtonTitle(BR_TYPE, enableLineBreak),\n        icon: typeof enableLineBreak !== \"boolean\" ? enableLineBreak.icon : null\n      }) : null), /*#__PURE__*/React.createElement(ToolbarGroup, {\n        key: \"entities\"\n      }, entityTypes.filter(showButton).map(function (t) {\n        return /*#__PURE__*/React.createElement(ToolbarButton, {\n          key: t.type,\n          name: t.type,\n          onClick: onRequestSource,\n          label: getButtonLabel(t.type, t),\n          title: getButtonTitle(t.type, t),\n          icon: t.icon\n        });\n      })), /*#__PURE__*/React.createElement(ToolbarGroup, {\n        key: \"undo-redo\"\n      }, showUndoControl ? /*#__PURE__*/React.createElement(ToolbarButton, {\n        name: UNDO_TYPE,\n        onClick: onUndoRedo,\n        label: getButtonLabel(UNDO_TYPE, showUndoControl),\n        title: getButtonTitle(UNDO_TYPE, showUndoControl),\n        icon: typeof showUndoControl !== \"boolean\" ? showUndoControl.icon : null\n      }) : null, showRedoControl ? /*#__PURE__*/React.createElement(ToolbarButton, {\n        name: REDO_TYPE,\n        onClick: onUndoRedo,\n        label: getButtonLabel(REDO_TYPE, showRedoControl),\n        title: getButtonTitle(REDO_TYPE, showRedoControl),\n        icon: typeof showRedoControl !== \"boolean\" ? showRedoControl.icon : null\n      }) : null)];\n    }\n  }]);\n\n  return ToolbarDefaults;\n}(PureComponent);\n\nvar Toolbar = function Toolbar(props) {\n  var controls = props.controls,\n      getEditorState = props.getEditorState,\n      onChange = props.onChange;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Draftail-Toolbar\",\n    role: \"toolbar\"\n  }, /*#__PURE__*/React.createElement(ToolbarDefaults, props), /*#__PURE__*/React.createElement(ToolbarGroup, null, controls.map(function (Control, i) {\n    return /*#__PURE__*/React.createElement(Control // eslint-disable-next-line @thibaudcolas/cookbook/react/no-array-index-key\n    , {\n      key: i,\n      getEditorState: getEditorState,\n      onChange: onChange\n    });\n  })));\n};\n\n/**\n * An <hr/> in the editor.\n */\n\nvar DividerBlock = function DividerBlock() {\n  return /*#__PURE__*/React.createElement(\"hr\", {\n    className: \"Draftail-DividerBlock\"\n  });\n};\n\nvar defaultProps = {\n  /** Initial content of the editor. Use this to edit pre-existing content. */\n  rawContentState: null,\n\n  /** Called when changes occured. Use this to persist editor content. */\n  onSave: null,\n\n  /** Content of the editor, when using the editor as a controlled component. Incompatible with `rawContentState` and `onSave`. */\n  editorState: null,\n\n  /** Called whenever the editor state is updated. Use this to manage the content of a controlled editor. Incompatible with `rawContentState` and `onSave`. */\n  onChange: null,\n\n  /** Called when the editor receives focus. */\n  onFocus: null,\n\n  /** Called when the editor loses focus. */\n  onBlur: null,\n\n  /** Displayed when the editor is empty. Hidden if the user changes styling. */\n  placeholder: null,\n\n  /** Enable the use of horizontal rules in the editor. */\n  enableHorizontalRule: false,\n\n  /** Enable the use of line breaks in the editor. */\n  enableLineBreak: false,\n\n  /** Show undo control in the toolbar. */\n  showUndoControl: false,\n\n  /** Show redo control in the toolbar. */\n  showRedoControl: false,\n\n  /** Disable copy/paste of rich text in the editor. */\n  stripPastedStyles: true,\n\n  /** Set whether spellcheck is turned on for your editor.\n   * See https://draftjs.org/docs/api-reference-editor.html#spellcheck.\n   */\n  spellCheck: false,\n\n  /** Set whether the editor should be rendered in readOnly mode.\n   * See https://draftjs.org/docs/api-reference-editor.html#readonly\n   */\n  readOnly: false,\n\n  /** Optionally set the overriding text alignment for this editor.\n   * See https://draftjs.org/docs/api-reference-editor.html#textalignment.\n   */\n  textAlignment: null,\n\n  /** Optionally set the overriding text directionality for this editor.\n   * See https://draftjs.org/docs/api-reference-editor.html#textdirectionality.\n   */\n  textDirectionality: null,\n\n  /** Set if auto capitalization is turned on and how it behaves.\n   * See https://draftjs.org/docs/api-reference-editor.html#autocapitalize-string.\n   */\n  autoCapitalize: null,\n\n  /** Set if auto complete is turned on and how it behaves.\n   * See https://draftjs.org/docs/api-reference-editor.html#autocomplete-string.\n   */\n  autoComplete: null,\n\n  /** Set if auto correct is turned on and how it behaves.\n   * See https://draftjs.org/docs/api-reference-editor.html#autocorrect-string.\n   */\n  autoCorrect: null,\n\n  /** See https://draftjs.org/docs/api-reference-editor.html#aria-props. */\n  ariaDescribedBy: null,\n\n  /** List of the available block types. */\n  blockTypes: [],\n\n  /** List of the available inline styles. */\n  inlineStyles: [],\n\n  /** List of the available entity types. */\n  entityTypes: [],\n\n  /** List of active decorators. */\n  decorators: [],\n\n  /** List of extra toolbar controls. */\n  controls: [],\n\n  /** List of plugins of the draft-js-plugins architecture. */\n  plugins: [],\n\n  /** Optionally override the default Draftail toolbar, removing or replacing it. */\n  topToolbar: Toolbar,\n\n  /** Optionally add a custom toolbar underneath the editor, e.g. for metrics. */\n  bottomToolbar: null,\n\n  /** Max level of nesting for list items. 0 = no nesting. Maximum = 10. */\n  maxListNesting: 1,\n\n  /** Frequency at which to call the onSave callback (ms). */\n  stateSaveInterval: 250\n};\n\n/* :: import type { ElementRef, Node } from \"react\"; */\n\n/**\n * Main component of the Draftail editor.\n * Contains the Draft.js editor instance, and ties together UI and behavior.\n */\nvar DraftailEditor = /*#__PURE__*/function (_Component) {\n  _inherits(DraftailEditor, _Component);\n\n  var _super = _createSuper(DraftailEditor);\n\n  /* :: editorRef: ElementRef<Editor>; */\n\n  /* :: copySource: { unregister: () => void }; */\n\n  /* :: updateTimeout: ?number; */\n\n  /* :: lockEditor: () => void; */\n\n  /* :: unlockEditor: () => void; */\n\n  /* :: getEditorState: () => EditorState; */\n  function DraftailEditor(props) {\n    var _this;\n\n    _classCallCheck(this, DraftailEditor);\n\n    _this = _super.call(this, props);\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_this));\n    _this.saveState = _this.saveState.bind(_assertThisInitialized(_this));\n    _this.toggleSource = _this.toggleSource.bind(_assertThisInitialized(_this));\n    _this.toggleEditor = _this.toggleEditor.bind(_assertThisInitialized(_this));\n    _this.lockEditor = _this.toggleEditor.bind(_assertThisInitialized(_this), true);\n    _this.unlockEditor = _this.toggleEditor.bind(_assertThisInitialized(_this), false);\n    _this.handleReturn = _this.handleReturn.bind(_assertThisInitialized(_this));\n    _this.onFocus = _this.onFocus.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.onTab = _this.onTab.bind(_assertThisInitialized(_this));\n    _this.handleKeyCommand = _this.handleKeyCommand.bind(_assertThisInitialized(_this));\n    _this.handleBeforeInput = _this.handleBeforeInput.bind(_assertThisInitialized(_this));\n    _this.handlePastedText = _this.handlePastedText.bind(_assertThisInitialized(_this));\n    _this.toggleBlockType = _this.toggleBlockType.bind(_assertThisInitialized(_this));\n    _this.toggleInlineStyle = _this.toggleInlineStyle.bind(_assertThisInitialized(_this));\n    _this.onEditEntity = _this.onEditEntity.bind(_assertThisInitialized(_this));\n    _this.onRemoveEntity = _this.onRemoveEntity.bind(_assertThisInitialized(_this));\n    _this.addHR = _this.addHR.bind(_assertThisInitialized(_this));\n    _this.addBR = _this.addBR.bind(_assertThisInitialized(_this));\n    _this.onUndoRedo = _this.onUndoRedo.bind(_assertThisInitialized(_this));\n    _this.blockRenderer = _this.blockRenderer.bind(_assertThisInitialized(_this));\n    _this.onRequestSource = _this.onRequestSource.bind(_assertThisInitialized(_this));\n    _this.onCompleteSource = _this.onCompleteSource.bind(_assertThisInitialized(_this));\n    _this.onCloseSource = _this.onCloseSource.bind(_assertThisInitialized(_this));\n    _this.focus = _this.focus.bind(_assertThisInitialized(_this));\n    _this.renderSource = _this.renderSource.bind(_assertThisInitialized(_this));\n    var editorState = props.editorState,\n        rawContentState = props.rawContentState;\n    _this.state = {\n      readOnlyState: false,\n      hasFocus: false,\n      sourceOptions: null\n    };\n\n    if (editorState !== null) {\n      _this.getEditorState = _this.getEditorStateProp.bind(_assertThisInitialized(_this));\n    } else {\n      // If editorState is not used as a prop, create it in local state from rawContentState.\n      _this.state.editorState = createEditorStateFromRaw(rawContentState);\n      _this.getEditorState = _this.getEditorStateState.bind(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(DraftailEditor, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.copySource = registerCopySource(this.editorRef.editor);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.copySource.unregister();\n      window.clearTimeout(this.updateTimeout);\n    }\n    /* :: onFocus: () => void; */\n\n  }, {\n    key: \"onFocus\",\n    value: function onFocus() {\n      this.setState({\n        hasFocus: true\n      });\n      var onFocus = this.props.onFocus;\n\n      if (onFocus) {\n        onFocus();\n      }\n    }\n    /* :: onBlur: () => void; */\n\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      this.setState({\n        hasFocus: false\n      });\n      var onBlur = this.props.onBlur;\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n    /* :: onTab: (event: SyntheticKeyboardEvent<>) => true; */\n\n  }, {\n    key: \"onTab\",\n    value: function onTab(event) {\n      var maxListNesting = this.props.maxListNesting;\n      var editorState = this.getEditorState();\n      var newState = RichUtils.onTab(event, editorState, maxListNesting);\n      this.onChange(newState);\n      return true;\n    }\n    /* :: onChange: (nextState: EditorState) => void; */\n\n  }, {\n    key: \"onChange\",\n    value: function onChange(nextState) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          stateSaveInterval = _this$props.stateSaveInterval,\n          maxListNesting = _this$props.maxListNesting,\n          enableHorizontalRule = _this$props.enableHorizontalRule,\n          enableLineBreak = _this$props.enableLineBreak,\n          blockTypes = _this$props.blockTypes,\n          inlineStyles = _this$props.inlineStyles,\n          entityTypes = _this$props.entityTypes,\n          onChange = _this$props.onChange;\n      var editorState = this.getEditorState();\n      var shouldFilterPaste = nextState.getCurrentContent() !== editorState.getCurrentContent() && nextState.getLastChangeType() === \"insert-fragment\";\n      var filteredState = nextState;\n\n      if (shouldFilterPaste) {\n        filteredState = behavior.filterPaste({\n          maxListNesting: maxListNesting,\n          enableHorizontalRule: enableHorizontalRule,\n          enableLineBreak: enableLineBreak,\n          blockTypes: blockTypes,\n          inlineStyles: inlineStyles,\n          entityTypes: entityTypes\n        }, filteredState);\n      }\n\n      if (onChange) {\n        onChange(filteredState);\n      } else {\n        this.setState({\n          editorState: filteredState\n        }, function () {\n          window.clearTimeout(_this2.updateTimeout);\n          _this2.updateTimeout = window.setTimeout(_this2.saveState, stateSaveInterval);\n        });\n      }\n    }\n    /* :: onEditEntity: (entityKey: string) => void; */\n\n  }, {\n    key: \"onEditEntity\",\n    value: function onEditEntity(entityKey) {\n      var entityTypes = this.props.entityTypes;\n      var editorState = this.getEditorState();\n      var content = editorState.getCurrentContent();\n      var entity = content.getEntity(entityKey);\n      var entityType = entityTypes.find(function (t) {\n        return t.type === entity.type;\n      }); // $FlowFixMe\n\n      if (!entityType.block) {\n        var entitySelection = DraftUtils.getEntitySelection(editorState, entityKey);\n        var nextState = EditorState.acceptSelection(editorState, entitySelection);\n        this.onChange(nextState);\n      }\n\n      this.toggleSource(entity.getType(), entityKey, entity);\n    }\n    /* :: onRemoveEntity: (entityKey: string, blockKey: string) => void; */\n\n  }, {\n    key: \"onRemoveEntity\",\n    value: function onRemoveEntity(entityKey, blockKey) {\n      var entityTypes = this.props.entityTypes;\n      var editorState = this.getEditorState();\n      var content = editorState.getCurrentContent();\n      var entity = content.getEntity(entityKey);\n      var entityType = entityTypes.find(function (t) {\n        return t.type === entity.type;\n      });\n      var newState = editorState; // $FlowFixMe\n\n      if (entityType.block) {\n        newState = DraftUtils.removeBlockEntity(newState, entityKey, blockKey);\n      } else {\n        var entitySelection = DraftUtils.getEntitySelection(editorState, entityKey);\n        newState = RichUtils.toggleLink(newState, entitySelection, null);\n      }\n\n      this.onChange(newState);\n    }\n    /* :: onUndoRedo: (type: string) => void; */\n\n  }, {\n    key: \"onUndoRedo\",\n    value: function onUndoRedo(type) {\n      var editorState = this.getEditorState();\n      var newEditorState = editorState;\n\n      if (type === UNDO_TYPE) {\n        newEditorState = EditorState.undo(editorState);\n      } else if (type === REDO_TYPE) {\n        newEditorState = EditorState.redo(editorState);\n      }\n\n      this.onChange(newEditorState);\n    }\n    /* :: onRequestSource: (entityType: string) => void; */\n\n  }, {\n    key: \"onRequestSource\",\n    value: function onRequestSource(entityType) {\n      var editorState = this.getEditorState();\n      var contentState = editorState.getCurrentContent();\n      var entityKey = DraftUtils.getSelectionEntity(editorState);\n      this.toggleSource(entityType, entityKey, entityKey ? contentState.getEntity(entityKey) : null);\n    }\n    /* :: onCompleteSource: (nextState: EditorState) => void; */\n\n  }, {\n    key: \"onCompleteSource\",\n    value: function onCompleteSource(nextState) {\n      var _this3 = this;\n\n      this.setState({\n        sourceOptions: null\n      }, function () {\n        if (nextState) {\n          _this3.onChange(nextState);\n        }\n\n        window.setTimeout(function () {\n          _this3.setState({\n            readOnlyState: false\n          }, function () {\n            window.setTimeout(function () {\n              _this3.focus();\n            }, 0);\n          });\n        }, 0);\n      });\n    }\n    /* :: onCloseSource: () => void; */\n\n  }, {\n    key: \"onCloseSource\",\n    value: function onCloseSource() {\n      this.setState({\n        sourceOptions: null,\n        readOnlyState: false\n      });\n    }\n    /* :: getEditorStateProp: () => EditorState; */\n\n  }, {\n    key: \"getEditorStateProp\",\n    value: function getEditorStateProp() {\n      var editorState = this.props.editorState;\n      return editorState;\n    }\n    /* :: getEditorStateState: () => EditorState; */\n\n  }, {\n    key: \"getEditorStateState\",\n    value: function getEditorStateState() {\n      var editorState = this.state.editorState;\n      return editorState;\n    }\n    /* :: saveState: () => void; */\n\n  }, {\n    key: \"saveState\",\n    value: function saveState() {\n      var onSave = this.props.onSave;\n      var editorState = this.getEditorState();\n\n      if (onSave) {\n        onSave(serialiseEditorStateToRaw(editorState));\n      }\n    }\n    /* :: toggleEditor: (readOnlyState: boolean) => void; */\n\n  }, {\n    key: \"toggleEditor\",\n    value: function toggleEditor(readOnlyState) {\n      this.setState({\n        readOnlyState: readOnlyState\n      });\n    }\n    /* :: toggleSource: (type:string, entityKey: ?string, entity: ?EntityInstance) => void; */\n\n  }, {\n    key: \"toggleSource\",\n    value: function toggleSource(type, entityKey, entity) {\n      var entityTypes = this.props.entityTypes;\n      var entityType = entityTypes.find(function (item) {\n        return item.type === type;\n      });\n      this.setState({\n        readOnlyState: true,\n        sourceOptions: {\n          entity: entity,\n          entityKey: entityKey,\n          entityType: entityType\n        }\n      });\n    }\n    /* :: handleReturn: (e: SyntheticKeyboardEvent<>) => 'not-handled' | 'handled'; */\n\n  }, {\n    key: \"handleReturn\",\n    value: function handleReturn(e) {\n      var _this$props2 = this.props,\n          enableLineBreak = _this$props2.enableLineBreak,\n          inlineStyles = _this$props2.inlineStyles;\n      var editorState = this.getEditorState();\n      var ret = NOT_HANDLED; // alt + enter opens links and other entities with a `url` property.\n\n      if (e.altKey) {\n        // Mark the return as handled even if there is no entity.\n        // alt + enter should never create a newline anyway.\n        ret = HANDLED;\n        var entityKey = DraftUtils.getSelectionEntity(editorState);\n\n        if (entityKey) {\n          var _content = editorState.getCurrentContent();\n\n          var entityData = _content.getEntity(entityKey).getData();\n\n          if (entityData.url) {\n            window.open(entityData.url);\n          }\n        }\n      } else {\n        if (!enableLineBreak) {\n          // Quick hack to disable soft line breaks.\n          e.which = 0;\n        }\n\n        var newState = editorState;\n        var newStyle = false;\n        var selection = newState.getSelection(); // Check whether we should apply a Markdown styles shortcut.\n\n        if (selection.isCollapsed()) {\n          var block = DraftUtils.getSelectedBlock(editorState);\n          newStyle = behavior.handleBeforeInputInlineStyle(block.getText(), inlineStyles);\n\n          if (newStyle) {\n            newState = DraftUtils.applyMarkdownStyle(newState, newStyle, \"\");\n          }\n        }\n\n        var newLineState = DraftUtils.handleNewLine(newState, e); // Manually handle the return if there is a style to apply.\n\n        if (!newLineState && newStyle) {\n          var _content2 = newState.getCurrentContent();\n\n          var newContent = Modifier.splitBlock(_content2, selection);\n          newState = EditorState.push(newState, newContent, \"split-block\"); // Do not propagate the style from the last block.\n\n          newState = RichUtils.toggleInlineStyle(newState, newStyle.type);\n        } else {\n          newState = newLineState;\n        }\n\n        if (newState && newState !== editorState) {\n          ret = HANDLED;\n          this.onChange(newState);\n        }\n      }\n\n      return ret;\n    }\n    /* :: handleKeyCommand: (command: DraftEditorCommand) => 'handled' | 'not-handled'; */\n\n  }, {\n    key: \"handleKeyCommand\",\n    value: function handleKeyCommand(command) {\n      var _this$props3 = this.props,\n          entityTypes = _this$props3.entityTypes,\n          blockTypes = _this$props3.blockTypes,\n          inlineStyles = _this$props3.inlineStyles;\n      var editorState = this.getEditorState();\n\n      if (entityTypes.some(function (t) {\n        return t.type === command;\n      })) {\n        this.onRequestSource(command);\n        return HANDLED;\n      }\n\n      if (blockTypes.some(function (t) {\n        return t.type === command;\n      })) {\n        this.toggleBlockType(command);\n        return HANDLED;\n      }\n\n      if (inlineStyles.some(function (t) {\n        return t.type === command;\n      })) {\n        this.toggleInlineStyle(command);\n        return HANDLED;\n      } // Special case – some delete commands on atomic blocks are not covered by RichUtils.\n\n\n      if (command === \"delete\") {\n        var _newState = DraftUtils.handleDeleteAtomic(editorState);\n\n        if (_newState) {\n          this.onChange(_newState);\n          return HANDLED;\n        }\n      } // If the command is known but not whitelisted for this editor, treat it as handled but don't do anything.\n\n\n      if (KEY_COMMANDS.includes(command)) {\n        return HANDLED;\n      }\n\n      var newState = RichUtils.handleKeyCommand(editorState, command);\n\n      if (newState) {\n        this.onChange(newState);\n        return HANDLED;\n      }\n\n      return NOT_HANDLED;\n    }\n    /* :: handleBeforeInput: (char: string) => 'handled' | 'not-handled'; */\n\n  }, {\n    key: \"handleBeforeInput\",\n    value: function handleBeforeInput(char) {\n      var _this$props4 = this.props,\n          blockTypes = _this$props4.blockTypes,\n          inlineStyles = _this$props4.inlineStyles,\n          enableHorizontalRule = _this$props4.enableHorizontalRule;\n      var editorState = this.getEditorState();\n      var selection = editorState.getSelection();\n\n      if (selection.isCollapsed()) {\n        var block = DraftUtils.getSelectedBlock(editorState);\n        var startOffset = selection.getStartOffset();\n        var text = block.getText();\n        var beforeInput = text.slice(0, startOffset);\n        var mark = \"\".concat(beforeInput).concat(char);\n        var newEditorState = editorState;\n        var newBlockType = behavior.handleBeforeInputBlockType(mark, blockTypes);\n\n        if (newBlockType) {\n          newEditorState = DraftUtils.resetBlockWithType(newEditorState, newBlockType, text.replace(beforeInput, \"\"));\n        }\n\n        if (enableHorizontalRule && behavior.handleBeforeInputHR(mark, block)) {\n          newEditorState = DraftUtils.removeBlock(DraftUtils.addHorizontalRuleRemovingSelection(newEditorState), block.getKey());\n        }\n\n        var newStyle = behavior.handleBeforeInputInlineStyle(beforeInput, inlineStyles);\n\n        if (newStyle) {\n          newEditorState = DraftUtils.applyMarkdownStyle(newEditorState, newStyle, char);\n        }\n\n        if (newEditorState !== editorState) {\n          this.onChange(newEditorState);\n          return HANDLED;\n        }\n      }\n\n      return NOT_HANDLED;\n    }\n    /* :: handlePastedText: (text: string, html: ?string, editorState: EditorState) => 'handled' | 'not-handled'; */\n\n  }, {\n    key: \"handlePastedText\",\n    value: function handlePastedText(text, html, editorState) {\n      var stripPastedStyles = this.props.stripPastedStyles; // Leave paste handling to Draft.js when stripping styles is desirable.\n\n      if (stripPastedStyles) {\n        return NOT_HANDLED;\n      }\n\n      var pastedState = handleDraftEditorPastedText(html, editorState);\n\n      if (pastedState) {\n        this.onChange(pastedState);\n        return HANDLED;\n      }\n\n      return NOT_HANDLED;\n    }\n    /* :: toggleBlockType: (blockType: string) => void; */\n\n  }, {\n    key: \"toggleBlockType\",\n    value: function toggleBlockType(blockType) {\n      var editorState = this.getEditorState();\n      this.onChange(RichUtils.toggleBlockType(editorState, blockType));\n    }\n    /* :: toggleInlineStyle: (inlineStyle: string) => void; */\n\n  }, {\n    key: \"toggleInlineStyle\",\n    value: function toggleInlineStyle(inlineStyle) {\n      var editorState = this.getEditorState();\n      this.onChange(RichUtils.toggleInlineStyle(editorState, inlineStyle));\n    }\n    /* :: addHR: () => void; */\n\n  }, {\n    key: \"addHR\",\n    value: function addHR() {\n      var editorState = this.getEditorState();\n      this.onChange(DraftUtils.addHorizontalRuleRemovingSelection(editorState));\n    }\n    /* :: addBR: () => void; */\n\n  }, {\n    key: \"addBR\",\n    value: function addBR() {\n      var editorState = this.getEditorState();\n      this.onChange(DraftUtils.addLineBreak(editorState));\n    }\n    /* :: blockRenderer: (block: ContentBlock) => {}; */\n\n  }, {\n    key: \"blockRenderer\",\n    value: function blockRenderer(block) {\n      var entityTypes = this.props.entityTypes;\n      var editorState = this.getEditorState();\n      var contentState = editorState.getCurrentContent();\n\n      if (block.getType() !== BLOCK_TYPE.ATOMIC) {\n        return null;\n      }\n\n      var entityKey = block.getEntityAt(0);\n\n      if (!entityKey) {\n        return {\n          editable: false\n        };\n      }\n\n      var entity = contentState.getEntity(entityKey);\n      var isHorizontalRule = entity.type === ENTITY_TYPE.HORIZONTAL_RULE;\n\n      if (isHorizontalRule) {\n        return {\n          component: DividerBlock,\n          editable: false\n        };\n      }\n\n      var entityType = entityTypes.find(function (t) {\n        return t.type === entity.type;\n      });\n      return {\n        // $FlowFixMe\n        component: entityType.block,\n        editable: false,\n        props: {\n          /** The editorState is available for arbitrary content manipulation. */\n          editorState: editorState,\n\n          /** Current entity to manage. */\n          entity: entity,\n\n          /** Current entityKey to manage. */\n          entityKey: entityKey,\n\n          /** Whole entityType configuration, as provided to the editor. */\n          entityType: entityType,\n\n          /** Make the whole editor read-only, except for the block. */\n          lockEditor: this.lockEditor,\n\n          /** Make the editor editable again. */\n          unlockEditor: this.unlockEditor,\n\n          /** Shorthand to edit entity data. */\n          onEditEntity: this.onEditEntity.bind(null, entityKey),\n\n          /** Shorthand to remove an entity, and the related block. */\n          onRemoveEntity: this.onRemoveEntity.bind(null, entityKey, block.getKey()),\n\n          /** Update the editorState with arbitrary changes. */\n          onChange: this.onChange\n        }\n      };\n    }\n    /**\n     * Imperative focus API similar to that of Draft.js.\n     * See https://draftjs.org/docs/advanced-topics-managing-focus.html#content.\n     */\n\n    /* :: focus: () => void; */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.editorRef.focus();\n    }\n    /* :: renderSource: () => ?Node; */\n\n  }, {\n    key: \"renderSource\",\n    value: function renderSource() {\n      var sourceOptions = this.state.sourceOptions;\n      var editorState = this.getEditorState();\n\n      if (sourceOptions && sourceOptions.entityType) {\n        var Source = sourceOptions.entityType.source;\n        return /*#__PURE__*/React.createElement(Source\n        /** The editorState is available for arbitrary content manipulation. */\n        , {\n          editorState: editorState\n          /** Takes the updated editorState, or null if there are no changes, and focuses the editor. */\n          ,\n          onComplete: this.onCompleteSource\n          /** Closes the source, without focusing the editor again. */\n          ,\n          onClose: this.onCloseSource\n          /** Current entity to edit, if any. */\n          ,\n          entity: sourceOptions.entity\n          /** Current entityKey to edit, if any. */\n          ,\n          entityKey: sourceOptions.entityKey\n          /** Whole entityType configuration, as provided to the editor. */\n          ,\n          entityType: sourceOptions.entityType\n        });\n      }\n\n      return null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props5 = this.props,\n          placeholder = _this$props5.placeholder,\n          enableHorizontalRule = _this$props5.enableHorizontalRule,\n          enableLineBreak = _this$props5.enableLineBreak,\n          showUndoControl = _this$props5.showUndoControl,\n          showRedoControl = _this$props5.showRedoControl,\n          stripPastedStyles = _this$props5.stripPastedStyles,\n          spellCheck = _this$props5.spellCheck,\n          textAlignment = _this$props5.textAlignment,\n          textDirectionality = _this$props5.textDirectionality,\n          autoCapitalize = _this$props5.autoCapitalize,\n          autoComplete = _this$props5.autoComplete,\n          autoCorrect = _this$props5.autoCorrect,\n          ariaDescribedBy = _this$props5.ariaDescribedBy,\n          blockTypes = _this$props5.blockTypes,\n          inlineStyles = _this$props5.inlineStyles,\n          entityTypes = _this$props5.entityTypes,\n          decorators = _this$props5.decorators,\n          controls = _this$props5.controls,\n          readOnly = _this$props5.readOnly,\n          maxListNesting = _this$props5.maxListNesting,\n          plugins = _this$props5.plugins,\n          topToolbar = _this$props5.topToolbar,\n          bottomToolbar = _this$props5.bottomToolbar;\n      var _this$state = this.state,\n          hasFocus = _this$state.hasFocus,\n          readOnlyState = _this$state.readOnlyState;\n      var editorState = this.getEditorState();\n      var isReadOnly = readOnlyState || readOnly;\n      var hidePlaceholder = DraftUtils.shouldHidePlaceholder(editorState);\n      var entityDecorators = entityTypes.filter(function (type) {\n        return !!type.decorator;\n      }).map(function (type) {\n        return {\n          strategy: DraftUtils.getEntityTypeStrategy(type.type),\n          // $FlowFixMe\n          component: decorateComponentWithProps(type.decorator, {\n            onEdit: _this4.onEditEntity,\n            onRemove: _this4.onRemoveEntity\n          })\n        };\n      });\n      var TopToolbar = topToolbar;\n      var BottomToolbar = bottomToolbar;\n      var toolbarProps = {\n        currentStyles: editorState.getCurrentInlineStyle(),\n        currentBlock: DraftUtils.getSelectedBlock(editorState).getType(),\n        enableHorizontalRule: enableHorizontalRule,\n        enableLineBreak: enableLineBreak,\n        showUndoControl: showUndoControl,\n        showRedoControl: showRedoControl,\n        blockTypes: blockTypes,\n        inlineStyles: inlineStyles,\n        entityTypes: entityTypes,\n        controls: controls,\n        readOnly: isReadOnly,\n        toggleBlockType: this.toggleBlockType,\n        toggleInlineStyle: this.toggleInlineStyle,\n        addHR: this.addHR,\n        addBR: this.addBR,\n        onUndoRedo: this.onUndoRedo,\n        onRequestSource: this.onRequestSource,\n        getEditorState: this.getEditorState,\n        onChange: this.onChange\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"Draftail-Editor\".concat(isReadOnly ? \" Draftail-Editor--readonly\" : \"\").concat(hidePlaceholder ? \" Draftail-Editor--hide-placeholder\" : \"\").concat(hasFocus ? \" Draftail-Editor--focus\" : \"\")\n      }, TopToolbar ? /*#__PURE__*/React.createElement(TopToolbar, toolbarProps) : null, /*#__PURE__*/React.createElement(Editor, {\n        customStyleMap: behavior.getCustomStyleMap(inlineStyles),\n        ref: function ref(_ref) {\n          _this4.editorRef = _ref;\n        },\n        editorState: editorState,\n        onChange: this.onChange,\n        placeholder: placeholder,\n        readOnly: isReadOnly,\n        stripPastedStyles: stripPastedStyles,\n        spellCheck: spellCheck,\n        textAlignment: textAlignment,\n        textDirectionality: textDirectionality,\n        autoCapitalize: autoCapitalize,\n        autoComplete: autoComplete,\n        autoCorrect: autoCorrect,\n        ariaDescribedBy: ariaDescribedBy,\n        handleReturn: this.handleReturn,\n        defaultKeyBindings: false,\n        handleKeyCommand: this.handleKeyCommand,\n        handleBeforeInput: this.handleBeforeInput,\n        handlePastedText: this.handlePastedText,\n        onFocus: this.onFocus,\n        onBlur: this.onBlur,\n        onTab: this.onTab,\n        blockRendererFn: this.blockRenderer,\n        blockRenderMap: behavior.getBlockRenderMap(blockTypes),\n        blockStyleFn: behavior.blockStyleFn // Include the keyBindingFn in a plugin here so that\n        // other plugin keyBindingFn's are still called, while\n        // still being able to override the Draft.js oversensitive\n        // keyboard shortcuts.\n        ,\n        plugins: plugins.concat([{\n          keyBindingFn: behavior.getKeyBindingFn(blockTypes, inlineStyles, entityTypes)\n        }]) // $FlowFixMe\n        ,\n        decorators: decorators.concat(entityDecorators)\n      }), BottomToolbar ? /*#__PURE__*/React.createElement(BottomToolbar, toolbarProps) : null, this.renderSource(), /*#__PURE__*/React.createElement(ListNestingStyles, {\n        max: maxListNesting\n      }));\n    }\n  }]);\n\n  return DraftailEditor;\n}(Component);\n\nDraftailEditor.defaultProps = defaultProps;\n\nexport { BLOCK_TYPE, DraftUtils, DraftailEditor, ENTITY_TYPE, INLINE_STYLE, Icon, ToolbarButton };\n"]},"metadata":{},"sourceType":"module"}