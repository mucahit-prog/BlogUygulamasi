{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/utils\n */\nimport { upperFirst } from 'lodash-es';\nconst ATTRIBUTE_WHITESPACES = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g; // eslint-disable-line no-control-regex\n\nconst SAFE_URL = /^(?:(?:https?|ftps?|mailto):|[^a-z]|[a-z+.-]+(?:[^a-z+.:-]|$))/i;\n/**\n * Returns `true` if a given view node is the link element.\n *\n * @param {module:engine/view/node~Node} node\n * @returns {Boolean}\n */\n\nexport function isLinkElement(node) {\n  return node.is('attributeElement') && !!node.getCustomProperty('link');\n}\n/**\n * Creates link {@link module:engine/view/attributeelement~AttributeElement} with the provided `href` attribute.\n *\n * @param {String} href\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\n\nexport function createLinkElement(href, writer) {\n  // Priority 5 - https://github.com/ckeditor/ckeditor5-link/issues/121.\n  const linkElement = writer.createAttributeElement('a', {\n    href\n  }, {\n    priority: 5\n  });\n  writer.setCustomProperty('link', true, linkElement);\n  return linkElement;\n}\n/**\n * Returns a safe URL based on a given value.\n *\n * A URL is considered safe if it is safe for the user (does not contain any malicious code).\n *\n * If a URL is considered unsafe, a simple `\"#\"` is returned.\n *\n * @protected\n * @param {*} url\n * @returns {String} Safe URL.\n */\n\nexport function ensureSafeUrl(url) {\n  url = String(url);\n  return isSafeUrl(url) ? url : '#';\n} // Checks whether the given URL is safe for the user (does not contain any malicious code).\n//\n// @param {String} url URL to check.\n\nfunction isSafeUrl(url) {\n  const normalizedUrl = url.replace(ATTRIBUTE_WHITESPACES, '');\n  return normalizedUrl.match(SAFE_URL);\n}\n/**\n * Returns the {@link module:link/link~LinkConfig#decorators `config.link.decorators`} configuration processed\n * to respect the locale of the editor, i.e. to display the {@link module:link/link~LinkDecoratorManualDefinition label}\n * in the correct language.\n *\n * **Note**: Only the few most commonly used labels are translated automatically. Other labels should be manually\n * translated in the {@link module:link/link~LinkConfig#decorators `config.link.decorators`} configuration.\n *\n * @param {module:utils/locale~Locale#t} t shorthand for {@link module:utils/locale~Locale#t Locale#t}\n * @param {Array.<module:link/link~LinkDecoratorDefinition>} The decorator reference\n * where the label values should be localized.\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\n */\n\n\nexport function getLocalizedDecorators(t, decorators) {\n  const localizedDecoratorsLabels = {\n    'Open in a new tab': t('Open in a new tab'),\n    'Downloadable': t('Downloadable')\n  };\n  decorators.forEach(decorator => {\n    if (decorator.label && localizedDecoratorsLabels[decorator.label]) {\n      decorator.label = localizedDecoratorsLabels[decorator.label];\n    }\n\n    return decorator;\n  });\n  return decorators;\n}\n/**\n * Converts an object with defined decorators to a normalized array of decorators. The `id` key is added for each decorator and\n * is used as the attribute's name in the model.\n *\n * @param {Object.<String, module:link/link~LinkDecoratorDefinition>} decorators\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\n */\n\nexport function normalizeDecorators(decorators) {\n  const retArray = [];\n\n  if (decorators) {\n    for (const [key, value] of Object.entries(decorators)) {\n      const decorator = Object.assign({}, value, {\n        id: `link${upperFirst(key)}`\n      });\n      retArray.push(decorator);\n    }\n  }\n\n  return retArray;\n}","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/node_modules/@ckeditor/ckeditor5-link/src/utils.js"],"names":["upperFirst","ATTRIBUTE_WHITESPACES","SAFE_URL","isLinkElement","node","is","getCustomProperty","createLinkElement","href","writer","linkElement","createAttributeElement","priority","setCustomProperty","ensureSafeUrl","url","String","isSafeUrl","normalizedUrl","replace","match","getLocalizedDecorators","t","decorators","localizedDecoratorsLabels","forEach","decorator","label","normalizeDecorators","retArray","key","value","Object","entries","assign","id","push"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA,SAASA,UAAT,QAA2B,WAA3B;AAEA,MAAMC,qBAAqB,GAAG,6DAA9B,C,CAA6F;;AAC7F,MAAMC,QAAQ,GAAG,iEAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,aAAT,CAAwBC,IAAxB,EAA+B;AACrC,SAAOA,IAAI,CAACC,EAAL,CAAS,kBAAT,KAAiC,CAAC,CAACD,IAAI,CAACE,iBAAL,CAAwB,MAAxB,CAA1C;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,iBAAT,CAA4BC,IAA5B,EAAkCC,MAAlC,EAA2C;AACjD;AACA,QAAMC,WAAW,GAAGD,MAAM,CAACE,sBAAP,CAA+B,GAA/B,EAAoC;AAAEH,IAAAA;AAAF,GAApC,EAA8C;AAAEI,IAAAA,QAAQ,EAAE;AAAZ,GAA9C,CAApB;AACAH,EAAAA,MAAM,CAACI,iBAAP,CAA0B,MAA1B,EAAkC,IAAlC,EAAwCH,WAAxC;AAEA,SAAOA,WAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASI,aAAT,CAAwBC,GAAxB,EAA8B;AACpCA,EAAAA,GAAG,GAAGC,MAAM,CAAED,GAAF,CAAZ;AAEA,SAAOE,SAAS,CAAEF,GAAF,CAAT,GAAmBA,GAAnB,GAAyB,GAAhC;AACA,C,CAED;AACA;AACA;;AACA,SAASE,SAAT,CAAoBF,GAApB,EAA0B;AACzB,QAAMG,aAAa,GAAGH,GAAG,CAACI,OAAJ,CAAalB,qBAAb,EAAoC,EAApC,CAAtB;AAEA,SAAOiB,aAAa,CAACE,KAAd,CAAqBlB,QAArB,CAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,OAAO,SAASmB,sBAAT,CAAiCC,CAAjC,EAAoCC,UAApC,EAAiD;AACvD,QAAMC,yBAAyB,GAAG;AACjC,yBAAqBF,CAAC,CAAE,mBAAF,CADW;AAEjC,oBAAgBA,CAAC,CAAE,cAAF;AAFgB,GAAlC;AAKAC,EAAAA,UAAU,CAACE,OAAX,CAAoBC,SAAS,IAAI;AAChC,QAAKA,SAAS,CAACC,KAAV,IAAmBH,yBAAyB,CAAEE,SAAS,CAACC,KAAZ,CAAjD,EAAuE;AACtED,MAAAA,SAAS,CAACC,KAAV,GAAkBH,yBAAyB,CAAEE,SAAS,CAACC,KAAZ,CAA3C;AACA;;AACD,WAAOD,SAAP;AACA,GALD;AAOA,SAAOH,UAAP;AACA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,mBAAT,CAA8BL,UAA9B,EAA2C;AACjD,QAAMM,QAAQ,GAAG,EAAjB;;AAEA,MAAKN,UAAL,EAAkB;AACjB,SAAM,MAAM,CAAEO,GAAF,EAAOC,KAAP,CAAZ,IAA8BC,MAAM,CAACC,OAAP,CAAgBV,UAAhB,CAA9B,EAA6D;AAC5D,YAAMG,SAAS,GAAGM,MAAM,CAACE,MAAP,CACjB,EADiB,EAEjBH,KAFiB,EAGjB;AAAEI,QAAAA,EAAE,EAAG,OAAOnC,UAAU,CAAE8B,GAAF,CAAS;AAAjC,OAHiB,CAAlB;AAKAD,MAAAA,QAAQ,CAACO,IAAT,CAAeV,SAAf;AACA;AACD;;AAED,SAAOG,QAAP;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/**\n * @module link/utils\n */\n\nimport { upperFirst } from 'lodash-es';\n\nconst ATTRIBUTE_WHITESPACES = /[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205f\\u3000]/g; // eslint-disable-line no-control-regex\nconst SAFE_URL = /^(?:(?:https?|ftps?|mailto):|[^a-z]|[a-z+.-]+(?:[^a-z+.:-]|$))/i;\n\n/**\n * Returns `true` if a given view node is the link element.\n *\n * @param {module:engine/view/node~Node} node\n * @returns {Boolean}\n */\nexport function isLinkElement( node ) {\n\treturn node.is( 'attributeElement' ) && !!node.getCustomProperty( 'link' );\n}\n\n/**\n * Creates link {@link module:engine/view/attributeelement~AttributeElement} with the provided `href` attribute.\n *\n * @param {String} href\n * @returns {module:engine/view/attributeelement~AttributeElement}\n */\nexport function createLinkElement( href, writer ) {\n\t// Priority 5 - https://github.com/ckeditor/ckeditor5-link/issues/121.\n\tconst linkElement = writer.createAttributeElement( 'a', { href }, { priority: 5 } );\n\twriter.setCustomProperty( 'link', true, linkElement );\n\n\treturn linkElement;\n}\n\n/**\n * Returns a safe URL based on a given value.\n *\n * A URL is considered safe if it is safe for the user (does not contain any malicious code).\n *\n * If a URL is considered unsafe, a simple `\"#\"` is returned.\n *\n * @protected\n * @param {*} url\n * @returns {String} Safe URL.\n */\nexport function ensureSafeUrl( url ) {\n\turl = String( url );\n\n\treturn isSafeUrl( url ) ? url : '#';\n}\n\n// Checks whether the given URL is safe for the user (does not contain any malicious code).\n//\n// @param {String} url URL to check.\nfunction isSafeUrl( url ) {\n\tconst normalizedUrl = url.replace( ATTRIBUTE_WHITESPACES, '' );\n\n\treturn normalizedUrl.match( SAFE_URL );\n}\n\n/**\n * Returns the {@link module:link/link~LinkConfig#decorators `config.link.decorators`} configuration processed\n * to respect the locale of the editor, i.e. to display the {@link module:link/link~LinkDecoratorManualDefinition label}\n * in the correct language.\n *\n * **Note**: Only the few most commonly used labels are translated automatically. Other labels should be manually\n * translated in the {@link module:link/link~LinkConfig#decorators `config.link.decorators`} configuration.\n *\n * @param {module:utils/locale~Locale#t} t shorthand for {@link module:utils/locale~Locale#t Locale#t}\n * @param {Array.<module:link/link~LinkDecoratorDefinition>} The decorator reference\n * where the label values should be localized.\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\n */\nexport function getLocalizedDecorators( t, decorators ) {\n\tconst localizedDecoratorsLabels = {\n\t\t'Open in a new tab': t( 'Open in a new tab' ),\n\t\t'Downloadable': t( 'Downloadable' )\n\t};\n\n\tdecorators.forEach( decorator => {\n\t\tif ( decorator.label && localizedDecoratorsLabels[ decorator.label ] ) {\n\t\t\tdecorator.label = localizedDecoratorsLabels[ decorator.label ];\n\t\t}\n\t\treturn decorator;\n\t} );\n\n\treturn decorators;\n}\n\n/**\n * Converts an object with defined decorators to a normalized array of decorators. The `id` key is added for each decorator and\n * is used as the attribute's name in the model.\n *\n * @param {Object.<String, module:link/link~LinkDecoratorDefinition>} decorators\n * @returns {Array.<module:link/link~LinkDecoratorDefinition>}\n */\nexport function normalizeDecorators( decorators ) {\n\tconst retArray = [];\n\n\tif ( decorators ) {\n\t\tfor ( const [ key, value ] of Object.entries( decorators ) ) {\n\t\t\tconst decorator = Object.assign(\n\t\t\t\t{},\n\t\t\t\tvalue,\n\t\t\t\t{ id: `link${ upperFirst( key ) }` }\n\t\t\t);\n\t\t\tretArray.push( decorator );\n\t\t}\n\t}\n\n\treturn retArray;\n}\n"]},"metadata":{},"sourceType":"module"}