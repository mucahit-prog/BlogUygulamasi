{"ast":null,"code":"/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\nconst userAgent = navigator.userAgent.toLowerCase();\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\n\nconst env = {\n  /**\n   * Indicates that the application is running on Macintosh.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isMac: isMac(userAgent),\n\n  /**\n   * Indicates that the application is running in Microsoft Edge.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isEdge: isEdge(userAgent),\n\n  /**\n   * Indicates that the application is running in Firefox (Gecko).\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isGecko: isGecko(userAgent),\n\n  /**\n   * Indicates that the application is running in Safari.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isSafari: isSafari(userAgent),\n\n  /**\n   * Indicates that the application is running on Android mobile device.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  isAndroid: isAndroid(userAgent)\n};\nexport default env;\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\n\nexport function isMac(userAgent) {\n  return userAgent.indexOf('macintosh') > -1;\n}\n/**\n * Checks if User Agent represented by the string is Microsoft Edge.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Edge or not.\n */\n\nexport function isEdge(userAgent) {\n  return !!userAgent.match(/edge\\/(\\d+.?\\d*)/);\n}\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\n\nexport function isGecko(userAgent) {\n  return !!userAgent.match(/gecko\\/\\d+/);\n}\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\n\nexport function isSafari(userAgent) {\n  return userAgent.indexOf(' applewebkit/') > -1 && userAgent.indexOf('chrome') === -1;\n}\n/**\n * Checks if User Agent represented by the string is Android mobile device.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\n\nexport function isAndroid(userAgent) {\n  return userAgent.indexOf('android') > -1;\n}","map":{"version":3,"sources":["C:/Users/Valanis/Desktop/React-Docs-Practice/BlogUygulamasÄ±/client/node_modules/@ckeditor/ckeditor5-image/node_modules/@ckeditor/ckeditor5-utils/src/env.js"],"names":["userAgent","navigator","toLowerCase","env","isMac","isEdge","isGecko","isSafari","isAndroid","indexOf","match"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AAEA,MAAMA,SAAS,GAAGC,SAAS,CAACD,SAAV,CAAoBE,WAApB,EAAlB;AAEA;AACA;AACA;AACA;AACA;;AACA,MAAMC,GAAG,GAAG;AACX;AACD;AACA;AACA;AACA;AACA;AACCC,EAAAA,KAAK,EAAEA,KAAK,CAAEJ,SAAF,CAPD;;AASX;AACD;AACA;AACA;AACA;AACA;AACCK,EAAAA,MAAM,EAAEA,MAAM,CAAEL,SAAF,CAfH;;AAiBX;AACD;AACA;AACA;AACA;AACA;AACCM,EAAAA,OAAO,EAAEA,OAAO,CAAEN,SAAF,CAvBL;;AAyBX;AACD;AACA;AACA;AACA;AACA;AACCO,EAAAA,QAAQ,EAAEA,QAAQ,CAAEP,SAAF,CA/BP;;AAiCX;AACD;AACA;AACA;AACA;AACA;AACCQ,EAAAA,SAAS,EAAEA,SAAS,CAAER,SAAF;AAvCT,CAAZ;AA0CA,eAAeG,GAAf;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,KAAT,CAAgBJ,SAAhB,EAA4B;AAClC,SAAOA,SAAS,CAACS,OAAV,CAAmB,WAAnB,IAAmC,CAAC,CAA3C;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASJ,MAAT,CAAiBL,SAAjB,EAA6B;AACnC,SAAO,CAAC,CAACA,SAAS,CAACU,KAAV,CAAiB,kBAAjB,CAAT;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASJ,OAAT,CAAkBN,SAAlB,EAA8B;AACpC,SAAO,CAAC,CAACA,SAAS,CAACU,KAAV,CAAiB,YAAjB,CAAT;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASH,QAAT,CAAmBP,SAAnB,EAA+B;AACrC,SAAOA,SAAS,CAACS,OAAV,CAAmB,eAAnB,IAAuC,CAAC,CAAxC,IAA6CT,SAAS,CAACS,OAAV,CAAmB,QAAnB,MAAkC,CAAC,CAAvF;AACA;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASD,SAAT,CAAoBR,SAApB,EAAgC;AACtC,SAAOA,SAAS,CAACS,OAAV,CAAmB,SAAnB,IAAiC,CAAC,CAAzC;AACA","sourcesContent":["/**\n * @license Copyright (c) 2003-2019, CKSource - Frederico Knabben. All rights reserved.\n * For licensing, see LICENSE.md or https://ckeditor.com/legal/ckeditor-oss-license\n */\n\n/* globals navigator:false */\n\n/**\n * @module utils/env\n */\n\nconst userAgent = navigator.userAgent.toLowerCase();\n\n/**\n * A namespace containing environment and browser information.\n *\n * @namespace\n */\nconst env = {\n\t/**\n\t * Indicates that the application is running on Macintosh.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisMac: isMac( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Microsoft Edge.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisEdge: isEdge( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Firefox (Gecko).\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisGecko: isGecko( userAgent ),\n\n\t/**\n\t * Indicates that the application is running in Safari.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisSafari: isSafari( userAgent ),\n\n\t/**\n\t * Indicates that the application is running on Android mobile device.\n\t *\n\t * @static\n\t * @type {Boolean}\n\t */\n\tisAndroid: isAndroid( userAgent )\n};\n\nexport default env;\n\n/**\n * Checks if User Agent represented by the string is running on Macintosh.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is running on Macintosh or not.\n */\nexport function isMac( userAgent ) {\n\treturn userAgent.indexOf( 'macintosh' ) > -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Microsoft Edge.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Edge or not.\n */\nexport function isEdge( userAgent ) {\n\treturn !!userAgent.match( /edge\\/(\\d+.?\\d*)/ );\n}\n\n/**\n * Checks if User Agent represented by the string is Firefox (Gecko).\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Firefox or not.\n */\nexport function isGecko( userAgent ) {\n\treturn !!userAgent.match( /gecko\\/\\d+/ );\n}\n\n/**\n * Checks if User Agent represented by the string is Safari.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isSafari( userAgent ) {\n\treturn userAgent.indexOf( ' applewebkit/' ) > -1 && userAgent.indexOf( 'chrome' ) === -1;\n}\n\n/**\n * Checks if User Agent represented by the string is Android mobile device.\n *\n * @param {String} userAgent **Lowercase** `navigator.userAgent` string.\n * @returns {Boolean} Whether User Agent is Safari or not.\n */\nexport function isAndroid( userAgent ) {\n\treturn userAgent.indexOf( 'android' ) > -1;\n}\n"]},"metadata":{},"sourceType":"module"}