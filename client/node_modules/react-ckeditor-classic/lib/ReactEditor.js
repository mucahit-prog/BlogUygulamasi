"use strict";

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _classiceditor = _interopRequireDefault(require("@ckeditor/ckeditor5-editor-classic/src/classiceditor"));

var _editorConfig = _interopRequireDefault(require("./editor-config"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var ReactEditor =
/*#__PURE__*/
function (_PureComponent) {
  (0, _inherits2["default"])(ReactEditor, _PureComponent);

  function ReactEditor(props) {
    var _this;

    (0, _classCallCheck2["default"])(this, ReactEditor);
    _this = (0, _possibleConstructorReturn2["default"])(this, (0, _getPrototypeOf2["default"])(ReactEditor).call(this, props));
    _this.editorRef = _react["default"].createRef();
    _this.editor = null;
    return _this;
  }

  (0, _createClass2["default"])(ReactEditor, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.initializeEditor();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate() {
      var data = this.props.data;

      if (this.editor && this.editor.getData() !== data) {
        this.editor.setData(data);
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      this.destroyEditor();
    }
  }, {
    key: "initializeEditor",
    value: function initializeEditor() {
      var _this2 = this;

      var _this$props = this.props,
          data = _this$props.data,
          config = _this$props.config,
          onChange = _this$props.onChange;

      var mergedConfig = _objectSpread({}, _editorConfig["default"], {
        ckfinder: {
          uploadUrl: config.url
        },
        uploadConfig: _objectSpread({}, config)
      });

      _classiceditor["default"].create(this.editorRef.current, mergedConfig).then(function (editor) {
        _this2.editor = editor;

        if (data) {
          _this2.editor.setData(data);
        }

        var document = _this2.editor.model.document;
        document.on('change:data', function (event) {
          /* istanbul ignore else */
          if (onChange) {
            onChange(editor.getData(), editor, event);
          }
        });
      })["catch"](function (error) {
        console.error(error);
      });
    }
  }, {
    key: "destroyEditor",
    value: function destroyEditor() {
      var _this3 = this;

      if (this.editor) {
        this.editor.destroy().then(function () {
          _this3.editor = null;
        });
      }
    }
  }, {
    key: "render",
    value: function render() {
      return _react["default"].createElement("div", {
        ref: this.editorRef
      });
    }
  }]);
  return ReactEditor;
}(_react.PureComponent);

ReactEditor.propTypes = {
  data: _propTypes["default"].string,
  config: _propTypes["default"].shape({
    url: _propTypes["default"].string,
    headers: _propTypes["default"].shape(_propTypes["default"].any),
    fileName: _propTypes["default"].string
  }),
  onChange: _propTypes["default"].func
};
ReactEditor.defaultProps = {
  data: '',
  config: {
    url: '',
    headers: {},
    fileName: 'file'
  },
  onChange: function onChange() {}
};
var _default = ReactEditor;
exports["default"] = _default;